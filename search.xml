<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Git学习笔记</title>
    <url>/posts/2148.html</url>
    <content><![CDATA[<meta name="referrer" content="no-referrer" />

<h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><h2 id="一、需要掌握的知识点"><a href="#一、需要掌握的知识点" class="headerlink" title="一、需要掌握的知识点"></a>一、需要掌握的知识点</h2><h3 id="1-1、Git"><a href="#1-1、Git" class="headerlink" title="1.1、Git"></a>1.1、Git</h3><p>1、Git介绍，分布式版本控制工具  VS  集中式版本控制工具</p>
<p>2、Git安装，基于官网发布的最新版本2.31.1安装讲解</p>
<p>3、Git命令，基于开发案例，详细讲解git的常用命令</p>
<p>4、Git分支，分支特性，分支创建，分支转换，分支合并，代码合并冲突解决</p>
<p>5、Idea集成Git<br><span id="more"></span></p>
<h3 id="1-2、GitHub"><a href="#1-2、GitHub" class="headerlink" title="1.2、GitHub"></a>1.2、GitHub</h3><p>1、创建远程库</p>
<p>2、代码推送Push</p>
<p>3、代码拉取Pull</p>
<p>4、代码克隆Clone</p>
<p>5、SSH免密登录</p>
<p>6、Idea集成GitHub</p>
<h3 id="1-3、Gitee码云"><a href="#1-3、Gitee码云" class="headerlink" title="1.3、Gitee码云"></a>1.3、Gitee码云</h3><p>1、码云创建远程库</p>
<p>2、Idea集成Gitee码云</p>
<p>3、码云连接GitHub进行代码的复制和迁移</p>
<h3 id="1-4、GitLab"><a href="#1-4、GitLab" class="headerlink" title="1.4、GitLab"></a>1.4、GitLab</h3><p>1、GitLab服务器的搭建和部署</p>
<p>2、Idea集成GitLab</p>
<h2 id="二、课程目标"><a href="#二、课程目标" class="headerlink" title="二、课程目标"></a>二、课程目标</h2><p>五小时熟练掌握Git GitHub GitLab Gitee码云的使用</p>
<h2 id="三、正式学习"><a href="#三、正式学习" class="headerlink" title="三、正式学习"></a>三、正式学习</h2><h3 id="1、Git概述"><a href="#1、Git概述" class="headerlink" title="1、Git概述"></a>1、Git概述</h3><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">Git是一个免费的、开源的分布式版本控制系统，可以快速高效的处理从小型到大型的各种项目。</span><br><span class="line">Git易于学习，占地面积小，性能极快，它有廉价的本地库，方便的暂存区域和多个工作流分支等特性，其性能优于<span class="keyword">Subversion、CVS、Perforce和ClearCase等版本控制工具。</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"></span><br><span class="line">何为版本控制？</span><br><span class="line">版本控制是一种记录文件内容变化，以便将来查阅特定版本修订情况的系统。版本控制其实最重要的是可以记录文件修改历史记录，从而让用户能够查看历史版本，方便版本切换。</span><br></pre></td></tr></table></figure>
<h4 id="为什么需要版本控制？"><a href="#为什么需要版本控制？" class="headerlink" title="为什么需要版本控制？"></a>为什么需要版本控制？</h4><p>进了公司将从个人开发过渡到团队协作</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117173.png" alt="image-20220829153010160"></p>
<h4 id="版本控制工具："><a href="#版本控制工具：" class="headerlink" title="版本控制工具："></a>版本控制工具：</h4><p>1、集中式版本控制工具</p>
<p>CVS、SVN（Subversion)、VSS….</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117175.png" alt="image-20220829153127814"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117176.png" alt="image-20220829153306420"></p>
<p>2、分布式版本控制工具</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117177.png" alt="image-20220829153554598"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117178.png" alt="image-20220829153614462"></p>
<p>每个客户端要连接远程库实现共同版本控制</p>
<h4 id="Git简史："><a href="#Git简史：" class="headerlink" title="Git简史："></a>Git简史：</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117179.png" alt="image-20220829154142979"></p>
<h4 id="Git工作机制"><a href="#Git工作机制" class="headerlink" title="Git工作机制"></a>Git工作机制</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117180.png" alt="image-20220829154712281"></p>
<p>本地库代码还可以推送到远程库。</p>
<p>工作区和暂存区可以随时删除，但提交到本地库之后，要删除就只能是删库跑路了。。</p>
<h4 id="Git和代码托管中心"><a href="#Git和代码托管中心" class="headerlink" title="Git和代码托管中心"></a>Git和代码托管中心</h4><p>代码托管中心是基于网络服务器的远程代码仓库，一般我们简单称为远程库。</p>
<p>局域网：</p>
<p>​    GitLab</p>
<p>互联网：</p>
<p>​    GitHub（外网）</p>
<p>​    Gitee码云（国内网站）</p>
<h3 id="2、Git安装"><a href="#2、Git安装" class="headerlink" title="2、Git安装"></a>2、Git安装</h3><p>官网地址：<a href="https://git-scm.com/">https://git-scm.com/</a></p>
<p>高速下载链接：<a href="https://npm.taobao.org/mirrors/git-for-windows/">https://npm.taobao.org/mirrors/git-for-windows/</a></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117181.png" alt="image-20220829160044244"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117182.png" alt="image-20220829160056636"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117183.png" alt="image-20220829160109046"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117184.png" alt="image-20220829160123572"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117185.png" alt="image-20220829160136324"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117186.png" alt="image-20220829160145425"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117187.png" alt="image-20220829160156208"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117188.png" alt="image-20220829160215454"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117189.png" alt="image-20220829160227122"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117190.png" alt="image-20220829160237767"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117191.png" alt="image-20220829160249976"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117192.png" alt="image-20220829160306733"></p>
<h3 id="3、Git常用命令"><a href="#3、Git常用命令" class="headerlink" title="3、Git常用命令"></a>3、Git常用命令</h3><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117193.png" alt="image-20220829213534095"></p>
<h4 id="1、设置用户签名"><a href="#1、设置用户签名" class="headerlink" title="1、设置用户签名"></a>1、设置用户签名</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117194.png" alt="image-20220829214157532"></p>
<p>配置文件保存在C盘/用户/xiaolin/下</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117196.png" alt="image-20220829214255489"></p>
<h4 id="2、初始化本地库"><a href="#2、初始化本地库" class="headerlink" title="2、初始化本地库"></a>2、初始化本地库</h4><p>1、语法</p>
<p>git init</p>
<p>2、案例实操</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117197.png" alt="image-20220829215643234"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117198.png" alt="image-20220829215716531"></p>
<h4 id="3、查看本地库状态"><a href="#3、查看本地库状态" class="headerlink" title="3、查看本地库状态"></a>3、查看本地库状态</h4><p>1、语法</p>
<p>git status</p>
<p>2、案例实操</p>
<p>新建文件</p>
<p>vim hello.txt</p>
<p>按a,i,o,键进入insert模式</p>
<p>yy是复制</p>
<p>p是粘贴</p>
<p>按esc退出insert模式</p>
<p>:进入行模式</p>
<p>输入wq保存并退出</p>
<p>cat hello.txt 查看文件内容</p>
<p>tail -n 1 hello.txt 查看文件末尾第一行内容</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117199.png" alt="image-20220829221150021"></p>
<h4 id="4、添加到暂存区"><a href="#4、添加到暂存区" class="headerlink" title="4、添加到暂存区"></a>4、添加到暂存区</h4><p>1、语法</p>
<p>git add</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117200.png" alt="image-20220829221654474"></p>
<p>从暂存区删除</p>
<p>git  rm  —cached hello.txt</p>
<h4 id="5、提交到本地库"><a href="#5、提交到本地库" class="headerlink" title="5、提交到本地库"></a>5、提交到本地库</h4><p>1、语法</p>
<p>git commit -m “日志信息”</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117201.png" alt="image-20220829222125425"></p>
<h4 id="6、查看历史记录，版本日志信息"><a href="#6、查看历史记录，版本日志信息" class="headerlink" title="6、查看历史记录，版本日志信息"></a>6、查看历史记录，版本日志信息</h4><p>1、语法</p>
<p>git reflog 查看普通版本信息</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117202.png" alt="image-20220829222334520"></p>
<p>git log 查看详细版本日志信息</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117203.png" alt="image-20220829222426592"></p>
<h4 id="7、修改文件"><a href="#7、修改文件" class="headerlink" title="7、修改文件"></a>7、修改文件</h4><p>再次进入到编辑模式</p>
<p>vim  hello.txt</p>
<p>修改完</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117204.png" alt="image-20220830101928703"></p>
<h4 id="8、版本穿梭"><a href="#8、版本穿梭" class="headerlink" title="8、版本穿梭"></a>8、版本穿梭</h4><p>1、语法</p>
<p>git  reset  —hard  版本号</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117205.png" alt="image-20220830103451478"></p>
<h3 id="4、Git-分支操作"><a href="#4、Git-分支操作" class="headerlink" title="4、Git 分支操作"></a>4、Git 分支操作</h3><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117206.png" alt="image-20220830104137136"></p>
<h4 id="1、什么是分支"><a href="#1、什么是分支" class="headerlink" title="1、什么是分支"></a>1、什么是分支</h4><figure class="highlight"><table><tr><td class="code"><pre><span class="line">在版本控制过程中，同时推进每个任务，为每个任务，我们就可以创建每个任务的单独分支。使用分支意味着程序员可以把自己的工作从开发主线上分离开来，开发自己分支的时候，不会影响主线分支的运行。对于初学者而言，分支可以简单理解为副本，一个分支就是一个单独的副本。（分支底层其实也是指针的引用）</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117207.png" alt="image-20220830104843308"></p>
<h4 id="2、分支的好处"><a href="#2、分支的好处" class="headerlink" title="2、分支的好处"></a>2、分支的好处</h4><figure class="highlight"><table><tr><td class="code"><pre><span class="line">同时并行推进多个功能开发，提高开发效率</span><br><span class="line">各个分支在开发过程中，如果某一个分支开发失败，不会对其他分支有任何影响，失败的分支删除重新开始即可。</span><br></pre></td></tr></table></figure>
<h4 id="3、分支的操作"><a href="#3、分支的操作" class="headerlink" title="3、分支的操作"></a>3、分支的操作</h4><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">命令名称</th>
<th style="text-align:center">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">git branch 分支名</td>
<td style="text-align:center">创建分支</td>
</tr>
<tr>
<td style="text-align:center">git branch -v</td>
<td style="text-align:center">查看分支</td>
</tr>
<tr>
<td style="text-align:center">git checkout 分支名</td>
<td style="text-align:center">切换分支</td>
</tr>
<tr>
<td style="text-align:center">git merge 分支名</td>
<td style="text-align:center">把指定的分支合并到当前分支上</td>
</tr>
</tbody>
</table>
</div>
<h5 id="1、查看分支"><a href="#1、查看分支" class="headerlink" title="1、查看分支"></a>1、查看分支</h5><p>1、语法</p>
<p>git branch</p>
<p>2、案例实操</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117208.png" alt="image-20220830105557201"></p>
<h5 id="2、创建分支"><a href="#2、创建分支" class="headerlink" title="2、创建分支"></a>2、创建分支</h5><p>1、语法</p>
<p>git branch 分支名</p>
<p>2、案例实操</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117209.png" alt="image-20220830105702009"></p>
<h5 id="3、修改分支"><a href="#3、修改分支" class="headerlink" title="3、修改分支"></a>3、修改分支</h5><p>1、语法</p>
<p>在所在分支下：</p>
<p>vim 文件名，修改文件内容并保存</p>
<p>然后git add  文件名  添加到暂存区</p>
<p>git commit -m  版本信息  文件名 添加到本地库</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117210.png" alt="image-20220830110531317"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117211.png" alt="image-20220830110543991"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117212.png" alt="image-20220830110556660"></p>
<h5 id="4、切换分支"><a href="#4、切换分支" class="headerlink" title="4、切换分支"></a>4、切换分支</h5><p>git checkout 分支名</p>
<p>git switch 分支名</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117213.png" alt="image-20220830110011705"></p>
<h5 id="5、合并分支"><a href="#5、合并分支" class="headerlink" title="5、合并分支"></a>5、合并分支</h5><p>1、语法</p>
<p>git merge 分支名</p>
<p>把指定的分支合并到当前分支上</p>
<p>2、案例实操</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117214.png" alt="image-20220830112443270"></p>
<p>3、冲突合并</p>
<p>原因：</p>
<p>合并分支时，两个分支在同一个文件的同一个位置有两套完全不同的修改，Git无法替我们决定使用哪一个，必须人为决定新代码内容。</p>
<p>需要进入到vim编辑模式人为修改</p>
<p>然后重新git add</p>
<p>但是注意git commit -m “版本信息” </p>
<p>后不再加文件名</p>
<p>dd删除行</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117215.png" alt="image-20220830114103181"></p>
<h4 id="4、创建分支和切换分支图解"><a href="#4、创建分支和切换分支图解" class="headerlink" title="4、创建分支和切换分支图解"></a>4、创建分支和切换分支图解</h4><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line"><span class="literal">master</span>、hot-fix其实都是指向具体版本记录的指针，当前所在的分支，其实是由head决定的，所以创建分支的实质就是多创建一个指针。</span><br><span class="line">Head如果指向<span class="literal">master</span>，那么我们现在就在<span class="literal">master</span>分支上...</span><br><span class="line">所以切换分支的本质就是在移动head指针。</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117216.png" alt="image-20220830115538659"></p>
<h3 id="5、Git团队协作机制"><a href="#5、Git团队协作机制" class="headerlink" title="5、Git团队协作机制"></a>5、Git团队协作机制</h3><h4 id="1、团队内协作"><a href="#1、团队内协作" class="headerlink" title="1、团队内协作"></a>1、团队内协作</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117217.png" alt="image-20220830134028541"></p>
<p>岳不群：push推送到代码托管中心（远程库）</p>
<p>令狐冲：clone完整克隆到本地库</p>
<p>令狐冲：修改后push回代码托管中心（远程库），需要获得岳不群的授权。</p>
<p>岳不群：pull拉取令狐冲修改后的代码，同步本地库</p>
<h4 id="2、跨团队协作"><a href="#2、跨团队协作" class="headerlink" title="2、跨团队协作"></a>2、跨团队协作</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117218.png" alt="image-20220830134522363"></p>
<h3 id="6、GitHub操作"><a href="#6、GitHub操作" class="headerlink" title="6、GitHub操作"></a>6、GitHub操作</h3><p>GitHub网址：<a href="https://github.com/">https://github.com/</a></p>
<p>创建三个账号，模拟团队协作</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>账号</th>
<th>姓名</th>
<th>验证邮箱</th>
</tr>
</thead>
<tbody>
<tr>
<td>linXiao01</td>
<td>小林001</td>
<td>1849569695@qq.com</td>
</tr>
<tr>
<td>linXiao02</td>
<td>小林002</td>
<td>2371119023@qq.com</td>
</tr>
<tr>
<td>linXiao03</td>
<td>小林003</td>
<td>623718aa@gmail.com</td>
</tr>
</tbody>
</table>
</div>
<h4 id="1、创建远程库"><a href="#1、创建远程库" class="headerlink" title="1、创建远程库"></a>1、创建远程库</h4><p>linXiao01远程库链接：</p>
<p><a href="https://github.com/linXiao01/git-demo.git">https://github.com/linXiao01/git-demo.git</a></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117219.png" alt="image-20220830144606217"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117220.png" alt="image-20220830144621202"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117221.png" alt="image-20220830145718366"></p>
<h4 id="2、远程仓库操作"><a href="#2、远程仓库操作" class="headerlink" title="2、远程仓库操作"></a>2、远程仓库操作</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117222.png" alt="image-20220830144756424"></p>
<h5 id="1、创建远程库别名"><a href="#1、创建远程库别名" class="headerlink" title="1、创建远程库别名"></a>1、创建远程库别名</h5><p>1、语法</p>
<p>git remove add 别名 远程库地址</p>
<p>git remove -v 查看当前远程库别名</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117223.png" alt="image-20220830145536310"></p>
<h5 id="2、推送本地分支到本地库"><a href="#2、推送本地分支到本地库" class="headerlink" title="2、推送本地分支到本地库"></a>2、推送本地分支到本地库</h5><p>1、语法</p>
<p>git push 远程库名 分支名</p>
<p>第一次push会弹出登录github窗口</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117224.png" alt="image-20220830150305489"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117225.png" alt="image-20220830150254898"></p>
<h5 id="拉取远程库代码到本地库"><a href="#拉取远程库代码到本地库" class="headerlink" title="拉取远程库代码到本地库"></a>拉取远程库代码到本地库</h5><p>git pull 远程库别名 分支名</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117226.png" alt="image-20220830150639313"></p>
<p>会自动提交到本地库</p>
<h5 id="3、克隆远程仓库到本地"><a href="#3、克隆远程仓库到本地" class="headerlink" title="3、克隆远程仓库到本地"></a>3、克隆远程仓库到本地</h5><p>1、语法</p>
<p>git clone 代码链接</p>
<p>2、案例实操</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117227.png" alt="image-20220830151321199"></p>
<p>克隆不需要登录账号</p>
<p>克隆完成的操作：</p>
<ol>
<li>拉取代码</li>
<li>初始化本地仓库</li>
<li>创建别名==&gt;orign</li>
</ol>
<h5 id="4、邀请加入团队"><a href="#4、邀请加入团队" class="headerlink" title="4、邀请加入团队"></a>4、邀请加入团队</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117229.png" alt="image-20220830160057931"></p>
<h5 id="5、拉取远程仓库内容"><a href="#5、拉取远程仓库内容" class="headerlink" title="5、拉取远程仓库内容"></a>5、拉取远程仓库内容</h5><p>1、语法</p>
<p>git pull 远程库别名 分支名</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117230.png" alt="image-20220830162546955"></p>
<h4 id="3、跨团队协作"><a href="#3、跨团队协作" class="headerlink" title="3、跨团队协作"></a>3、跨团队协作</h4><p>1、将远程仓库的地址复制发给邀请跨团队协作的人</p>
<p>被邀请人只需要打开链接，点击右上角fork按钮即可</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117231.png" alt="image-20220830163450606"></p>
<p>可在本地库修改也可以在线修改</p>
<p>修改完点击pull requests</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117232.png" alt="image-20220830163813963"></p>
<p>创建完pull requests</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117233.png" alt="image-20220830164059958"></p>
<p>主人一方可以收到，然后进行审核</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117234.png" alt="image-20220830164042595"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117235.png" alt="image-20220830164140117"></p>
<p>还可以进行对话</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117236.png" alt="image-20220830164835162"></p>
<h4 id="4、SSH免密登录"><a href="#4、SSH免密登录" class="headerlink" title="4、SSH免密登录"></a>4、SSH免密登录</h4><p>在远程仓库中还有一个SSH的地址，也就是说我们还可以使用SSH进行访问。</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117237.png" alt="image-20220830165001094"></p>
<p>具体操作如下：</p>
<p> —进入当前用户的家目录 cd</p>
<p> —删除.ssh 目录  rm -rvf .ssh </p>
<p>生成.ssh目录</p>
<p> ssh-keygen -t rsa -C  邮箱号</p>
<p>敲3次回车键</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117238.png" alt="image-20220830165541421"></p>
<p>读取公共密钥并复制</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117239.png" alt="image-20220830165802383"></p>
<p>打开GitHub=&gt;设置=&gt;SSH and GPG keys</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117240.png" alt="image-20220830165931013"></p>
<p>设置完</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117241.png" alt="image-20220830170625230"></p>
<p>验证pull和push</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117242.png" alt="image-20220830170647943"></p>
<h3 id="7、IDEA-集成-Git"><a href="#7、IDEA-集成-Git" class="headerlink" title="7、IDEA 集成 Git"></a>7、IDEA 集成 Git</h3><h4 id="1、配置Git忽略文件"><a href="#1、配置Git忽略文件" class="headerlink" title="1、配置Git忽略文件"></a>1、配置Git忽略文件</h4><p>1、Eclipse特定文件</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117243.png" alt="image-20220830193735513"></p>
<p>2、idea特定文件</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117244.png" alt="image-20220830193803821"></p>
<p>3、Maven工程的target目录</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117245.png" alt="image-20220830193834013"></p>
<p>为什么要忽略这些？</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">与项目的实际功能无关，不参与服务器上部署运行，把他们忽略掉能够屏蔽IDEA工具之间的差异。</span><br></pre></td></tr></table></figure>
<p>如何忽略？</p>
<figure class="highlight fsharp"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、创建忽略规则文件，xxxx.<span class="built_in">ignore</span>(前缀名随便起，建议是git.<span class="built_in">ignore</span>)</span><br><span class="line">这个文件的存放位置原则上在哪里都可以，为了便于让<span class="operator">~/</span>gitconfig文件引用，建议也放在用户家目录下</span><br></pre></td></tr></table></figure>
<p>git.ignore文件模板：</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Compiled class file</span></span><br><span class="line">*<span class="string">.class</span></span><br><span class="line"><span class="comment"># Log file</span></span><br><span class="line">*<span class="string">.log</span></span><br><span class="line"><span class="comment"># BlueJ files</span></span><br><span class="line">*<span class="string">.ctxt</span></span><br><span class="line"><span class="comment"># Mobile Tools for Java (J2ME)</span></span><br><span class="line"><span class="string">.mtj.tmp/</span></span><br><span class="line"><span class="comment"># Package Files #</span></span><br><span class="line">*<span class="string">.jar</span></span><br><span class="line">*<span class="string">.war</span></span><br><span class="line">*<span class="string">.nar</span></span><br><span class="line">*<span class="string">.ear</span></span><br><span class="line">*<span class="string">.zip</span></span><br><span class="line">*<span class="string">.tar.gz</span></span><br><span class="line">*<span class="string">.rar</span></span><br><span class="line"><span class="comment"># virtual machine crash logs, see </span></span><br><span class="line">http:<span class="string">//www.java.com/en/download/help/error_hotspot.xml</span></span><br><span class="line">hs_err_pid*</span><br><span class="line"><span class="string">.classpath</span></span><br><span class="line"><span class="string">.project</span></span><br><span class="line"><span class="string">.settings</span></span><br><span class="line">target</span><br><span class="line"><span class="string">.idea</span></span><br><span class="line">*<span class="string">.iml</span></span><br></pre></td></tr></table></figure>
<p>2）在.gitconfig 文件中引用忽略配置文件（此文件在 Windows 的家目录中） </p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="selector-attr">[user]</span> </span><br><span class="line">	name = Layne </span><br><span class="line">	email = Layne@atguigu<span class="selector-class">.com</span> </span><br><span class="line"><span class="selector-attr">[core]</span> </span><br><span class="line">	excludesfile = C:/Users/asus/git<span class="selector-class">.ignore</span></span><br><span class="line">注意：这里要使用“正斜线（/）”，不要使用“反斜线（\）</span><br></pre></td></tr></table></figure>
<h4 id="2、定位Git程序"><a href="#2、定位Git程序" class="headerlink" title="2、定位Git程序"></a>2、定位Git程序</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117246.png" alt="image-20220830195257683"></p>
<h4 id="3、初始化本地库"><a href="#3、初始化本地库" class="headerlink" title="3、初始化本地库"></a>3、初始化本地库</h4><p>打开项目、菜单栏VCS=&gt;VCS操作=&gt;创建Git仓库</p>
<h4 id="4、添加到暂存区-1"><a href="#4、添加到暂存区-1" class="headerlink" title="4、添加到暂存区"></a>4、添加到暂存区</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117247.png" alt="image-20220830214513275"></p>
<h4 id="5、提交到本地库-1"><a href="#5、提交到本地库-1" class="headerlink" title="5、提交到本地库"></a>5、提交到本地库</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117248.png" alt="image-20220830214519210"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117249.png" alt="image-20220830214552074"></p>
<h4 id="6、切换版本"><a href="#6、切换版本" class="headerlink" title="6、切换版本"></a>6、切换版本</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117250.png" alt="image-20220830215726447"></p>
<h4 id="7、创建分支"><a href="#7、创建分支" class="headerlink" title="7、创建分支"></a>7、创建分支</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117251.png" alt="image-20220830215843855"></p>
<h4 id="8、切换分支"><a href="#8、切换分支" class="headerlink" title="8、切换分支"></a>8、切换分支</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117252.png" alt="image-20220830220230092"></p>
<h4 id="9、合并分支"><a href="#9、合并分支" class="headerlink" title="9、合并分支"></a>9、合并分支</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117253.png" alt="image-20220830220217759"></p>
<h4 id="10、解决冲突"><a href="#10、解决冲突" class="headerlink" title="10、解决冲突"></a>10、解决冲突</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117254.png" alt="image-20220830221115526"></p>
<h3 id="8、IDEA集成GitHub"><a href="#8、IDEA集成GitHub" class="headerlink" title="8、IDEA集成GitHub"></a>8、IDEA集成GitHub</h3><h4 id="1、设置GitHub账号"><a href="#1、设置GitHub账号" class="headerlink" title="1、设置GitHub账号"></a>1、设置GitHub账号</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117255.png" alt="image-20220830221350223"></p>
<h4 id="2、分享工程到GitHub"><a href="#2、分享工程到GitHub" class="headerlink" title="2、分享工程到GitHub"></a>2、分享工程到GitHub</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117256.png" alt="image-20220830222158145"></p>
<h4 id="3、push推送本地库到远程库"><a href="#3、push推送本地库到远程库" class="headerlink" title="3、push推送本地库到远程库"></a>3、push推送本地库到远程库</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117257.png" alt="image-20220830222957761"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117258.png" alt="image-20220830222512283"></p>
<h4 id="4、pull拉取远程库到本地库"><a href="#4、pull拉取远程库到本地库" class="headerlink" title="4、pull拉取远程库到本地库"></a>4、pull拉取远程库到本地库</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117259.png" alt="image-20220830223909066"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117260.png" alt="image-20220830223207716"></p>
<h4 id="5、clone克隆远程库到本地"><a href="#5、clone克隆远程库到本地" class="headerlink" title="5、clone克隆远程库到本地"></a>5、clone克隆远程库到本地</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117261.png" alt="image-20220830224251621"></p>
<h3 id="9、国内代码托管中心-码云"><a href="#9、国内代码托管中心-码云" class="headerlink" title="9、国内代码托管中心-码云"></a>9、国内代码托管中心-码云</h3><h4 id="1、简介"><a href="#1、简介" class="headerlink" title="1、简介"></a>1、简介</h4><p>GitHub服务器在国外，使用GitHub作为项目托管网站，如果网速不好的话，严重影响使用体验，甚至会登录不上。针对这个情况，我们可以使用国内的项目托管网站-码云。</p>
<p>网址：<a href="https://gitee.com/">https://gitee.com/</a></p>
<p>使用方式和GitHub一样，是中文网站</p>
<h4 id="2、码云账号注册并登录"><a href="#2、码云账号注册并登录" class="headerlink" title="2、码云账号注册并登录"></a>2、码云账号注册并登录</h4><p>账号：15219374123</p>
<p>密码：623718.a</p>
<h4 id="3、码云创建远程库"><a href="#3、码云创建远程库" class="headerlink" title="3、码云创建远程库"></a>3、码云创建远程库</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117262.png" alt="image-20220831003720656"></p>
<h4 id="4、IDEA集成码云"><a href="#4、IDEA集成码云" class="headerlink" title="4、IDEA集成码云"></a>4、IDEA集成码云</h4><p>1、IDEA安装码云插件</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117263.png" alt="image-20220831004120692"></p>
<p>2、IDEA连接码云</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117264.png" alt="image-20220831004946410"></p>
<h4 id="5、码云复制GitHub项目"><a href="#5、码云复制GitHub项目" class="headerlink" title="5、码云复制GitHub项目"></a>5、码云复制GitHub项目</h4><p>新建仓库-》选择导入-》输入GitHub项目http链接-》创建</p>
<p>如何同步？</p>
<p>点击刷新按钮</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117265.png" alt="image-20220831005929662"></p>
<h3 id="10、自建代码托管平台GitLab"><a href="#10、自建代码托管平台GitLab" class="headerlink" title="10、自建代码托管平台GitLab"></a>10、自建代码托管平台GitLab</h3><h4 id="1、GitLab简介"><a href="#1、GitLab简介" class="headerlink" title="1、GitLab简介"></a>1、GitLab简介</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117266.png" alt="image-20220831010204604"></p>
<h4 id="2、GitLab官网地址"><a href="#2、GitLab官网地址" class="headerlink" title="2、GitLab官网地址"></a>2、GitLab官网地址</h4><p>官网地址：<a href="https://about.gitlab.com/">https://about.gitlab.com/</a></p>
<p>安装说明：<a href="https://about.gitlab.com/installation/">https://about.gitlab.com/installation/</a></p>
<h4 id="3、GitLab安装"><a href="#3、GitLab安装" class="headerlink" title="3、GitLab安装"></a>3、GitLab安装</h4><p>1、服务器准备</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117267.png" alt="image-20220831010932738"></p>
<p>2、安装包准备</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117268.png" alt="image-20220831011003904"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142117269.png" alt="image-20220831011031393"></p>
<p>3、编写安装脚本</p>
<p>。。。。</p>
]]></content>
      <categories>
        <category>Git学习笔记</category>
      </categories>
  </entry>
  <entry>
    <title>Maven</title>
    <url>/posts/9478.html</url>
    <content><![CDATA[<meta name="referrer" content="no-referrer" />

<h1 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h1><h2 id="一、小白入门"><a href="#一、小白入门" class="headerlink" title="一、小白入门"></a>一、小白入门</h2><h3 id="第一章、Maven概述"><a href="#第一章、Maven概述" class="headerlink" title="第一章、Maven概述"></a>第一章、Maven概述</h3><h4 id="1、为什么要学习Maven？"><a href="#1、为什么要学习Maven？" class="headerlink" title="1、为什么要学习Maven？"></a>1、为什么要学习Maven？</h4><h5 id="1、Maven作为依赖管理工具"><a href="#1、Maven作为依赖管理工具" class="headerlink" title="1、Maven作为依赖管理工具"></a>1、Maven作为依赖管理工具</h5><ol>
<li><p>jar包的规模</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">随着我们使用越来越多的框架，或者框架封装程度越来越高，项目中使用的jar包也越来越多，项目中，一个模块里面要用到上百个jar包是非常正常的。</span><br></pre></td></tr></table></figure>
</li>
<li><p>比如下面这个例子，我们只用到SpringBoot、SpringCloud框架中的三个功能：</p>
<ul>
<li>Nacos服务器注册发现</li>
<li>Web框架环境</li>
<li>图模块技术Thyme leaf</li>
</ul>
<p>最终导入了106个jar包</p>
<p>而如果使用Maven来引用这些jar包只需要配置三个【依赖】。</p>
<span id="more"></span>
</li>
<li><p>jar包的来源</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140236.png" alt="image-20220831110022323"></p>
</li>
<li><p>jar之间的依赖关系</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140237.png" alt="image-20220831110601393"></p>
</li>
</ol>
<h5 id="2、Maven作为构建管理工具"><a href="#2、Maven作为构建管理工具" class="headerlink" title="2、Maven作为构建管理工具"></a>2、Maven作为构建管理工具</h5><ol>
<li><p>你没有注意过的构建</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">你可以不使用Maven，但是构建必须要做，当我们使用idea进行开发时，构建是idea替我们做的。</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140238.png" alt="image-20220831113538586"></p>
</li>
<li><p>脱离IDE环境仍需构建</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140239.png" alt="image-20220831112311583"></p>
</li>
</ol>
<h5 id="3、结论"><a href="#3、结论" class="headerlink" title="3、结论"></a>3、结论</h5><ol>
<li>管理规模庞大的jar白，需要专门的工具</li>
<li>脱离ide环境执行构建操作，需要专门的工具</li>
</ol>
<h4 id="2、什么是Maven？"><a href="#2、什么是Maven？" class="headerlink" title="2、什么是Maven？"></a>2、什么是Maven？</h4><p>Maven是Apache软件基金会组织维护的一款专门为java项目提供构建和依赖管理支持的工具。</p>
<h5 id="1、构建"><a href="#1、构建" class="headerlink" title="1、构建"></a>1、构建</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140240.png" alt="image-20220831114453023"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140242.png" alt="image-20220831115048795"></p>
<h5 id="2、依赖"><a href="#2、依赖" class="headerlink" title="2、依赖"></a>2、依赖</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140243.png" alt="image-20220831115234443"></p>
<h5 id="3、Maven的工作机制"><a href="#3、Maven的工作机制" class="headerlink" title="3、Maven的工作机制"></a>3、Maven的工作机制</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140244.png" alt="image-20220831115524173"></p>
<h3 id="第二章、Maven核心程序解压和配置"><a href="#第二章、Maven核心程序解压和配置" class="headerlink" title="第二章、Maven核心程序解压和配置"></a>第二章、Maven核心程序解压和配置</h3><h4 id="1、Maven核心程序解压和配置"><a href="#1、Maven核心程序解压和配置" class="headerlink" title="1、Maven核心程序解压和配置"></a>1、Maven核心程序解压和配置</h4><h5 id="1、Maven官网下载及解压"><a href="#1、Maven官网下载及解压" class="headerlink" title="1、Maven官网下载及解压"></a>1、Maven官网下载及解压</h5><p>Maven官网：<a href="https://maven.apache.org/">https://maven.apache.org/</a></p>
<p>windows:下载bin.zip/src.zip</p>
<p>linux:下载tar.gz</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140245.png" alt="image-20220831132602573"></p>
<p>重点关注<strong>conf/settings.xml</strong></p>
<p>bin/mvn.cmd 是mvn可执行文件</p>
<h5 id="2、指定本地仓库"><a href="#2、指定本地仓库" class="headerlink" title="2、指定本地仓库"></a>2、指定本地仓库</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140246.png" alt="image-20220831132912248"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140247.png" alt="image-20220831133220774"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140248.png" alt="image-20220831133408051"></p>
<h5 id="3、配置阿里云提供的镜像仓库"><a href="#3、配置阿里云提供的镜像仓库" class="headerlink" title="3、配置阿里云提供的镜像仓库"></a>3、配置阿里云提供的镜像仓库</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140249.png" alt="image-20220831133533392"></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--阿里云镜像1--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyunId<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/central<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--阿里云镜像2--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--阿里云镜像3--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/nexus/content/repositories/central/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--阿里云镜像4--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://central.maven.org/maven2<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--maven官方镜像--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>mirrorId<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>Human Readable Name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repol.maven.org/maven2/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140250.png" alt="image-20220831134419585"></p>
<h5 id="4、配置Maven工程的基础JDK版本"><a href="#4、配置Maven工程的基础JDK版本" class="headerlink" title="4、配置Maven工程的基础JDK版本"></a>4、配置Maven工程的基础JDK版本</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">profile</span>&gt;</span>  </span><br><span class="line">		<span class="tag">&lt;<span class="name">id</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">id</span>&gt;</span>  </span><br><span class="line">		<span class="tag">&lt;<span class="name">activation</span>&gt;</span>  </span><br><span class="line">			<span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span>  </span><br><span class="line">			<span class="tag">&lt;<span class="name">jdk</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">jdk</span>&gt;</span>  </span><br><span class="line">		<span class="tag">&lt;/<span class="name">activation</span>&gt;</span>  </span><br><span class="line">		<span class="tag">&lt;<span class="name">properties</span>&gt;</span>  </span><br><span class="line">			<span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span>  </span><br><span class="line">			<span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span>  </span><br><span class="line">			<span class="tag">&lt;<span class="name">maven.compiler.compilerVersion</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.compilerVersion</span>&gt;</span>  </span><br><span class="line">		<span class="tag">&lt;/<span class="name">properties</span>&gt;</span>   </span><br><span class="line">	<span class="tag">&lt;/<span class="name">profile</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140251.png" alt="image-20220831134612108"></p>
<h4 id="2、配置环境变量"><a href="#2、配置环境变量" class="headerlink" title="2、配置环境变量"></a>2、配置环境变量</h4><h5 id="1、检查JAVA-HOME配置是否正确"><a href="#1、检查JAVA-HOME配置是否正确" class="headerlink" title="1、检查JAVA_HOME配置是否正确"></a>1、检查JAVA_HOME配置是否正确</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140252.png" alt="image-20220831134737111"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140253.png" alt="image-20220831135031786"></p>
<h5 id="2、配置MAVEN-HOME"><a href="#2、配置MAVEN-HOME" class="headerlink" title="2、配置MAVEN_HOME"></a>2、配置MAVEN_HOME</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140254.png" alt="image-20220831135059223"></p>
<h5 id="3、配置PATH"><a href="#3、配置PATH" class="headerlink" title="3、配置PATH"></a>3、配置PATH</h5><p>将MAVEN_HOME引用到path</p>
<h5 id="4、验证"><a href="#4、验证" class="headerlink" title="4、验证"></a>4、验证</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140255.png" alt="image-20220831135947277"></p>
<h3 id="第三章、使用Maven：命令行环境"><a href="#第三章、使用Maven：命令行环境" class="headerlink" title="第三章、使用Maven：命令行环境"></a>第三章、使用Maven：命令行环境</h3><h4 id="1、根据坐标创建Maven工程"><a href="#1、根据坐标创建Maven工程" class="headerlink" title="1、根据坐标创建Maven工程"></a>1、根据坐标创建Maven工程</h4><h5 id="1、Maven核心概念：坐标"><a href="#1、Maven核心概念：坐标" class="headerlink" title="1、Maven核心概念：坐标"></a>1、Maven核心概念：坐标</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140256.png" alt="image-20220831140407635"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140257.png" alt="image-20220831140505645"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140258.png" alt="image-20220831141235880"></p>
<h5 id="2、实验操作"><a href="#2、实验操作" class="headerlink" title="2、实验操作"></a>2、实验操作</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140259.png" alt="image-20220831141542529"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140260.png" alt="image-20220831141746307"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140261.png" alt="image-20220831141833515"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140262.png" alt="image-20220831142103248"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140263.png" alt="image-20220831142916028"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140265.png" alt="image-20220831142927756"></p>
<p>⑤解读生成的pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- project 标签：根标签，表示对当前工程进行配置、管理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- modelVersion 标签：从maven2 开始就固定是4.0.0。 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 代表当前pom.xml所采用的标签结构--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 坐标信息 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- groupId 标签，坐标向量之一：代表公司或组织开发的某一个项目 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lxg.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- artifactId 标签，坐标向量之一：代表项目下的某一个模块 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-01-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- version 标签：坐标向量之一：代表当前模块的版本 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- packaging 标签：打包方式 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 取值jar：生成jar包，说明这个一个java工程--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 取值jar：生成war包，说明这个一个web工程--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 取值pom：说明这个工程是用来管理其他工程的工程 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>maven-01-java<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.apache.org<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 在Maven中定义属性值 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- properties 标签：在构建过程中读取源码时使用的字符集 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- dependencies 标签：配置具体依赖信息，可以包含多个dependency子标签 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- dependency 标签：配置一个具体的依赖信息  --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	  <span class="comment">&lt;!-- 依赖坐标信息 --&gt;</span></span><br><span class="line">	  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.jupiter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-jupiter-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	  <span class="comment">&lt;!-- scope标签：配置当前依赖的范围--&gt;</span></span><br><span class="line">	  <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h5 id="3、Maven核心概念：POM"><a href="#3、Maven核心概念：POM" class="headerlink" title="3、Maven核心概念：POM"></a>3、Maven核心概念：POM</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140266.png" alt="image-20220831165742601"></p>
<h5 id="4、Maven核心概念：约定的目录结构"><a href="#4、Maven核心概念：约定的目录结构" class="headerlink" title="4、Maven核心概念：约定的目录结构"></a>4、Maven核心概念：约定的目录结构</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140267.png" alt="image-20220831170239214"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140268.png" alt="image-20220831170719811"></p>
<h4 id="2、在Maven工程中编写代码"><a href="#2、在Maven工程中编写代码" class="headerlink" title="2、在Maven工程中编写代码"></a>2、在Maven工程中编写代码</h4><h5 id="1、主体程序"><a href="#1、主体程序" class="headerlink" title="1、主体程序"></a>1、主体程序</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140269.png" alt="image-20220831171025391"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lxg.maven;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Calculator</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> j)</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> i + j;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="2、测试主程序"><a href="#2、测试主程序" class="headerlink" title="2、测试主程序"></a>2、测试主程序</h5><p>测试类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lxg.maven;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> com.lxg.maven.Calculator;</span><br><span class="line"><span class="comment">// 静态导入的效果是将Assert类中的静态资源导入当前类</span></span><br><span class="line"><span class="comment">// 这样一来，在当前类中就可以直接使用Assert类中的静态资源，不需要写类名</span></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CalculatorTest</span>&#123;</span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSum</span><span class="params">()</span>&#123;</span><br><span class="line">		<span class="comment">// 1.创建Calculator对象</span></span><br><span class="line">		<span class="type">Calculator</span> <span class="variable">calculator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Calculator</span>();</span><br><span class="line">		<span class="comment">// 2.调用Calculator对象的方法，获取到程序运行实际的结果</span></span><br><span class="line">		<span class="type">int</span> <span class="variable">actualResult</span> <span class="operator">=</span> calculator.sum(<span class="number">5</span>, <span class="number">3</span>);</span><br><span class="line">		<span class="comment">// 3.声明一个变量，表示程序运行期待的结果</span></span><br><span class="line">		<span class="type">int</span> <span class="variable">expectedResult</span> <span class="operator">=</span> <span class="number">8</span>;</span><br><span class="line">		<span class="comment">// 4.使用断言来判断实际结果和期待结果是否一致</span></span><br><span class="line">		<span class="comment">// 如果一致：测试通过，不会抛出异常</span></span><br><span class="line">		<span class="comment">// 如果不一致：抛出异常，测试失败</span></span><br><span class="line">		assertEquals(expectedResult, actualResult);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="3、执行Maven的构建命令"><a href="#3、执行Maven的构建命令" class="headerlink" title="3、执行Maven的构建命令"></a>3、执行Maven的构建命令</h4><h5 id="1、要求"><a href="#1、要求" class="headerlink" title="1、要求"></a>1、要求</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140270.png" alt="image-20220831172118273"></p>
<h5 id="2、清理工作"><a href="#2、清理工作" class="headerlink" title="2、清理工作"></a>2、清理工作</h5><p>mvn clean</p>
<p>效果：删除target目录</p>
<h5 id="3、编译操作"><a href="#3、编译操作" class="headerlink" title="3、编译操作"></a>3、编译操作</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140271.png" alt="image-20220831172415362"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140272.png" alt="image-20220831172723542"></p>
<h5 id="4、测试操作"><a href="#4、测试操作" class="headerlink" title="4、测试操作"></a>4、测试操作</h5><p>mvn test</p>
<p>测试的报告存放的目录：target/surefile-reports</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140273.png" alt="image-20220831173419533"></p>
<h5 id="5、打包操作"><a href="#5、打包操作" class="headerlink" title="5、打包操作"></a>5、打包操作</h5><p>mvn package</p>
<p>打包的结果—-jar包，存放的目录：target</p>
<h5 id="6、安装操作"><a href="#6、安装操作" class="headerlink" title="6、安装操作"></a>6、安装操作</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140274.png" alt="image-20220831213855308"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140275.png" alt="image-20220831214049578"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140276.png" alt="image-20220831214407293"></p>
<h4 id="4、创建Maven版的Web工程"><a href="#4、创建Maven版的Web工程" class="headerlink" title="4、创建Maven版的Web工程"></a>4、创建Maven版的Web工程</h4><h5 id="1、说明"><a href="#1、说明" class="headerlink" title="1、说明"></a>1、说明</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140277.png" alt="image-20220831214503430"></p>
<h5 id="2、操作"><a href="#2、操作" class="headerlink" title="2、操作"></a>2、操作</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140278.png" alt="image-20220831214819170"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140279.png" alt="image-20220831215131586"></p>
<h5 id="3、生成的pom-xml文件"><a href="#3、生成的pom-xml文件" class="headerlink" title="3、生成的pom.xml文件"></a>3、生成的pom.xml文件</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lxg.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-02-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>maven-02-web Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h5 id="4、生成的Web工程的目录结构"><a href="#4、生成的Web工程的目录结构" class="headerlink" title="4、生成的Web工程的目录结构"></a>4、生成的Web工程的目录结构</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140280.png" alt="image-20220831215544864"></p>
<h5 id="5、创建Servlet"><a href="#5、创建Servlet" class="headerlink" title="5、创建Servlet"></a>5、创建Servlet</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140281.png" alt="image-20220831215622975"></p>
<p>③在包下创建Servlet类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lxg.maven;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span>&#123;</span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> </span><br><span class="line">	ServletException, IOException &#123;</span><br><span class="line">		response.getWriter().write(<span class="string">&quot;hello maven web&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140282.png" alt="image-20220831220559710"></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>helloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.lxg.maven.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>helloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/helloServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="6、在index-jsp页面编写超链接"><a href="#6、在index-jsp页面编写超链接" class="headerlink" title="6、在index.jsp页面编写超链接"></a>6、在index.jsp页面编写超链接</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;helloServlet&quot;</span>&gt;</span>Access Servlet<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="7、编译"><a href="#7、编译" class="headerlink" title="7、编译"></a>7、编译</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140283.png" alt="image-20220831221126734"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140284.png" alt="image-20220831221333429"></p>
<h5 id="8、配置对servlet-api-jar包的依赖"><a href="#8、配置对servlet-api-jar包的依赖" class="headerlink" title="8、配置对servlet-api.jar包的依赖"></a>8、配置对servlet-api.jar包的依赖</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140285.png" alt="image-20220831221425756"></p>
<p>网址：<a href="https://mvnrepository.com/">https://mvnrepository.com/</a></p>
<!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="9、将Web工程打包为war包"><a href="#9、将Web工程打包为war包" class="headerlink" title="9、将Web工程打包为war包"></a>9、将Web工程打包为war包</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140286.png" alt="image-20220831222158585"></p>
<h5 id="10、将war包部署到Tomcat上运行"><a href="#10、将war包部署到Tomcat上运行" class="headerlink" title="10、将war包部署到Tomcat上运行"></a>10、将war包部署到Tomcat上运行</h5><p>将war包的解压包复制到tomcat的webapps目录下，然后启动tomcat服务器即可在浏览器访问</p>
<h4 id="5、让Web工程依赖Java工程"><a href="#5、让Web工程依赖Java工程" class="headerlink" title="5、让Web工程依赖Java工程"></a>5、让Web工程依赖Java工程</h4><h5 id="1、观念"><a href="#1、观念" class="headerlink" title="1、观念"></a>1、观念</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140287.png" alt="image-20220901142034651"></p>
<h5 id="2、操作-1"><a href="#2、操作-1" class="headerlink" title="2、操作"></a>2、操作</h5><p>在web工程的pom.xml文件中，找到dependencies标签，在标签中做如下配置</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lxg.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-01-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="3、在web工程中，编写测试代码"><a href="#3、在web工程中，编写测试代码" class="headerlink" title="3、在web工程中，编写测试代码"></a>3、在web工程中，编写测试代码</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140288.png" alt="image-20220901142845116"></p>
<h5 id="4、执行Maven命令"><a href="#4、执行Maven命令" class="headerlink" title="4、执行Maven命令"></a>4、执行Maven命令</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140289.png" alt="image-20220901143153370"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140290.png" alt="image-20220901143325905"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140291.png" alt="image-20220901143450632"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140292.png" alt="image-20220901143509245"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140293.png" alt="image-20220901143838162"></p>
<h4 id="6、测试依赖范围"><a href="#6、测试依赖范围" class="headerlink" title="6、测试依赖范围"></a>6、测试依赖范围</h4><h5 id="1、依赖范围"><a href="#1、依赖范围" class="headerlink" title="1、依赖范围"></a>1、依赖范围</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140294.png" alt="image-20220901143939437"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140295.png" alt="image-20220901144427266"></p>
<p>部署到服务器是否有效取决于 会不会参与打包。</p>
<p>provided：已提供，说明服务器已经提供了，打包的时候就不要参与进去。</p>
<p>若是服务器已有的你还参与打包了就会发生冲突，常见会抛空指针异常或找不到类异常。</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140296.png" alt="image-20220901151900336"></p>
<h4 id="7、测试依赖的传递性"><a href="#7、测试依赖的传递性" class="headerlink" title="7、测试依赖的传递性"></a>7、测试依赖的传递性</h4><h5 id="1、依赖的传递性"><a href="#1、依赖的传递性" class="headerlink" title="1、依赖的传递性"></a>1、依赖的传递性</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140297.png" alt="image-20220901152234226"></p>
<h5 id="2、使用compile范围依赖spring-core"><a href="#2、使用compile范围依赖spring-core" class="headerlink" title="2、使用compile范围依赖spring-core"></a>2、使用compile范围依赖spring-core</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140298.png" alt="image-20220901152319151"></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140299.png" alt="image-20220901154605985"></p>
<h4 id="8、测试依赖的排除"><a href="#8、测试依赖的排除" class="headerlink" title="8、测试依赖的排除"></a>8、测试依赖的排除</h4><h5 id="1、概念"><a href="#1、概念" class="headerlink" title="1、概念"></a>1、概念</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140300.png" alt="image-20220901154903437"></p>
<h5 id="2、配置方式"><a href="#2、配置方式" class="headerlink" title="2、配置方式"></a>2、配置方式</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lxg.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-01-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 使用excludes标签配置依赖的排除 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 在exclude标签中配置一个具体的排除 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 指定要排除的依赖的坐标（不需要写version） --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h5 id="3、测试"><a href="#3、测试" class="headerlink" title="3、测试"></a>3、测试</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140301.png" alt="image-20220901155541443"></p>
<h4 id="9、继承"><a href="#9、继承" class="headerlink" title="9、继承"></a>9、继承</h4><h5 id="1、概念-1"><a href="#1、概念-1" class="headerlink" title="1、概念"></a>1、概念</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140302.png" alt="image-20220901155816288"></p>
<h5 id="2、作用"><a href="#2、作用" class="headerlink" title="2、作用"></a>2、作用</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140303.png" alt="image-20220901155828018"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140304.png" alt="image-20220901155911100"></p>
<h5 id="3、举例"><a href="#3、举例" class="headerlink" title="3、举例"></a>3、举例</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140305.png" alt="image-20220901160119809"></p>
<h5 id="4、操作"><a href="#4、操作" class="headerlink" title="4、操作"></a>4、操作</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140306.png" alt="image-20220901160146196"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140307.png" alt="image-20220901160528245"></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">module</span>&gt;</span>maven-04-module<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">module</span>&gt;</span>maven-05-module<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">module</span>&gt;</span>maven-06-module<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140308.png" alt="image-20220901162001069"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140309.png" alt="image-20220901162012531"></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 在父工程中统一管理依赖信息  --&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-expression<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140310.png" alt="image-20220901162024166"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140311.png" alt="image-20220901162740938"></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-expression<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140313.png" alt="image-20220901162037203"></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 通过自定义属性，统一指定Spring的版本 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 自定义标签，维护Spring版本数据 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">atguigu.spring.version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">atguigu.spring.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;atguigu.spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h5 id="5、实际意义"><a href="#5、实际意义" class="headerlink" title="5、实际意义"></a>5、实际意义</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140314.png" alt="image-20220901205851170"></p>
<h4 id="10、聚合"><a href="#10、聚合" class="headerlink" title="10、聚合"></a>10、聚合</h4><h5 id="1、聚合本身的含义"><a href="#1、聚合本身的含义" class="headerlink" title="1、聚合本身的含义"></a>1、聚合本身的含义</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140315.png" alt="image-20220901210141589"></p>
<h5 id="2、Maven中的聚合"><a href="#2、Maven中的聚合" class="headerlink" title="2、Maven中的聚合"></a>2、Maven中的聚合</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140316.png" alt="image-20220901210239311"></p>
<h5 id="3、好处"><a href="#3、好处" class="headerlink" title="3、好处"></a>3、好处</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140317.png" alt="image-20220901210254327"></p>
<h5 id="4、聚合的配置"><a href="#4、聚合的配置" class="headerlink" title="4、聚合的配置"></a>4、聚合的配置</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140318.png" alt="image-20220901210403735"></p>
<h5 id="5、依赖循环问题"><a href="#5、依赖循环问题" class="headerlink" title="5、依赖循环问题"></a>5、依赖循环问题</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140319.png" alt="image-20220901210927318"></p>
<h3 id="第四章、使用Maven：IDEA环境"><a href="#第四章、使用Maven：IDEA环境" class="headerlink" title="第四章、使用Maven：IDEA环境"></a>第四章、使用Maven：IDEA环境</h3><h4 id="1、创建父工程"><a href="#1、创建父工程" class="headerlink" title="1、创建父工程"></a>1、创建父工程</h4><h5 id="1、创建Project"><a href="#1、创建Project" class="headerlink" title="1、创建Project"></a>1、创建Project</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140320.png" alt="image-20220901212239792"></p>
<h4 id="2、配置Maven信息"><a href="#2、配置Maven信息" class="headerlink" title="2、配置Maven信息"></a>2、配置Maven信息</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140321.png" alt="image-20220901212618586"></p>
<h4 id="3、创建Java模块工程"><a href="#3、创建Java模块工程" class="headerlink" title="3、创建Java模块工程"></a>3、创建Java模块工程</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140322.png" alt="image-20220901212939127"></p>
<p>测试：</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140323.png" alt="image-20220901213314470"></p>
<p>IDEA执行mvn命令的三种方式：</p>
<p>1、<img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140324.png" alt="image-20220901213538511"></p>
<p>2、<img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140325.png" alt="image-20220901213706121"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140326.png" alt="image-20220901213958716"></p>
<p>跳过test</p>
<p>-D表示后面要附加的参数，字母D和后面的参数是紧挨着的，中间没有任何其他的字符</p>
<p>3、<img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140327.png" alt="image-20220901214304049"></p>
<h4 id="4、创建Web模块工程"><a href="#4、创建Web模块工程" class="headerlink" title="4、创建Web模块工程"></a>4、创建Web模块工程</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140328.png" alt="image-20220901214528244"></p>
<p>运行：</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140329.png" alt="image-20220901222639846"></p>
<h4 id="5、其他操作"><a href="#5、其他操作" class="headerlink" title="5、其他操作"></a>5、其他操作</h4><h5 id="1、工程导入"><a href="#1、工程导入" class="headerlink" title="1、工程导入"></a>1、工程导入</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140330.png" alt="image-20220901223311166"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140331.png" alt="image-20220901223547758"></p>
<h5 id="2、模块导入"><a href="#2、模块导入" class="headerlink" title="2、模块导入"></a>2、模块导入</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140332.png" alt="image-20220901223922325"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140333.png" alt="image-20220901224440940"></p>
<h3 id="第五章、其他核心概念"><a href="#第五章、其他核心概念" class="headerlink" title="第五章、其他核心概念"></a>第五章、其他核心概念</h3><h4 id="1、生命周期"><a href="#1、生命周期" class="headerlink" title="1、生命周期"></a>1、生命周期</h4><p>①作用</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140334.png" alt="image-20220901224739435"></p>
<p>②三个生命周期</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140335.png" alt="image-20220901224903283"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140336.png" alt="image-20220901224954594"></p>
<p>③特点</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140337.png" alt="image-20220901225350599"></p>
<h4 id="2、插件和目标"><a href="#2、插件和目标" class="headerlink" title="2、插件和目标"></a>2、插件和目标</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140338.png" alt="image-20220901225406456"></p>
<h4 id="3、仓库"><a href="#3、仓库" class="headerlink" title="3、仓库"></a>3、仓库</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140339.png" alt="image-20220901225702883"></p>
<h2 id="二、掌握Maven环境开发全流程"><a href="#二、掌握Maven环境开发全流程" class="headerlink" title="二、掌握Maven环境开发全流程"></a>二、掌握Maven环境开发全流程</h2><h2 id="三、Maven技术体系全面覆盖"><a href="#三、Maven技术体系全面覆盖" class="headerlink" title="三、Maven技术体系全面覆盖"></a>三、Maven技术体系全面覆盖</h2><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202210142140340.png" alt="image-20220831105204064"></p>
]]></content>
      <categories>
        <category>Maven</category>
      </categories>
  </entry>
  <entry>
    <title>JDBC</title>
    <url>/posts/5c27.html</url>
    <content><![CDATA[<meta name="referrer" content="no-referrer" />

<h1 id="JDBC核心技术"><a href="#JDBC核心技术" class="headerlink" title="JDBC核心技术"></a>JDBC核心技术</h1><p>讲师：宋红康</p>
<p>微博：尚硅谷-宋红康</p>
<hr>
<h2 id="第1章：JDBC概述"><a href="#第1章：JDBC概述" class="headerlink" title="第1章：JDBC概述"></a>第1章：JDBC概述</h2><h3 id="1-1-数据的持久化"><a href="#1-1-数据的持久化" class="headerlink" title="1.1 数据的持久化"></a>1.1 数据的持久化</h3><ul>
<li><p>持久化(persistence)：<strong>把数据保存到可掉电式存储设备中以供之后使用</strong>。大多数情况下，特别是企业级应用，<strong>数据持久化意味着将内存中的数据保存到硬盘</strong>上加以”固化”<strong>，而持久化的实现过程大多通过各种关系数据库来完成</strong>。</p>
</li>
<li><p>持久化的主要应用是将内存中的数据存储在关系型数据库中，当然也可以存储在磁盘文件、XML数据文件中。</p>
<p><img src="尚硅谷_宋红康_JDBC.assets/1566741430592.png" alt="1566741430592"> </p>
<span id="more"></span>
</li>
</ul>
<h3 id="1-2-Java中的数据存储技术"><a href="#1-2-Java中的数据存储技术" class="headerlink" title="1.2 Java中的数据存储技术"></a>1.2 Java中的数据存储技术</h3><ul>
<li><p>在Java中，数据库存取技术可分为如下几类：</p>
<ul>
<li><strong>JDBC</strong>直接访问数据库</li>
<li><p>JDO (Java Data Object )技术</p>
</li>
<li><p><strong>第三方O/R工具</strong>，如Hibernate, Mybatis 等</p>
</li>
</ul>
</li>
<li><p>JDBC是java访问数据库的基石，JDO、Hibernate、MyBatis等只是更好的封装了JDBC。</p>
</li>
</ul>
<h3 id="1-3-JDBC介绍"><a href="#1-3-JDBC介绍" class="headerlink" title="1.3 JDBC介绍"></a>1.3 JDBC介绍</h3><ul>
<li>JDBC(Java Database Connectivity)是一个<strong>独立于特定数据库管理系统、通用的SQL数据库存取和操作的公共接口</strong>（一组API），定义了用来访问数据库的标准Java类库，（<strong>java.sql,javax.sql</strong>）使用这些类库可以以一种<strong>标准</strong>的方法、方便地访问数据库资源。</li>
<li>JDBC为访问不同的数据库提供了一种<strong>统一的途径</strong>，为开发者屏蔽了一些细节问题。</li>
<li>JDBC的目标是使Java程序员使用JDBC可以连接任何<strong>提供了JDBC驱动程序</strong>的数据库系统，这样就使得程序员无需对特定的数据库系统的特点有过多的了解，从而大大简化和加快了开发过程。</li>
<li>如果没有JDBC，那么Java程序访问数据库时是这样的：</li>
</ul>
<p><img src="尚硅谷_宋红康_JDBC.assets/1555575760234.png" alt="1555575760234"></p>
<hr>
<ul>
<li>有了JDBC，Java程序访问数据库时是这样的：</li>
</ul>
<p><img src="尚硅谷_宋红康_JDBC.assets/1555575981203.png" alt="1555575981203"></p>
<hr>
<ul>
<li>总结如下：</li>
</ul>
<p><img src="尚硅谷_宋红康_JDBC.assets/1566741692804.png" alt="1566741692804"></p>
<h3 id="1-4-JDBC体系结构"><a href="#1-4-JDBC体系结构" class="headerlink" title="1.4 JDBC体系结构"></a>1.4 JDBC体系结构</h3><ul>
<li>JDBC接口（API）包括两个层次：<ul>
<li><strong>面向应用的API</strong>：Java API，抽象接口，供应用程序开发人员使用（连接数据库，执行SQL语句，获得结果）。</li>
<li><strong>面向数据库的API</strong>：Java Driver API，供开发商开发数据库驱动程序用。</li>
</ul>
</li>
</ul>
<blockquote>
<p><strong>JDBC是sun公司提供一套用于数据库操作的接口，java程序员只需要面向这套接口编程即可。</strong></p>
<p><strong>不同的数据库厂商，需要针对这套接口，提供不同实现。不同的实现的集合，即为不同数据库的驱动。                                                                ————面向接口编程</strong></p>
</blockquote>
<h3 id="1-5-JDBC程序编写步骤"><a href="#1-5-JDBC程序编写步骤" class="headerlink" title="1.5 JDBC程序编写步骤"></a>1.5 JDBC程序编写步骤</h3><p><img src="尚硅谷_宋红康_JDBC.assets/1565969323908.png" alt="1565969323908"></p>
<blockquote>
<p>补充：ODBC(<strong>Open Database Connectivity</strong>，开放式数据库连接)，是微软在Windows平台下推出的。使用者在程序中只需要调用ODBC API，由 ODBC 驱动程序将调用转换成为对特定的数据库的调用请求。</p>
</blockquote>
<h2 id="第2章：获取数据库连接"><a href="#第2章：获取数据库连接" class="headerlink" title="第2章：获取数据库连接"></a>第2章：获取数据库连接</h2><h3 id="2-1-要素一：Driver接口实现类"><a href="#2-1-要素一：Driver接口实现类" class="headerlink" title="2.1 要素一：Driver接口实现类"></a>2.1 要素一：Driver接口实现类</h3><h4 id="2-1-1-Driver接口介绍"><a href="#2-1-1-Driver接口介绍" class="headerlink" title="2.1.1 Driver接口介绍"></a>2.1.1 Driver接口介绍</h4><ul>
<li><p>java.sql.Driver 接口是所有 JDBC 驱动程序需要实现的接口。这个接口是提供给数据库厂商使用的，不同数据库厂商提供不同的实现。</p>
</li>
<li><p>在程序中不需要直接去访问实现了 Driver 接口的类，而是由驱动程序管理器类(java.sql.DriverManager)去调用这些Driver实现。</p>
<ul>
<li>Oracle的驱动：<strong>oracle.jdbc.driver.OracleDriver</strong></li>
<li>mySql的驱动： <strong>com.mysql.jdbc.Driver</strong></li>
</ul>
</li>
</ul>
<p><img src="尚硅谷_宋红康_JDBC.assets/1555576157618.png" alt="1555576157618"></p>
<p><img src="尚硅谷_宋红康_JDBC.assets/1555576170074.png" alt="1555576170074"></p>
<ul>
<li><p>将上述jar包拷贝到Java工程的一个目录中，习惯上新建一个lib文件夹。</p>
<p><img src="尚硅谷_宋红康_JDBC.assets/1566134718955.png" alt="1566134718955"></p>
</li>
</ul>
<p>在驱动jar上右键—&gt;Build Path—&gt;Add to Build Path</p>
<p> <img src="尚硅谷_宋红康_JDBC.assets/1566134781682.png" alt="1566134781682"></p>
<p>注意：如果是Dynamic Web Project（动态的web项目）话，则是把驱动jar放到WebContent（有的开发工具叫WebRoot）目录中的WEB-INF目录中的lib目录下即可</p>
<p> <img src="尚硅谷_宋红康_JDBC.assets/1566135290460.png" alt="1566135290460"></p>
<h4 id="2-1-2-加载与注册JDBC驱动"><a href="#2-1-2-加载与注册JDBC驱动" class="headerlink" title="2.1.2 加载与注册JDBC驱动"></a>2.1.2 加载与注册JDBC驱动</h4><ul>
<li><p>加载驱动：加载 JDBC 驱动需调用 Class 类的静态方法 forName()，向其传递要加载的 JDBC 驱动的类名</p>
<ul>
<li><strong>Class.forName(“com.mysql.jdbc.Driver”);</strong></li>
</ul>
</li>
<li><p>注册驱动：DriverManager 类是驱动程序管理器类，负责管理驱动程序</p>
<ul>
<li><p><strong>使用DriverManager.registerDriver(com.mysql.jdbc.Driver)来注册驱动</strong></p>
</li>
<li><p>通常不用显式调用 DriverManager 类的 registerDriver() 方法来注册驱动程序类的实例，因为 Driver 接口的驱动程序类<strong>都</strong>包含了静态代码块，在这个静态代码块中，会调用 DriverManager.registerDriver() 方法来注册自身的一个实例。下图是MySQL的Driver实现类的源码：</p>
<p><img src="尚硅谷_宋红康_JDBC.assets/1566136831283.png" alt="1566136831283"></p>
</li>
</ul>
</li>
</ul>
<h3 id="2-2-要素二：URL"><a href="#2-2-要素二：URL" class="headerlink" title="2.2 要素二：URL"></a>2.2 要素二：URL</h3><ul>
<li><p>JDBC URL 用于标识一个被注册的驱动程序，驱动程序管理器通过这个 URL 选择正确的驱动程序，从而建立到数据库的连接。</p>
</li>
<li><p>JDBC URL的标准由三部分组成，各部分间用冒号分隔。 </p>
<ul>
<li><strong>jdbc:子协议:子名称</strong></li>
<li><strong>协议</strong>：JDBC URL中的协议总是jdbc </li>
<li><strong>子协议</strong>：子协议用于标识一个数据库驱动程序</li>
<li><strong>子名称</strong>：一种标识数据库的方法。子名称可以依不同的子协议而变化，用子名称的目的是为了<strong>定位数据库</strong>提供足够的信息。包含<strong>主机名</strong>(对应服务端的ip地址)<strong>，端口号，数据库名</strong></li>
</ul>
</li>
<li><p>举例：</p>
<p><img src="尚硅谷_宋红康_JDBC.assets/1555576477107.png" alt="1555576477107"></p>
</li>
<li><p><strong>几种常用数据库的 JDBC URL</strong></p>
<ul>
<li><p>MySQL的连接URL编写方式：</p>
<ul>
<li>jdbc:mysql://主机名称:mysql服务端口号/数据库名称?参数=值&amp;参数=值</li>
<li>jdbc:mysql://localhost:3306/atguigu</li>
<li>jdbc:mysql://localhost:3306/atguigu<strong>?useUnicode=true&amp;characterEncoding=utf8</strong>（如果JDBC程序与服务器端的字符集不一致，会导致乱码，那么可以通过参数指定服务器端的字符集）</li>
<li>jdbc:mysql://localhost:3306/atguigu?user=root&amp;password=123456</li>
</ul>
</li>
<li><p>Oracle 9i的连接URL编写方式：</p>
<ul>
<li>jdbc:oracle:thin:@主机名称:oracle服务端口号:数据库名称</li>
<li>jdbc:oracle:thin:@localhost:1521:atguigu</li>
</ul>
</li>
<li><p>SQLServer的连接URL编写方式：</p>
<ul>
<li><p>jdbc:sqlserver://主机名称:sqlserver服务端口号:DatabaseName=数据库名称</p>
</li>
<li><p>jdbc:sqlserver://localhost:1433:DatabaseName=atguigu</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="2-3-要素三：用户名和密码"><a href="#2-3-要素三：用户名和密码" class="headerlink" title="2.3 要素三：用户名和密码"></a>2.3 要素三：用户名和密码</h3><ul>
<li>user,password可以用“属性名=属性值”方式告诉数据库</li>
<li>可以调用 DriverManager 类的 getConnection() 方法建立到数据库的连接</li>
</ul>
<h3 id="2-4-数据库连接方式举例"><a href="#2-4-数据库连接方式举例" class="headerlink" title="2.4 数据库连接方式举例"></a>2.4 数据库连接方式举例</h3><h4 id="2-4-1-连接方式一"><a href="#2-4-1-连接方式一" class="headerlink" title="2.4.1 连接方式一"></a>2.4.1 连接方式一</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testConnection1</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="comment">//1.提供java.sql.Driver接口实现类的对象</span></span><br><span class="line">           <span class="type">Driver</span> <span class="variable">driver</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">           driver = <span class="keyword">new</span> <span class="title class_">com</span>.mysql.jdbc.Driver();</span><br><span class="line"></span><br><span class="line">           <span class="comment">//2.提供url，指明具体操作的数据</span></span><br><span class="line">           <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/test&quot;</span>;</span><br><span class="line"></span><br><span class="line">           <span class="comment">//3.提供Properties的对象，指明用户名和密码</span></span><br><span class="line">           <span class="type">Properties</span> <span class="variable">info</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">           info.setProperty(<span class="string">&quot;user&quot;</span>, <span class="string">&quot;root&quot;</span>);</span><br><span class="line">           info.setProperty(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;abc123&quot;</span>);</span><br><span class="line"></span><br><span class="line">           <span class="comment">//4.调用driver的connect()，获取连接</span></span><br><span class="line">           <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> driver.connect(url, info);</span><br><span class="line">           System.out.println(conn);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>说明：上述代码中显式出现了第三方数据库的API</p>
</blockquote>
<h4 id="2-4-2-连接方式二"><a href="#2-4-2-连接方式二" class="headerlink" title="2.4.2 连接方式二"></a>2.4.2 连接方式二</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testConnection2</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="comment">//1.实例化Driver</span></span><br><span class="line">           <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> <span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>;</span><br><span class="line">           <span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(className);</span><br><span class="line">           <span class="type">Driver</span> <span class="variable">driver</span> <span class="operator">=</span> (Driver) clazz.newInstance();</span><br><span class="line"></span><br><span class="line">           <span class="comment">//2.提供url，指明具体操作的数据</span></span><br><span class="line">           <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/test&quot;</span>;</span><br><span class="line"></span><br><span class="line">           <span class="comment">//3.提供Properties的对象，指明用户名和密码</span></span><br><span class="line">           <span class="type">Properties</span> <span class="variable">info</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">           info.setProperty(<span class="string">&quot;user&quot;</span>, <span class="string">&quot;root&quot;</span>);</span><br><span class="line">           info.setProperty(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;abc123&quot;</span>);</span><br><span class="line"></span><br><span class="line">           <span class="comment">//4.调用driver的connect()，获取连接</span></span><br><span class="line">           <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> driver.connect(url, info);</span><br><span class="line">           System.out.println(conn);</span><br><span class="line"></span><br><span class="line">       &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>说明：相较于方式一，这里使用反射实例化Driver，不在代码中体现第三方数据库的API。体现了面向接口编程思想。</p>
</blockquote>
<h4 id="2-4-3-连接方式三"><a href="#2-4-3-连接方式三" class="headerlink" title="2.4.3 连接方式三"></a>2.4.3 连接方式三</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testConnection3</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="comment">//1.数据库连接的4个基本要素：</span></span><br><span class="line">           <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/test&quot;</span>;</span><br><span class="line">           <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">           <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;abc123&quot;</span>;</span><br><span class="line">           <span class="type">String</span> <span class="variable">driverName</span> <span class="operator">=</span> <span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>;</span><br><span class="line"></span><br><span class="line">           <span class="comment">//2.实例化Driver</span></span><br><span class="line">           <span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(driverName);</span><br><span class="line">           <span class="type">Driver</span> <span class="variable">driver</span> <span class="operator">=</span> (Driver) clazz.newInstance();</span><br><span class="line">           <span class="comment">//3.注册驱动</span></span><br><span class="line">           DriverManager.registerDriver(driver);</span><br><span class="line">           <span class="comment">//4.获取连接</span></span><br><span class="line">           <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> DriverManager.getConnection(url, user, password);</span><br><span class="line">           System.out.println(conn);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>说明：使用DriverManager实现数据库的连接。体会获取连接必要的4个基本要素。</p>
</blockquote>
<h4 id="2-4-4-连接方式四"><a href="#2-4-4-连接方式四" class="headerlink" title="2.4.4 连接方式四"></a>2.4.4 连接方式四</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testConnection4</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="comment">//1.数据库连接的4个基本要素：</span></span><br><span class="line">           <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/test&quot;</span>;</span><br><span class="line">           <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">           <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;abc123&quot;</span>;</span><br><span class="line">           <span class="type">String</span> <span class="variable">driverName</span> <span class="operator">=</span> <span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>;</span><br><span class="line"></span><br><span class="line">           <span class="comment">//2.加载驱动 （①实例化Driver ②注册驱动）</span></span><br><span class="line">           Class.forName(driverName);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           <span class="comment">//Driver driver = (Driver) clazz.newInstance();</span></span><br><span class="line">           <span class="comment">//3.注册驱动</span></span><br><span class="line">           <span class="comment">//DriverManager.registerDriver(driver);</span></span><br><span class="line">           <span class="comment">/*</span></span><br><span class="line"><span class="comment">           可以注释掉上述代码的原因，是因为在mysql的Driver类中声明有：</span></span><br><span class="line"><span class="comment">           static &#123;</span></span><br><span class="line"><span class="comment">               try &#123;</span></span><br><span class="line"><span class="comment">                   DriverManager.registerDriver(new Driver());</span></span><br><span class="line"><span class="comment">               &#125; catch (SQLException var1) &#123;</span></span><br><span class="line"><span class="comment">                   throw new RuntimeException(&quot;Can&#x27;t register driver!&quot;);</span></span><br><span class="line"><span class="comment">               &#125;</span></span><br><span class="line"><span class="comment">           &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           <span class="comment">//3.获取连接</span></span><br><span class="line">           <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> DriverManager.getConnection(url, user, password);</span><br><span class="line">           System.out.println(conn);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>说明：不必显式的注册驱动了。因为在DriverManager的源码中已经存在静态代码块，实现了驱动的注册。</p>
</blockquote>
<h4 id="2-4-5-连接方式五-最终版"><a href="#2-4-5-连接方式五-最终版" class="headerlink" title="2.4.5 连接方式五(最终版)"></a>2.4.5 连接方式五(最终版)</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span>  <span class="keyword">void</span> <span class="title function_">testConnection5</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">   	<span class="comment">//1.加载配置文件</span></span><br><span class="line">       <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> ConnectionTest.class.getClassLoader().getResourceAsStream(<span class="string">&quot;jdbc.properties&quot;</span>);</span><br><span class="line">       <span class="type">Properties</span> <span class="variable">pros</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">       pros.load(is);</span><br><span class="line">       </span><br><span class="line">       <span class="comment">//2.读取配置信息</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> pros.getProperty(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">       <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> pros.getProperty(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">       <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> pros.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">       <span class="type">String</span> <span class="variable">driverClass</span> <span class="operator">=</span> pros.getProperty(<span class="string">&quot;driverClass&quot;</span>);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//3.加载驱动</span></span><br><span class="line">       Class.forName(driverClass);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//4.获取连接</span></span><br><span class="line">       <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> DriverManager.getConnection(url,user,password);</span><br><span class="line">       System.out.println(conn);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<p>其中，配置文件声明在工程的src目录下：【jdbc.properties】</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">user</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">abc123</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/test</span></span><br><span class="line"><span class="attr">driverClass</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>说明：使用配置文件的方式保存配置信息，在代码中加载配置文件</p>
<p><strong>使用配置文件的好处：</strong></p>
<p>①实现了代码和数据的分离，如果需要修改配置信息，直接在配置文件中修改，不需要深入代码<br>②如果修改了配置信息，省去重新编译的过程。</p>
</blockquote>
<h2 id="第3章：使用PreparedStatement实现CRUD操作"><a href="#第3章：使用PreparedStatement实现CRUD操作" class="headerlink" title="第3章：使用PreparedStatement实现CRUD操作"></a>第3章：使用PreparedStatement实现CRUD操作</h2><h3 id="3-1-操作和访问数据库"><a href="#3-1-操作和访问数据库" class="headerlink" title="3.1 操作和访问数据库"></a>3.1 操作和访问数据库</h3><ul>
<li><p>数据库连接被用于向数据库服务器发送命令和 SQL 语句，并接受数据库服务器返回的结果。其实一个数据库连接就是一个Socket连接。</p>
</li>
<li><p>在 java.sql 包中有 3 个接口分别定义了对数据库的调用的不同方式：</p>
<ul>
<li>Statement：用于执行静态 SQL 语句并返回它所生成结果的对象。 </li>
<li>PrepatedStatement：SQL 语句被预编译并存储在此对象中，可以使用此对象多次高效地执行该语句。</li>
<li>CallableStatement：用于执行 SQL 存储过程</li>
</ul>
<p><img src="尚硅谷_宋红康_JDBC.assets/1566573842140.png" alt="1566573842140"></p>
</li>
</ul>
<h3 id="3-2-使用Statement操作数据表的弊端"><a href="#3-2-使用Statement操作数据表的弊端" class="headerlink" title="3.2 使用Statement操作数据表的弊端"></a>3.2 使用Statement操作数据表的弊端</h3><ul>
<li><p>通过调用 Connection 对象的 createStatement() 方法创建该对象。该对象用于执行静态的 SQL 语句，并且返回执行结果。</p>
</li>
<li><p>Statement 接口中定义了下列方法用于执行 SQL 语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> excuteUpdate(String <span class="keyword">sql</span>)：执行更新操作<span class="keyword">INSERT</span>、<span class="keyword">UPDATE</span>、<span class="keyword">DELETE</span></span><br><span class="line">ResultSet executeQuery(String <span class="keyword">sql</span>)：执行查询操作<span class="keyword">SELECT</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>但是使用Statement操作数据表存在弊端：</p>
<ul>
<li><strong>问题一：存在拼串操作，繁琐</strong></li>
<li><strong>问题二：存在SQL注入问题</strong></li>
</ul>
</li>
<li><p>SQL 注入是利用某些系统没有对用户输入的数据进行充分的检查，而在用户输入数据中注入非法的 SQL 语句段或命令(如：SELECT user, password FROM user_table WHERE user=’a’ OR 1 = ‘ AND password = ‘ OR ‘1’ = ‘1’) ，从而利用系统的 SQL 引擎完成恶意行为的做法。</p>
</li>
<li><p>对于 Java 而言，要防范 SQL 注入，只要用 PreparedStatement(从Statement扩展而来) 取代 Statement 就可以了。</p>
</li>
<li><p>代码演示：</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StatementTest</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 使用Statement的弊端：需要拼写sql语句，并且存在SQL注入的问题</span></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testLogin</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="type">Scanner</span> <span class="variable">scan</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">		System.out.print(<span class="string">&quot;用户名：&quot;</span>);</span><br><span class="line">		<span class="type">String</span> <span class="variable">userName</span> <span class="operator">=</span> scan.nextLine();</span><br><span class="line">		System.out.print(<span class="string">&quot;密   码：&quot;</span>);</span><br><span class="line">		<span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> scan.nextLine();</span><br><span class="line"></span><br><span class="line">		<span class="comment">// SELECT user,password FROM user_table WHERE USER = &#x27;1&#x27; or &#x27; AND PASSWORD = &#x27;=&#x27;1&#x27; or &#x27;1&#x27; = &#x27;1&#x27;;</span></span><br><span class="line">		<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;SELECT user,password FROM user_table WHERE USER = &#x27;&quot;</span> + userName + <span class="string">&quot;&#x27; AND PASSWORD = &#x27;&quot;</span> + password</span><br><span class="line">				+ <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">		<span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> get(sql, User.class);</span><br><span class="line">		<span class="keyword">if</span> (user != <span class="literal">null</span>) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;登陆成功!&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;用户名或密码错误！&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 使用Statement实现对数据表的查询操作</span></span><br><span class="line">	<span class="keyword">public</span> &lt;T&gt; T <span class="title function_">get</span><span class="params">(String sql, Class&lt;T&gt; clazz)</span> &#123;</span><br><span class="line">		<span class="type">T</span> <span class="variable">t</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">		<span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="type">Statement</span> <span class="variable">st</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="comment">// 1.加载配置文件</span></span><br><span class="line">			<span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> StatementTest.class.getClassLoader().getResourceAsStream(<span class="string">&quot;jdbc.properties&quot;</span>);</span><br><span class="line">			<span class="type">Properties</span> <span class="variable">pros</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">			pros.load(is);</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 2.读取配置信息</span></span><br><span class="line">			<span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> pros.getProperty(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">			<span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> pros.getProperty(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">			<span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> pros.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">			<span class="type">String</span> <span class="variable">driverClass</span> <span class="operator">=</span> pros.getProperty(<span class="string">&quot;driverClass&quot;</span>);</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 3.加载驱动</span></span><br><span class="line">			Class.forName(driverClass);</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 4.获取连接</span></span><br><span class="line">			conn = DriverManager.getConnection(url, user, password);</span><br><span class="line"></span><br><span class="line">			st = conn.createStatement();</span><br><span class="line"></span><br><span class="line">			rs = st.executeQuery(sql);</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 获取结果集的元数据</span></span><br><span class="line">			<span class="type">ResultSetMetaData</span> <span class="variable">rsmd</span> <span class="operator">=</span> rs.getMetaData();</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 获取结果集的列数</span></span><br><span class="line">			<span class="type">int</span> <span class="variable">columnCount</span> <span class="operator">=</span> rsmd.getColumnCount();</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> (rs.next()) &#123;</span><br><span class="line"></span><br><span class="line">				t = clazz.newInstance();</span><br><span class="line"></span><br><span class="line">				<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; columnCount; i++) &#123;</span><br><span class="line">					<span class="comment">// //1. 获取列的名称</span></span><br><span class="line">					<span class="comment">// String columnName = rsmd.getColumnName(i+1);</span></span><br><span class="line"></span><br><span class="line">					<span class="comment">// 1. 获取列的别名</span></span><br><span class="line">					<span class="type">String</span> <span class="variable">columnName</span> <span class="operator">=</span> rsmd.getColumnLabel(i + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">					<span class="comment">// 2. 根据列名获取对应数据表中的数据</span></span><br><span class="line">					<span class="type">Object</span> <span class="variable">columnVal</span> <span class="operator">=</span> rs.getObject(columnName);</span><br><span class="line"></span><br><span class="line">					<span class="comment">// 3. 将数据表中得到的数据，封装进对象</span></span><br><span class="line">					<span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> clazz.getDeclaredField(columnName);</span><br><span class="line">					field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">					field.set(t, columnVal);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">return</span> t;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">			<span class="comment">// 关闭资源</span></span><br><span class="line">			<span class="keyword">if</span> (rs != <span class="literal">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					rs.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (st != <span class="literal">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					st.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> (conn != <span class="literal">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					conn.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>综上：</p>
<p><img src="尚硅谷_宋红康_JDBC.assets/1566569819744.png" alt="1566569819744"></p>
<h3 id="3-3-PreparedStatement的使用"><a href="#3-3-PreparedStatement的使用" class="headerlink" title="3.3 PreparedStatement的使用"></a>3.3 PreparedStatement的使用</h3><h4 id="3-3-1-PreparedStatement介绍"><a href="#3-3-1-PreparedStatement介绍" class="headerlink" title="3.3.1 PreparedStatement介绍"></a>3.3.1 PreparedStatement介绍</h4><ul>
<li><p>可以通过调用 Connection 对象的 <strong>preparedStatement(String sql)</strong> 方法获取 PreparedStatement 对象</p>
</li>
<li><p><strong>PreparedStatement 接口是 Statement 的子接口，它表示一条预编译过的 SQL 语句</strong></p>
</li>
<li><p>PreparedStatement 对象所代表的 SQL 语句中的参数用问号(?)来表示，调用 PreparedStatement 对象的 setXxx() 方法来设置这些参数. setXxx() 方法有两个参数，第一个参数是要设置的 SQL 语句中的参数的索引(从 1 开始)，第二个是设置的 SQL 语句中的参数的值</p>
</li>
</ul>
<h4 id="3-3-2-PreparedStatement-vs-Statement"><a href="#3-3-2-PreparedStatement-vs-Statement" class="headerlink" title="3.3.2 PreparedStatement vs Statement"></a>3.3.2 PreparedStatement vs Statement</h4><ul>
<li><p>代码的可读性和可维护性。</p>
</li>
<li><p><strong>PreparedStatement 能最大可能提高性能：</strong></p>
<ul>
<li>DBServer会对<strong>预编译</strong>语句提供性能优化。因为预编译语句有可能被重复调用，所以<u>语句在被DBServer的编译器编译后的执行代码被缓存下来，那么下次调用时只要是相同的预编译语句就不需要编译，只要将参数直接传入编译过的语句执行代码中就会得到执行。</u></li>
<li>在statement语句中,即使是相同操作但因为数据内容不一样,所以整个语句本身不能匹配,没有缓存语句的意义.事实是没有数据库会对普通语句编译后的执行代码缓存。这样<u>每执行一次都要对传入的语句编译一次。</u></li>
<li>(语法检查，语义检查，翻译成二进制命令，缓存)</li>
</ul>
</li>
<li><p>PreparedStatement 可以防止 SQL 注入 </p>
</li>
</ul>
<h4 id="3-3-3-Java与SQL对应数据类型转换表"><a href="#3-3-3-Java与SQL对应数据类型转换表" class="headerlink" title="3.3.3 Java与SQL对应数据类型转换表"></a>3.3.3 Java与SQL对应数据类型转换表</h4><div class="table-container">
<table>
<thead>
<tr>
<th>Java类型</th>
<th>SQL类型</th>
</tr>
</thead>
<tbody>
<tr>
<td>boolean</td>
<td>BIT</td>
</tr>
<tr>
<td>byte</td>
<td>TINYINT</td>
</tr>
<tr>
<td>short</td>
<td>SMALLINT</td>
</tr>
<tr>
<td>int</td>
<td>INTEGER</td>
</tr>
<tr>
<td>long</td>
<td>BIGINT</td>
</tr>
<tr>
<td>String</td>
<td>CHAR,VARCHAR,LONGVARCHAR</td>
</tr>
<tr>
<td>byte   array</td>
<td>BINARY  ,    VAR BINARY</td>
</tr>
<tr>
<td>java.sql.Date</td>
<td>DATE</td>
</tr>
<tr>
<td>java.sql.Time</td>
<td>TIME</td>
</tr>
<tr>
<td>java.sql.Timestamp</td>
<td>TIMESTAMP</td>
</tr>
</tbody>
</table>
</div>
<h4 id="3-3-4-使用PreparedStatement实现增、删、改操作"><a href="#3-3-4-使用PreparedStatement实现增、删、改操作" class="headerlink" title="3.3.4 使用PreparedStatement实现增、删、改操作"></a>3.3.4 使用PreparedStatement实现增、删、改操作</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//通用的增、删、改操作（体现一：增、删、改 ； 体现二：针对于不同的表）</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(String sql,Object ... args)</span>&#123;</span><br><span class="line">	<span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">	<span class="type">PreparedStatement</span> <span class="variable">ps</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		<span class="comment">//1.获取数据库的连接</span></span><br><span class="line">		conn = JDBCUtils.getConnection();</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//2.获取PreparedStatement的实例 (或：预编译sql语句)</span></span><br><span class="line">		ps = conn.prepareStatement(sql);</span><br><span class="line">		<span class="comment">//3.填充占位符</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; args.length;i++)&#123;</span><br><span class="line">			ps.setObject(i + <span class="number">1</span>, args[i]);</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//4.执行sql语句</span></span><br><span class="line">		ps.execute();</span><br><span class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">		</span><br><span class="line">		e.printStackTrace();</span><br><span class="line">	&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">		<span class="comment">//5.关闭资源</span></span><br><span class="line">		JDBCUtils.closeResource(conn, ps);</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="3-3-5-使用PreparedStatement实现查询操作"><a href="#3-3-5-使用PreparedStatement实现查询操作" class="headerlink" title="3.3.5 使用PreparedStatement实现查询操作"></a>3.3.5 使用PreparedStatement实现查询操作</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 通用的针对于不同表的查询:返回一个对象 (version 1.0)</span></span><br><span class="line"><span class="keyword">public</span> &lt;T&gt; T <span class="title function_">getInstance</span><span class="params">(Class&lt;T&gt; clazz, String sql, Object... args)</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">	<span class="type">PreparedStatement</span> <span class="variable">ps</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">	<span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		<span class="comment">// 1.获取数据库连接</span></span><br><span class="line">		conn = JDBCUtils.getConnection();</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 2.预编译sql语句，得到PreparedStatement对象</span></span><br><span class="line">		ps = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 3.填充占位符</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; args.length; i++) &#123;</span><br><span class="line">			ps.setObject(i + <span class="number">1</span>, args[i]);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 4.执行executeQuery(),得到结果集：ResultSet</span></span><br><span class="line">		rs = ps.executeQuery();</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 5.得到结果集的元数据：ResultSetMetaData</span></span><br><span class="line">		<span class="type">ResultSetMetaData</span> <span class="variable">rsmd</span> <span class="operator">=</span> rs.getMetaData();</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 6.1通过ResultSetMetaData得到columnCount,columnLabel；通过ResultSet得到列值</span></span><br><span class="line">		<span class="type">int</span> <span class="variable">columnCount</span> <span class="operator">=</span> rsmd.getColumnCount();</span><br><span class="line">		<span class="keyword">if</span> (rs.next()) &#123;</span><br><span class="line">			<span class="type">T</span> <span class="variable">t</span> <span class="operator">=</span> clazz.newInstance();</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; columnCount; i++) &#123;<span class="comment">// 遍历每一个列</span></span><br><span class="line"></span><br><span class="line">				<span class="comment">// 获取列值</span></span><br><span class="line">				<span class="type">Object</span> <span class="variable">columnVal</span> <span class="operator">=</span> rs.getObject(i + <span class="number">1</span>);</span><br><span class="line">				<span class="comment">// 获取列的别名:列的别名，使用类的属性名充当</span></span><br><span class="line">				<span class="type">String</span> <span class="variable">columnLabel</span> <span class="operator">=</span> rsmd.getColumnLabel(i + <span class="number">1</span>);</span><br><span class="line">				<span class="comment">// 6.2使用反射，给对象的相应属性赋值</span></span><br><span class="line">				<span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> clazz.getDeclaredField(columnLabel);</span><br><span class="line">				field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">				field.set(t, columnVal);</span><br><span class="line"></span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">return</span> t;</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">		e.printStackTrace();</span><br><span class="line">	&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">		<span class="comment">// 7.关闭资源</span></span><br><span class="line">		JDBCUtils.closeResource(conn, ps, rs);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>说明：使用PreparedStatement实现的查询操作可以替换Statement实现的查询操作，解决Statement拼串和SQL注入问题。</p>
</blockquote>
<h3 id="3-4-ResultSet与ResultSetMetaData"><a href="#3-4-ResultSet与ResultSetMetaData" class="headerlink" title="3.4 ResultSet与ResultSetMetaData"></a>3.4 ResultSet与ResultSetMetaData</h3><h4 id="3-4-1-ResultSet"><a href="#3-4-1-ResultSet" class="headerlink" title="3.4.1 ResultSet"></a>3.4.1 ResultSet</h4><ul>
<li><p>查询需要调用PreparedStatement 的 executeQuery() 方法，查询结果是一个ResultSet 对象</p>
</li>
<li><p>ResultSet 对象以逻辑表格的形式封装了执行数据库操作的结果集，ResultSet 接口由数据库厂商提供实现</p>
</li>
<li><p>ResultSet 返回的实际上就是一张数据表。有一个指针指向数据表的第一条记录的前面。</p>
</li>
<li><p>ResultSet 对象维护了一个指向当前数据行的<strong>游标</strong>，初始的时候，游标在第一行之前，可以通过 ResultSet 对象的 next() 方法移动到下一行。调用 next()方法检测下一行是否有效。若有效，该方法返回 true，且指针下移。相当于Iterator对象的 hasNext() 和 next() 方法的结合体。</p>
</li>
<li><p>当指针指向一行时, 可以通过调用 getXxx(int index) 或 getXxx(int columnName) 获取每一列的值。</p>
<ul>
<li>例如: getInt(1), getString(“name”)</li>
<li><strong>注意：Java与数据库交互涉及到的相关Java API中的索引都从1开始。</strong></li>
</ul>
</li>
<li><p>ResultSet 接口的常用方法：</p>
<ul>
<li><p>boolean next()</p>
</li>
<li><p>getString()</p>
</li>
<li>…</li>
</ul>
<p><img src="尚硅谷_宋红康_JDBC.assets/1555580152530.png" alt="1555580152530"></p>
</li>
</ul>
<h4 id="3-4-2-ResultSetMetaData"><a href="#3-4-2-ResultSetMetaData" class="headerlink" title="3.4.2 ResultSetMetaData"></a>3.4.2 ResultSetMetaData</h4><ul>
<li><p>可用于获取关于 ResultSet 对象中列的类型和属性信息的对象</p>
</li>
<li><p>ResultSetMetaData meta = rs.getMetaData();</p>
<ul>
<li><strong>getColumnName</strong>(int column)：获取指定列的名称</li>
<li><strong>getColumnLabel</strong>(int column)：获取指定列的别名</li>
<li><p><strong>getColumnCount</strong>()：返回当前 ResultSet 对象中的列数。 </p>
</li>
<li><p>getColumnTypeName(int column)：检索指定列的数据库特定的类型名称。 </p>
</li>
<li>getColumnDisplaySize(int column)：指示指定列的最大标准宽度，以字符为单位。 </li>
<li><p><strong>isNullable</strong>(int column)：指示指定列中的值是否可以为 null。 </p>
</li>
<li><p>isAutoIncrement(int column)：指示是否自动为指定列进行编号，这样这些列仍然是只读的。 </p>
</li>
</ul>
</li>
</ul>
<p><img src="尚硅谷_宋红康_JDBC.assets/1555579494691.png" alt="1555579494691"></p>
<p><strong>问题1：得到结果集后, 如何知道该结果集中有哪些列 ？ 列名是什么？</strong></p>
<p>​     需要使用一个描述 ResultSet 的对象， 即 ResultSetMetaData</p>
<p><strong>问题2：关于ResultSetMetaData</strong></p>
<ol>
<li><strong>如何获取 ResultSetMetaData</strong>： 调用 ResultSet 的 getMetaData() 方法即可</li>
<li><strong>获取 ResultSet 中有多少列</strong>：调用 ResultSetMetaData 的 getColumnCount() 方法</li>
<li><strong>获取 ResultSet 每一列的列的别名是什么</strong>：调用 ResultSetMetaData 的getColumnLabel() 方法</li>
</ol>
<p><img src="尚硅谷_宋红康_JDBC.assets/1555579816884.png" alt="1555579816884"></p>
<h3 id="3-5-资源的释放"><a href="#3-5-资源的释放" class="headerlink" title="3.5 资源的释放"></a>3.5 资源的释放</h3><ul>
<li>释放ResultSet, Statement,Connection。</li>
<li>数据库连接（Connection）是非常稀有的资源，用完后必须马上释放，如果Connection不能及时正确的关闭将导致系统宕机。Connection的使用原则是<strong>尽量晚创建，尽量早的释放。</strong></li>
<li>可以在finally中关闭，保证及时其他代码出现异常，资源也一定能被关闭。</li>
</ul>
<h3 id="3-6-JDBC-API小结"><a href="#3-6-JDBC-API小结" class="headerlink" title="3.6 JDBC API小结"></a>3.6 JDBC API小结</h3><ul>
<li><p>两种思想</p>
<ul>
<li><p>面向接口编程的思想</p>
</li>
<li><p>ORM思想(object relational mapping)</p>
<ul>
<li>一个数据表对应一个java类</li>
<li>表中的一条记录对应java类的一个对象</li>
<li>表中的一个字段对应java类的一个属性</li>
</ul>
</li>
</ul>
<blockquote>
<p>sql是需要结合列名和表的属性名来写。注意起别名。</p>
</blockquote>
</li>
<li><p>两种技术</p>
<ul>
<li>JDBC结果集的元数据：ResultSetMetaData<ul>
<li>获取列数：getColumnCount()</li>
<li>获取列的别名：getColumnLabel()</li>
</ul>
</li>
<li>通过反射，创建指定类的对象，获取指定的属性并赋值</li>
</ul>
</li>
</ul>
<hr>
<h2 id="章节练习"><a href="#章节练习" class="headerlink" title="章节练习"></a>章节练习</h2><p><strong>练习题1：从控制台向数据库的表customers中插入一条数据，表结构如下：</strong></p>
<p><img src="尚硅谷_宋红康_JDBC.assets/1555580275036.png" alt="1555580275036"></p>
<p><strong>练习题2：创立数据库表 examstudent，表结构如下：</strong></p>
<p><img src="尚硅谷_宋红康_JDBC.assets/1555580735377.png" alt="1555580735377"></p>
<p>向数据表中添加如下数据：</p>
<p><img src="尚硅谷_宋红康_JDBC.assets/1555580763636.png" alt="1555580763636"></p>
<p><strong>代码实现1：插入一个新的student 信息</strong></p>
<p>请输入考生的详细信息</p>
<p>Type:<br>IDCard:<br>ExamCard:<br>StudentName:<br>Location:<br>Grade:</p>
<p>信息录入成功!</p>
<p><strong>代码实现2：在 eclipse中建立 java 程序：输入身份证号或准考证号可以查询到学生的基本信息。结果如下：</strong></p>
<p><img src="尚硅谷_宋红康_JDBC.assets/1555580937490.png" alt="1555580937490"></p>
<p><strong>代码实现3：完成学生信息的删除功能</strong></p>
<p><img src="尚硅谷_宋红康_JDBC.assets/1555580965019.png" alt="1555580965019"></p>
<hr>
<h2 id="第4章-操作BLOB类型字段"><a href="#第4章-操作BLOB类型字段" class="headerlink" title="第4章 操作BLOB类型字段"></a>第4章 操作BLOB类型字段</h2><h3 id="4-1-MySQL-BLOB类型"><a href="#4-1-MySQL-BLOB类型" class="headerlink" title="4.1 MySQL BLOB类型"></a>4.1 MySQL BLOB类型</h3><ul>
<li>MySQL中，BLOB是一个二进制大型对象，是一个可以存储大量数据的容器，它能容纳不同大小的数据。</li>
<li><p>插入BLOB类型的数据必须使用PreparedStatement，因为BLOB类型的数据无法使用字符串拼接写的。</p>
</li>
<li><p>MySQL的四种BLOB类型(除了在存储的最大信息量上不同外，他们是等同的)</p>
</li>
</ul>
<p><img src="尚硅谷_宋红康_JDBC.assets/1555581069798.png" alt="1555581069798"></p>
<ul>
<li>实际使用中根据需要存入的数据大小定义不同的BLOB类型。</li>
<li>需要注意的是：如果存储的文件过大，数据库的性能会下降。</li>
<li>如果在指定了相关的Blob类型以后，还报错：xxx too large，那么在mysql的安装目录下，找my.ini文件加上如下的配置参数： <strong>max_allowed_packet=16M</strong>。同时注意：修改了my.ini文件之后，需要重新启动mysql服务。</li>
</ul>
<h3 id="4-2-向数据表中插入大数据类型"><a href="#4-2-向数据表中插入大数据类型" class="headerlink" title="4.2 向数据表中插入大数据类型"></a>4.2 向数据表中插入大数据类型</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取连接</span></span><br><span class="line"><span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> JDBCUtils.getConnection();</span><br><span class="line">		</span><br><span class="line"><span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into customers(name,email,birth,photo)values(?,?,?,?)&quot;</span>;</span><br><span class="line"><span class="type">PreparedStatement</span> <span class="variable">ps</span> <span class="operator">=</span> conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 填充占位符</span></span><br><span class="line">ps.setString(<span class="number">1</span>, <span class="string">&quot;徐海强&quot;</span>);</span><br><span class="line">ps.setString(<span class="number">2</span>, <span class="string">&quot;xhq@126.com&quot;</span>);</span><br><span class="line">ps.setDate(<span class="number">3</span>, <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="keyword">new</span> <span class="title class_">java</span>.util.Date().getTime()));</span><br><span class="line"><span class="comment">// 操作Blob类型的变量</span></span><br><span class="line"><span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;xhq.png&quot;</span>);</span><br><span class="line">ps.setBlob(<span class="number">4</span>, fis);</span><br><span class="line"><span class="comment">//执行</span></span><br><span class="line">ps.execute();</span><br><span class="line">		</span><br><span class="line">fis.close();</span><br><span class="line">JDBCUtils.closeResource(conn, ps);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="4-3-修改数据表中的Blob类型字段"><a href="#4-3-修改数据表中的Blob类型字段" class="headerlink" title="4.3 修改数据表中的Blob类型字段"></a>4.3 修改数据表中的Blob类型字段</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> JDBCUtils.getConnection();</span><br><span class="line"><span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update customers set photo = ? where id = ?&quot;</span>;</span><br><span class="line"><span class="type">PreparedStatement</span> <span class="variable">ps</span> <span class="operator">=</span> conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 填充占位符</span></span><br><span class="line"><span class="comment">// 操作Blob类型的变量</span></span><br><span class="line"><span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;coffee.png&quot;</span>);</span><br><span class="line">ps.setBlob(<span class="number">1</span>, fis);</span><br><span class="line">ps.setInt(<span class="number">2</span>, <span class="number">25</span>);</span><br><span class="line"></span><br><span class="line">ps.execute();</span><br><span class="line"></span><br><span class="line">fis.close();</span><br><span class="line">JDBCUtils.closeResource(conn, ps);</span><br></pre></td></tr></table></figure>
<h3 id="4-4-从数据表中读取大数据类型"><a href="#4-4-从数据表中读取大数据类型" class="headerlink" title="4.4 从数据表中读取大数据类型"></a>4.4 从数据表中读取大数据类型</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;SELECT id, name, email, birth, photo FROM customer WHERE id = ?&quot;</span>;</span><br><span class="line">conn = getConnection();</span><br><span class="line">ps = conn.prepareStatement(sql);</span><br><span class="line">ps.setInt(<span class="number">1</span>, <span class="number">8</span>);</span><br><span class="line">rs = ps.executeQuery();</span><br><span class="line"><span class="keyword">if</span>(rs.next())&#123;</span><br><span class="line">	<span class="type">Integer</span> <span class="variable">id</span> <span class="operator">=</span> rs.getInt(<span class="number">1</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> rs.getString(<span class="number">2</span>);</span><br><span class="line">	<span class="type">String</span> <span class="variable">email</span> <span class="operator">=</span> rs.getString(<span class="number">3</span>);</span><br><span class="line">    <span class="type">Date</span> <span class="variable">birth</span> <span class="operator">=</span> rs.getDate(<span class="number">4</span>);</span><br><span class="line">	<span class="type">Customer</span> <span class="variable">cust</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Customer</span>(id, name, email, birth);</span><br><span class="line">    System.out.println(cust); </span><br><span class="line">    <span class="comment">//读取Blob类型的字段</span></span><br><span class="line">	<span class="type">Blob</span> <span class="variable">photo</span> <span class="operator">=</span> rs.getBlob(<span class="number">5</span>);</span><br><span class="line">	<span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> photo.getBinaryStream();</span><br><span class="line">	<span class="type">OutputStream</span> <span class="variable">os</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;c.jpg&quot;</span>);</span><br><span class="line">	<span class="type">byte</span> [] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">	<span class="type">int</span> len ;</span><br><span class="line">	<span class="keyword">while</span>((len = is.read(buffer)) != -<span class="number">1</span>)&#123;</span><br><span class="line">		os.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">	&#125;</span><br><span class="line">    JDBCUtils.closeResource(conn, ps, rs);</span><br><span class="line">		</span><br><span class="line">	<span class="keyword">if</span>(is != <span class="literal">null</span>)&#123;</span><br><span class="line">		is.close();</span><br><span class="line">	&#125;</span><br><span class="line">		</span><br><span class="line">	<span class="keyword">if</span>(os !=  <span class="literal">null</span>)&#123;</span><br><span class="line">		os.close();</span><br><span class="line">	&#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="第5章-批量插入"><a href="#第5章-批量插入" class="headerlink" title="第5章 批量插入"></a>第5章 批量插入</h2><h3 id="5-1-批量执行SQL语句"><a href="#5-1-批量执行SQL语句" class="headerlink" title="5.1 批量执行SQL语句"></a>5.1 批量执行SQL语句</h3><p>当需要成批插入或者更新记录时，可以采用Java的批量<strong>更新</strong>机制，这一机制允许多条语句一次性提交给数据库批量处理。通常情况下比单独提交处理更有效率</p>
<p>JDBC的批量处理语句包括下面三个方法：</p>
<ul>
<li><strong>addBatch(String)：添加需要批量处理的SQL语句或是参数；</strong></li>
<li><strong>executeBatch()：执行批量处理语句；</strong></li>
<li><strong>clearBatch():清空缓存的数据</strong></li>
</ul>
<p>通常我们会遇到两种批量执行SQL语句的情况：</p>
<ul>
<li>多条SQL语句的批量处理；</li>
<li>一个SQL语句的批量传参；</li>
</ul>
<h3 id="5-2-高效的批量插入"><a href="#5-2-高效的批量插入" class="headerlink" title="5.2 高效的批量插入"></a>5.2 高效的批量插入</h3><p>举例：向数据表中插入20000条数据</p>
<ul>
<li>数据库中提供一个goods表。创建如下：</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> goods(</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">NAME <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<h4 id="5-2-1-实现层次一：使用Statement"><a href="#5-2-1-实现层次一：使用Statement" class="headerlink" title="5.2.1 实现层次一：使用Statement"></a>5.2.1 实现层次一：使用Statement</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> JDBCUtils.getConnection();</span><br><span class="line"><span class="type">Statement</span> <span class="variable">st</span> <span class="operator">=</span> conn.createStatement();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i &lt;= <span class="number">20000</span>;i++)&#123;</span><br><span class="line">	<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into goods(name) values(&#x27;name_&#x27; + &quot;</span>+ i +<span class="string">&quot;)&quot;</span>;</span><br><span class="line">	st.executeUpdate(sql);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="5-2-2-实现层次二：使用PreparedStatement"><a href="#5-2-2-实现层次二：使用PreparedStatement" class="headerlink" title="5.2.2 实现层次二：使用PreparedStatement"></a>5.2.2 实现层次二：使用PreparedStatement</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">long</span> <span class="variable">start</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">		</span><br><span class="line"><span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> JDBCUtils.getConnection();</span><br><span class="line">		</span><br><span class="line"><span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into goods(name)values(?)&quot;</span>;</span><br><span class="line"><span class="type">PreparedStatement</span> <span class="variable">ps</span> <span class="operator">=</span> conn.prepareStatement(sql);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i &lt;= <span class="number">20000</span>;i++)&#123;</span><br><span class="line">	ps.setString(<span class="number">1</span>, <span class="string">&quot;name_&quot;</span> + i);</span><br><span class="line">	ps.executeUpdate();</span><br><span class="line">&#125;</span><br><span class="line">		</span><br><span class="line"><span class="type">long</span> <span class="variable">end</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">System.out.println(<span class="string">&quot;花费的时间为：&quot;</span> + (end - start));<span class="comment">//82340</span></span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">JDBCUtils.closeResource(conn, ps);</span><br></pre></td></tr></table></figure>
<h4 id="5-2-3-实现层次三"><a href="#5-2-3-实现层次三" class="headerlink" title="5.2.3 实现层次三"></a>5.2.3 实现层次三</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 修改1： 使用 addBatch() / executeBatch() / clearBatch()</span></span><br><span class="line"><span class="comment"> * 修改2：mysql服务器默认是关闭批处理的，我们需要通过一个参数，让mysql开启批处理的支持。</span></span><br><span class="line"><span class="comment"> * 		 ?rewriteBatchedStatements=true 写在配置文件的url后面</span></span><br><span class="line"><span class="comment"> * 修改3：使用更新的mysql 驱动：mysql-connector-java-5.1.37-bin.jar</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInsert1</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">	<span class="type">long</span> <span class="variable">start</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">		</span><br><span class="line">	<span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> JDBCUtils.getConnection();</span><br><span class="line">		</span><br><span class="line">	<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into goods(name)values(?)&quot;</span>;</span><br><span class="line">	<span class="type">PreparedStatement</span> <span class="variable">ps</span> <span class="operator">=</span> conn.prepareStatement(sql);</span><br><span class="line">		</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i &lt;= <span class="number">1000000</span>;i++)&#123;</span><br><span class="line">		ps.setString(<span class="number">1</span>, <span class="string">&quot;name_&quot;</span> + i);</span><br><span class="line">			</span><br><span class="line">		<span class="comment">//1.“攒”sql</span></span><br><span class="line">		ps.addBatch();</span><br><span class="line">		<span class="keyword">if</span>(i % <span class="number">500</span> == <span class="number">0</span>)&#123;</span><br><span class="line">			<span class="comment">//2.执行</span></span><br><span class="line">			ps.executeBatch();</span><br><span class="line">			<span class="comment">//3.清空</span></span><br><span class="line">			ps.clearBatch();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">		</span><br><span class="line">	<span class="type">long</span> <span class="variable">end</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">	System.out.println(<span class="string">&quot;花费的时间为：&quot;</span> + (end - start));<span class="comment">//20000条：625                                                                         //1000000条:14733  </span></span><br><span class="line">		</span><br><span class="line">	JDBCUtils.closeResource(conn, ps);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="5-2-4-实现层次四"><a href="#5-2-4-实现层次四" class="headerlink" title="5.2.4 实现层次四"></a>5.2.4 实现层次四</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 层次四：在层次三的基础上操作</span></span><br><span class="line"><span class="comment">* 使用Connection 的 setAutoCommit(false)  /  commit()</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInsert2</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">	<span class="type">long</span> <span class="variable">start</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">		</span><br><span class="line">	<span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> JDBCUtils.getConnection();</span><br><span class="line">		</span><br><span class="line">	<span class="comment">//1.设置为不自动提交数据</span></span><br><span class="line">	conn.setAutoCommit(<span class="literal">false</span>);</span><br><span class="line">		</span><br><span class="line">	<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into goods(name)values(?)&quot;</span>;</span><br><span class="line">	<span class="type">PreparedStatement</span> <span class="variable">ps</span> <span class="operator">=</span> conn.prepareStatement(sql);</span><br><span class="line">		</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i &lt;= <span class="number">1000000</span>;i++)&#123;</span><br><span class="line">		ps.setString(<span class="number">1</span>, <span class="string">&quot;name_&quot;</span> + i);</span><br><span class="line">			</span><br><span class="line">		<span class="comment">//1.“攒”sql</span></span><br><span class="line">		ps.addBatch();</span><br><span class="line">			</span><br><span class="line">		<span class="keyword">if</span>(i % <span class="number">500</span> == <span class="number">0</span>)&#123;</span><br><span class="line">			<span class="comment">//2.执行</span></span><br><span class="line">			ps.executeBatch();</span><br><span class="line">			<span class="comment">//3.清空</span></span><br><span class="line">			ps.clearBatch();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">		</span><br><span class="line">	<span class="comment">//2.提交数据</span></span><br><span class="line">	conn.commit();</span><br><span class="line">		</span><br><span class="line">	<span class="type">long</span> <span class="variable">end</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">	System.out.println(<span class="string">&quot;花费的时间为：&quot;</span> + (end - start));<span class="comment">//1000000条:4978 </span></span><br><span class="line">		</span><br><span class="line">	JDBCUtils.closeResource(conn, ps);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="第6章：-数据库事务"><a href="#第6章：-数据库事务" class="headerlink" title="第6章： 数据库事务"></a>第6章： 数据库事务</h2><h3 id="6-1-数据库事务介绍"><a href="#6-1-数据库事务介绍" class="headerlink" title="6.1 数据库事务介绍"></a>6.1 数据库事务介绍</h3><ul>
<li><p><strong>事务：一组逻辑操作单元,使数据从一种状态变换到另一种状态。</strong></p>
</li>
<li><p><strong>事务处理（事务操作）：</strong>保证所有事务都作为一个工作单元来执行，即使出现了故障，都不能改变这种执行方式。当在一个事务中执行多个操作时，要么所有的事务都<strong>被提交(commit)</strong>，那么这些修改就永久地保存下来；要么数据库管理系统将放弃所作的所有修改，整个事务<strong>回滚(rollback)</strong>到最初状态。</p>
</li>
<li><p>为确保数据库中数据的<strong>一致性</strong>，数据的操纵应当是离散的成组的逻辑单元：当它全部完成时，数据的一致性可以保持，而当这个单元中的一部分操作失败，整个事务应全部视为错误，所有从起始点以后的操作应全部回退到开始状态。 </p>
</li>
</ul>
<h3 id="6-2-JDBC事务处理"><a href="#6-2-JDBC事务处理" class="headerlink" title="6.2 JDBC事务处理"></a>6.2 JDBC事务处理</h3><ul>
<li>数据一旦提交，就不可回滚。</li>
<li>数据什么时候意味着提交？<ul>
<li><strong>当一个连接对象被创建时，默认情况下是自动提交事务</strong>：每次执行一个 SQL 语句时，如果执行成功，就会向数据库自动提交，而不能回滚。</li>
<li><strong>关闭数据库连接，数据就会自动的提交。</strong>如果多个操作，每个操作使用的是自己单独的连接，则无法保证事务。即同一个事务的多个操作必须在同一个连接下。</li>
</ul>
</li>
<li><p><strong>JDBC程序中为了让多个 SQL 语句作为一个事务执行：</strong></p>
<ul>
<li>调用 Connection 对象的 <strong>setAutoCommit(false);</strong> 以取消自动提交事务</li>
<li>在所有的 SQL 语句都成功执行后，调用 <strong>commit();</strong> 方法提交事务</li>
<li>在出现异常时，调用 <strong>rollback();</strong> 方法回滚事务</li>
</ul>
<blockquote>
<p>若此时 Connection 没有被关闭，还可能被重复使用，则需要恢复其自动提交状态 setAutoCommit(true)。尤其是在使用数据库连接池技术时，执行close()方法前，建议恢复自动提交状态。</p>
</blockquote>
</li>
</ul>
<p>【案例：用户AA向用户BB转账100】</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testJDBCTransaction</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		<span class="comment">// 1.获取数据库连接</span></span><br><span class="line">		conn = JDBCUtils.getConnection();</span><br><span class="line">		<span class="comment">// 2.开启事务</span></span><br><span class="line">		conn.setAutoCommit(<span class="literal">false</span>);</span><br><span class="line">		<span class="comment">// 3.进行数据库操作</span></span><br><span class="line">		<span class="type">String</span> <span class="variable">sql1</span> <span class="operator">=</span> <span class="string">&quot;update user_table set balance = balance - 100 where user = ?&quot;</span>;</span><br><span class="line">		update(conn, sql1, <span class="string">&quot;AA&quot;</span>);</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 模拟网络异常</span></span><br><span class="line">		<span class="comment">//System.out.println(10 / 0);</span></span><br><span class="line"></span><br><span class="line">		<span class="type">String</span> <span class="variable">sql2</span> <span class="operator">=</span> <span class="string">&quot;update user_table set balance = balance + 100 where user = ?&quot;</span>;</span><br><span class="line">		update(conn, sql2, <span class="string">&quot;BB&quot;</span>);</span><br><span class="line">		<span class="comment">// 4.若没有异常，则提交事务</span></span><br><span class="line">		conn.commit();</span><br><span class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">		e.printStackTrace();</span><br><span class="line">		<span class="comment">// 5.若有异常，则回滚事务</span></span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			conn.rollback();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e1) &#123;</span><br><span class="line">			e1.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="comment">//6.恢复每次DML操作的自动提交功能</span></span><br><span class="line">			conn.setAutoCommit(<span class="literal">true</span>);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">        <span class="comment">//7.关闭连接</span></span><br><span class="line">		JDBCUtils.closeResource(conn, <span class="literal">null</span>, <span class="literal">null</span>); </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>其中，对数据库操作的方法为：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用事务以后的通用的增删改操作（version 2.0）</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(Connection conn ,String sql, Object... args)</span> &#123;</span><br><span class="line">	<span class="type">PreparedStatement</span> <span class="variable">ps</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		<span class="comment">// 1.获取PreparedStatement的实例 (或：预编译sql语句)</span></span><br><span class="line">		ps = conn.prepareStatement(sql);</span><br><span class="line">		<span class="comment">// 2.填充占位符</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; args.length; i++) &#123;</span><br><span class="line">			ps.setObject(i + <span class="number">1</span>, args[i]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// 3.执行sql语句</span></span><br><span class="line">		ps.execute();</span><br><span class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">		e.printStackTrace();</span><br><span class="line">	&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">		<span class="comment">// 4.关闭资源</span></span><br><span class="line">		JDBCUtils.closeResource(<span class="literal">null</span>, ps);</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="6-3-事务的ACID属性"><a href="#6-3-事务的ACID属性" class="headerlink" title="6.3 事务的ACID属性"></a>6.3 事务的ACID属性</h3><ol>
<li><p><strong>原子性（Atomicity）</strong><br> 原子性是指事务是一个不可分割的工作单位，事务中的操作要么都发生，要么都不发生。 </p>
</li>
<li><p><strong>一致性（Consistency）</strong><br> 事务必须使数据库从一个一致性状态变换到另外一个一致性状态。</p>
</li>
<li><p><strong>隔离性（Isolation）</strong><br> 事务的隔离性是指一个事务的执行不能被其他事务干扰，即一个事务内部的操作及使用的数据对并发的其他事务是隔离的，并发执行的各个事务之间不能互相干扰。</p>
</li>
<li><p><strong>持久性（Durability）</strong><br> 持久性是指一个事务一旦被提交，它对数据库中数据的改变就是永久性的，接下来的其他操作和数据库故障不应该对其有任何影响。</p>
</li>
</ol>
<h4 id="6-3-1-数据库的并发问题"><a href="#6-3-1-数据库的并发问题" class="headerlink" title="6.3.1 数据库的并发问题"></a>6.3.1 数据库的并发问题</h4><ul>
<li><p>对于同时运行的多个事务, 当这些事务访问数据库中相同的数据时, 如果没有采取必要的隔离机制, 就会导致各种并发问题:</p>
<ul>
<li><strong>脏读</strong>: 对于两个事务 T1, T2, T1 读取了已经被 T2 更新但还<strong>没有被提交</strong>的字段。之后, 若 T2 回滚, T1读取的内容就是临时且无效的。</li>
<li><strong>不可重复读</strong>: 对于两个事务T1, T2, T1 读取了一个字段, 然后 T2 <strong>更新</strong>了该字段。之后, T1再次读取同一个字段, 值就不同了。</li>
<li><strong>幻读</strong>: 对于两个事务T1, T2, T1 从一个表中读取了一个字段, 然后 T2 在该表中<strong>插入</strong>了一些新的行。之后, 如果 T1 再次读取同一个表, 就会多出几行。</li>
</ul>
</li>
<li><p><strong>数据库事务的隔离性</strong>: 数据库系统必须具有隔离并发运行各个事务的能力, 使它们不会相互影响, 避免各种并发问题。</p>
</li>
<li><p>一个事务与其他事务隔离的程度称为隔离级别。数据库规定了多种事务隔离级别, 不同隔离级别对应不同的干扰程度, <strong>隔离级别越高, 数据一致性就越好, 但并发性越弱。</strong></p>
</li>
</ul>
<h4 id="6-3-2-四种隔离级别"><a href="#6-3-2-四种隔离级别" class="headerlink" title="6.3.2 四种隔离级别"></a>6.3.2 四种隔离级别</h4><ul>
<li><p>数据库提供的4种事务隔离级别：</p>
<p><img src="尚硅谷_宋红康_JDBC.assets/1555586275271.png" alt="1555586275271"></p>
</li>
<li><p>Oracle 支持的 2 种事务隔离级别：<strong>READ COMMITED</strong>, SERIALIZABLE。 Oracle 默认的事务隔离级别为: <strong>READ COMMITED</strong> 。</p>
</li>
</ul>
<ul>
<li>Mysql 支持 4 种事务隔离级别。Mysql 默认的事务隔离级别为: <strong>REPEATABLE READ。</strong></li>
</ul>
<h4 id="6-3-3-在MySql中设置隔离级别"><a href="#6-3-3-在MySql中设置隔离级别" class="headerlink" title="6.3.3 在MySql中设置隔离级别"></a>6.3.3 在MySql中设置隔离级别</h4><ul>
<li><p>每启动一个 mysql 程序, 就会获得一个单独的数据库连接. 每个数据库连接都有一个全局变量 @@tx_isolation, 表示当前的事务隔离级别。</p>
</li>
<li><p>查看当前的隔离级别: </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT @@tx_isolation;</span><br></pre></td></tr></table></figure>
</li>
<li><p>设置当前 mySQL 连接的隔离级别:  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set  transaction isolation level read committed;</span><br></pre></td></tr></table></figure>
</li>
<li><p>设置数据库系统的全局的隔离级别:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set global transaction isolation level read committed;</span><br></pre></td></tr></table></figure>
</li>
<li><p>补充操作：</p>
<ul>
<li><p>创建mysql数据库用户：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create user tom identified by &#x27;abc123&#x27;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>授予权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#授予通过网络方式登录的tom用户，对所有库所有表的全部权限，密码设为abc123.</span><br><span class="line">grant all privileges on *.* to tom@&#x27;%&#x27;  identified by &#x27;abc123&#x27;; </span><br><span class="line"></span><br><span class="line"> #给tom用户使用本地命令行方式，授予atguigudb这个库下的所有表的插删改查的权限。</span><br><span class="line">grant select,insert,delete,update on atguigudb.* to tom@localhost identified by &#x27;abc123&#x27;; </span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h2 id="第7章：DAO及相关实现类"><a href="#第7章：DAO及相关实现类" class="headerlink" title="第7章：DAO及相关实现类"></a>第7章：DAO及相关实现类</h2><ul>
<li>DAO：Data Access Object访问数据信息的类和接口，包括了对数据的CRUD（Create、Retrival、Update、Delete），而不包含任何业务相关的信息。有时也称作：BaseDAO</li>
<li>作用：为了实现功能的模块化，更有利于代码的维护和升级。</li>
<li>下面是尚硅谷JavaWeb阶段书城项目中DAO使用的体现：</li>
</ul>
<p><img src="尚硅谷_宋红康_JDBC.assets/1566726681515.png" alt="1566726681515"></p>
<ul>
<li>层次结构：</li>
</ul>
<p><img src="尚硅谷_宋红康_JDBC.assets/1566745811244.png" alt="1566745811244"></p>
<h3 id="【BaseDAO-java】"><a href="#【BaseDAO-java】" class="headerlink" title="【BaseDAO.java】"></a>【BaseDAO.java】</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.bookstore.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.ParameterizedType;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Type;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.QueryRunner;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.handlers.BeanHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.handlers.BeanListHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.handlers.ScalarHandler;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义一个用来被继承的对数据库进行基本操作的Dao</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> HanYanBing</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &lt;T&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">BaseDao</span>&lt;T&gt; &#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">QueryRunner</span> <span class="variable">queryRunner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">QueryRunner</span>();</span><br><span class="line">	<span class="comment">// 定义一个变量来接收泛型的类型</span></span><br><span class="line">	<span class="keyword">private</span> Class&lt;T&gt; type;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 获取T的Class对象，获取泛型的类型，泛型是在被子类继承时才确定</span></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">BaseDao</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="comment">// 获取子类的类型</span></span><br><span class="line">		<span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> <span class="built_in">this</span>.getClass();</span><br><span class="line">		<span class="comment">// 获取父类的类型</span></span><br><span class="line">		<span class="comment">// getGenericSuperclass()用来获取当前类的父类的类型</span></span><br><span class="line">		<span class="comment">// ParameterizedType表示的是带泛型的类型</span></span><br><span class="line">		<span class="type">ParameterizedType</span> <span class="variable">parameterizedType</span> <span class="operator">=</span> (ParameterizedType) clazz.getGenericSuperclass();</span><br><span class="line">		<span class="comment">// 获取具体的泛型类型 getActualTypeArguments获取具体的泛型的类型</span></span><br><span class="line">		<span class="comment">// 这个方法会返回一个Type的数组</span></span><br><span class="line">		Type[] types = parameterizedType.getActualTypeArguments();</span><br><span class="line">		<span class="comment">// 获取具体的泛型的类型·</span></span><br><span class="line">		<span class="built_in">this</span>.type = (Class&lt;T&gt;) types[<span class="number">0</span>];</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 通用的增删改操作</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> sql</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="type">int</span> <span class="title function_">update</span><span class="params">(Connection conn,String sql, Object... params)</span> &#123;</span><br><span class="line">		<span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			count = queryRunner.update(conn, sql, params);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; </span><br><span class="line">		<span class="keyword">return</span> count;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 获取一个对象</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> sql</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> T <span class="title function_">getBean</span><span class="params">(Connection conn,String sql, Object... params)</span> &#123;</span><br><span class="line">		<span class="type">T</span> <span class="variable">t</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			t = queryRunner.query(conn, sql, <span class="keyword">new</span> <span class="title class_">BeanHandler</span>&lt;T&gt;(type), params);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; </span><br><span class="line">		<span class="keyword">return</span> t;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 获取所有对象</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> sql</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> List&lt;T&gt; <span class="title function_">getBeanList</span><span class="params">(Connection conn,String sql, Object... params)</span> &#123;</span><br><span class="line">		List&lt;T&gt; list = <span class="literal">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			list = queryRunner.query(conn, sql, <span class="keyword">new</span> <span class="title class_">BeanListHandler</span>&lt;T&gt;(type), params);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; </span><br><span class="line">		<span class="keyword">return</span> list;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 获取一个但一值得方法，专门用来执行像 select count(*)...这样的sql语句</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> sql</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> Object <span class="title function_">getValue</span><span class="params">(Connection conn,String sql, Object... params)</span> &#123;</span><br><span class="line">		<span class="type">Object</span> <span class="variable">count</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="comment">// 调用queryRunner的query方法获取一个单一的值</span></span><br><span class="line">			count = queryRunner.query(conn, sql, <span class="keyword">new</span> <span class="title class_">ScalarHandler</span>&lt;&gt;(), params);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; </span><br><span class="line">		<span class="keyword">return</span> count;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="【BookDAO-java】"><a href="#【BookDAO-java】" class="headerlink" title="【BookDAO.java】"></a>【BookDAO.java】</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.bookstore.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.bookstore.beans.Book;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.bookstore.beans.Page;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BookDao</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 从数据库中查询出所有的记录</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	List&lt;Book&gt; <span class="title function_">getBooks</span><span class="params">(Connection conn)</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 向数据库中插入一条记录</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> book</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">void</span> <span class="title function_">saveBook</span><span class="params">(Connection conn,Book book)</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 从数据库中根据图书的id删除一条记录</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> bookId</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">void</span> <span class="title function_">deleteBookById</span><span class="params">(Connection conn,String bookId)</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 根据图书的id从数据库中查询出一条记录</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> bookId</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	Book <span class="title function_">getBookById</span><span class="params">(Connection conn,String bookId)</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 根据图书的id从数据库中更新一条记录</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> book</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">void</span> <span class="title function_">updateBook</span><span class="params">(Connection conn,Book book)</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 获取带分页的图书信息</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> page：是只包含了用户输入的pageNo属性的page对象</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> 返回的Page对象是包含了所有属性的Page对象</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	Page&lt;Book&gt; <span class="title function_">getPageBooks</span><span class="params">(Connection conn,Page&lt;Book&gt; page)</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 获取带分页和价格范围的图书信息</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> page：是只包含了用户输入的pageNo属性的page对象</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> 返回的Page对象是包含了所有属性的Page对象</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	Page&lt;Book&gt; <span class="title function_">getPageBooksByPrice</span><span class="params">(Connection conn,Page&lt;Book&gt; page, <span class="type">double</span> minPrice, <span class="type">double</span> maxPrice)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="【UserDAO-java】"><a href="#【UserDAO-java】" class="headerlink" title="【UserDAO.java】"></a>【UserDAO.java】</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.bookstore.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.bookstore.beans.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 根据User对象中的用户名和密码从数据库中获取一条记录</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> User 数据库中有记录 null 数据库中无此记录</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	User <span class="title function_">getUser</span><span class="params">(Connection conn,User user)</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 根据User对象中的用户名从数据库中获取一条记录</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> true 数据库中有记录 false 数据库中无此记录</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="type">boolean</span> <span class="title function_">checkUsername</span><span class="params">(Connection conn,User user)</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 向数据库中插入User对象</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">void</span> <span class="title function_">saveUser</span><span class="params">(Connection conn,User user)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="【BookDaoImpl-java】"><a href="#【BookDaoImpl-java】" class="headerlink" title="【BookDaoImpl.java】"></a>【BookDaoImpl.java】</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.bookstore.dao.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.bookstore.beans.Book;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.bookstore.beans.Page;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.bookstore.dao.BaseDao;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.bookstore.dao.BookDao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookDaoImpl</span> <span class="keyword">extends</span> <span class="title class_">BaseDao</span>&lt;Book&gt; <span class="keyword">implements</span> <span class="title class_">BookDao</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> List&lt;Book&gt; <span class="title function_">getBooks</span><span class="params">(Connection conn)</span> &#123;</span><br><span class="line">		<span class="comment">// 调用BaseDao中得到一个List的方法</span></span><br><span class="line">		List&lt;Book&gt; beanList = <span class="literal">null</span>;</span><br><span class="line">		<span class="comment">// 写sql语句</span></span><br><span class="line">		<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select id,title,author,price,sales,stock,img_path imgPath from books&quot;</span>;</span><br><span class="line">		beanList = getBeanList(conn,sql);</span><br><span class="line">		<span class="keyword">return</span> beanList;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveBook</span><span class="params">(Connection conn,Book book)</span> &#123;</span><br><span class="line">		<span class="comment">// 写sql语句</span></span><br><span class="line">		<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into books(title,author,price,sales,stock,img_path) values(?,?,?,?,?,?)&quot;</span>;</span><br><span class="line">		<span class="comment">// 调用BaseDao中通用的增删改的方法</span></span><br><span class="line">		update(conn,sql, book.getTitle(), book.getAuthor(), book.getPrice(), book.getSales(), book.getStock(),book.getImgPath());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteBookById</span><span class="params">(Connection conn,String bookId)</span> &#123;</span><br><span class="line">		<span class="comment">// 写sql语句</span></span><br><span class="line">		<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;DELETE FROM books WHERE id = ?&quot;</span>;</span><br><span class="line">		<span class="comment">// 调用BaseDao中通用增删改的方法</span></span><br><span class="line">		update(conn,sql, bookId);</span><br><span class="line">			</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> Book <span class="title function_">getBookById</span><span class="params">(Connection conn,String bookId)</span> &#123;</span><br><span class="line">		<span class="comment">// 调用BaseDao中获取一个对象的方法</span></span><br><span class="line">		<span class="type">Book</span> <span class="variable">book</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="comment">// 写sql语句</span></span><br><span class="line">		<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select id,title,author,price,sales,stock,img_path imgPath from books where id = ?&quot;</span>;</span><br><span class="line">		book = getBean(conn,sql, bookId);</span><br><span class="line">		<span class="keyword">return</span> book;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateBook</span><span class="params">(Connection conn,Book book)</span> &#123;</span><br><span class="line">		<span class="comment">// 写sql语句</span></span><br><span class="line">		<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update books set title = ? , author = ? , price = ? , sales = ? , stock = ? where id = ?&quot;</span>;</span><br><span class="line">		<span class="comment">// 调用BaseDao中通用的增删改的方法</span></span><br><span class="line">		update(conn,sql, book.getTitle(), book.getAuthor(), book.getPrice(), book.getSales(), book.getStock(), book.getId());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> Page&lt;Book&gt; <span class="title function_">getPageBooks</span><span class="params">(Connection conn,Page&lt;Book&gt; page)</span> &#123;</span><br><span class="line">		<span class="comment">// 获取数据库中图书的总记录数</span></span><br><span class="line">		<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select count(*) from books&quot;</span>;</span><br><span class="line">		<span class="comment">// 调用BaseDao中获取一个单一值的方法</span></span><br><span class="line">		<span class="type">long</span> <span class="variable">totalRecord</span> <span class="operator">=</span> (<span class="type">long</span>) getValue(conn,sql);</span><br><span class="line">		<span class="comment">// 将总记录数设置都page对象中</span></span><br><span class="line">		page.setTotalRecord((<span class="type">int</span>) totalRecord);</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 获取当前页中的记录存放的List</span></span><br><span class="line">		<span class="type">String</span> <span class="variable">sql2</span> <span class="operator">=</span> <span class="string">&quot;select id,title,author,price,sales,stock,img_path imgPath from books limit ?,?&quot;</span>;</span><br><span class="line">		<span class="comment">// 调用BaseDao中获取一个集合的方法</span></span><br><span class="line">		List&lt;Book&gt; beanList = getBeanList(conn,sql2, (page.getPageNo() - <span class="number">1</span>) * Page.PAGE_SIZE, Page.PAGE_SIZE);</span><br><span class="line">		<span class="comment">// 将这个List设置到page对象中</span></span><br><span class="line">		page.setList(beanList);</span><br><span class="line">		<span class="keyword">return</span> page;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> Page&lt;Book&gt; <span class="title function_">getPageBooksByPrice</span><span class="params">(Connection conn,Page&lt;Book&gt; page, <span class="type">double</span> minPrice, <span class="type">double</span> maxPrice)</span> &#123;</span><br><span class="line">		<span class="comment">// 获取数据库中图书的总记录数</span></span><br><span class="line">		<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select count(*) from books where price between ? and ?&quot;</span>;</span><br><span class="line">		<span class="comment">// 调用BaseDao中获取一个单一值的方法</span></span><br><span class="line">		<span class="type">long</span> <span class="variable">totalRecord</span> <span class="operator">=</span> (<span class="type">long</span>) getValue(conn,sql,minPrice,maxPrice);</span><br><span class="line">		<span class="comment">// 将总记录数设置都page对象中</span></span><br><span class="line">		page.setTotalRecord((<span class="type">int</span>) totalRecord);</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 获取当前页中的记录存放的List</span></span><br><span class="line">		<span class="type">String</span> <span class="variable">sql2</span> <span class="operator">=</span> <span class="string">&quot;select id,title,author,price,sales,stock,img_path imgPath from books where price between ? and ? limit ?,?&quot;</span>;</span><br><span class="line">		<span class="comment">// 调用BaseDao中获取一个集合的方法</span></span><br><span class="line">		List&lt;Book&gt; beanList = getBeanList(conn,sql2, minPrice , maxPrice , (page.getPageNo() - <span class="number">1</span>) * Page.PAGE_SIZE, Page.PAGE_SIZE);</span><br><span class="line">		<span class="comment">// 将这个List设置到page对象中</span></span><br><span class="line">		page.setList(beanList);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> page;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="【UserDaoImpl-java】"><a href="#【UserDaoImpl-java】" class="headerlink" title="【UserDaoImpl.java】"></a>【UserDaoImpl.java】</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.bookstore.dao.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.bookstore.beans.User;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.bookstore.dao.BaseDao;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.bookstore.dao.UserDao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoImpl</span> <span class="keyword">extends</span> <span class="title class_">BaseDao</span>&lt;User&gt; <span class="keyword">implements</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> User <span class="title function_">getUser</span><span class="params">(Connection conn,User user)</span> &#123;</span><br><span class="line">		<span class="comment">// 调用BaseDao中获取一个对象的方法</span></span><br><span class="line">		<span class="type">User</span> <span class="variable">bean</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="comment">// 写sql语句</span></span><br><span class="line">		<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select id,username,password,email from users where username = ? and password = ?&quot;</span>;</span><br><span class="line">		bean = getBean(conn,sql, user.getUsername(), user.getPassword());</span><br><span class="line">		<span class="keyword">return</span> bean;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">checkUsername</span><span class="params">(Connection conn,User user)</span> &#123;</span><br><span class="line">		<span class="comment">// 调用BaseDao中获取一个对象的方法</span></span><br><span class="line">		<span class="type">User</span> <span class="variable">bean</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="comment">// 写sql语句</span></span><br><span class="line">		<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select id,username,password,email from users where username = ?&quot;</span>;</span><br><span class="line">		bean = getBean(conn,sql, user.getUsername());</span><br><span class="line">		<span class="keyword">return</span> bean != <span class="literal">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveUser</span><span class="params">(Connection conn,User user)</span> &#123;</span><br><span class="line">		<span class="comment">//写sql语句</span></span><br><span class="line">		<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into users(username,password,email) values(?,?,?)&quot;</span>;</span><br><span class="line">		<span class="comment">//调用BaseDao中通用的增删改的方法</span></span><br><span class="line">		update(conn,sql, user.getUsername(),user.getPassword(),user.getEmail());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="【Book-java】"><a href="#【Book-java】" class="headerlink" title="【Book.java】"></a>【Book.java】</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.bookstore.beans;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 图书类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> songhongkang</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Book</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> Integer id;</span><br><span class="line">	<span class="keyword">private</span> String title; <span class="comment">// 书名</span></span><br><span class="line">	<span class="keyword">private</span> String author; <span class="comment">// 作者</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">double</span> price; <span class="comment">// 价格</span></span><br><span class="line">	<span class="keyword">private</span> Integer sales; <span class="comment">// 销量</span></span><br><span class="line">	<span class="keyword">private</span> Integer stock; <span class="comment">// 库存</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">String</span> <span class="variable">imgPath</span> <span class="operator">=</span> <span class="string">&quot;static/img/default.jpg&quot;</span>; <span class="comment">// 封面图片的路径</span></span><br><span class="line">	<span class="comment">//构造器，get()，set()，toString()方法略</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="【Page-java】"><a href="#【Page-java】" class="headerlink" title="【Page.java】"></a>【Page.java】</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.bookstore.beans;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 页码类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> songhongkang</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Page</span>&lt;T&gt; &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> List&lt;T&gt; list; <span class="comment">// 每页查到的记录存放的集合</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">PAGE_SIZE</span> <span class="operator">=</span> <span class="number">4</span>; <span class="comment">// 每页显示的记录数</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> pageNo; <span class="comment">// 当前页</span></span><br><span class="line"><span class="comment">//	private int totalPageNo; // 总页数，通过计算得到</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> totalRecord; <span class="comment">// 总记录数，通过查询数据库得到</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="【User-java】"><a href="#【User-java】" class="headerlink" title="【User.java】"></a>【User.java】</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.bookstore.beans;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> songhongkang</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> Integer id;</span><br><span class="line">	<span class="keyword">private</span> String username;</span><br><span class="line">	<span class="keyword">private</span> String password;</span><br><span class="line">	<span class="keyword">private</span> String email;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="第8章：数据库连接池"><a href="#第8章：数据库连接池" class="headerlink" title="第8章：数据库连接池"></a>第8章：数据库连接池</h2><h3 id="8-1-JDBC数据库连接池的必要性"><a href="#8-1-JDBC数据库连接池的必要性" class="headerlink" title="8.1 JDBC数据库连接池的必要性"></a>8.1 JDBC数据库连接池的必要性</h3><ul>
<li><p>在使用开发基于数据库的web程序时，传统的模式基本是按以下步骤：　　</p>
<ul>
<li><strong>在主程序（如servlet、beans）中建立数据库连接</strong></li>
<li><strong>进行sql操作</strong></li>
<li><strong>断开数据库连接</strong></li>
</ul>
</li>
<li><p>这种模式开发，存在的问题:</p>
<ul>
<li>普通的JDBC数据库连接使用 DriverManager 来获取，每次向数据库建立连接的时候都要将 Connection 加载到内存中，再验证用户名和密码(得花费0.05s～1s的时间)。需要数据库连接的时候，就向数据库要求一个，执行完成后再断开连接。这样的方式将会消耗大量的资源和时间。<strong>数据库的连接资源并没有得到很好的重复利用。</strong>若同时有几百人甚至几千人在线，频繁的进行数据库连接操作将占用很多的系统资源，严重的甚至会造成服务器的崩溃。</li>
<li><strong>对于每一次数据库连接，使用完后都得断开。</strong>否则，如果程序出现异常而未能关闭，将会导致数据库系统中的内存泄漏，最终将导致重启数据库。（回忆：何为Java的内存泄漏？）</li>
<li><strong>这种开发不能控制被创建的连接对象数</strong>，系统资源会被毫无顾及的分配出去，如连接过多，也可能导致内存泄漏，服务器崩溃。 </li>
</ul>
</li>
</ul>
<h3 id="8-2-数据库连接池技术"><a href="#8-2-数据库连接池技术" class="headerlink" title="8.2 数据库连接池技术"></a>8.2 数据库连接池技术</h3><ul>
<li>为解决传统开发中的数据库连接问题，可以采用数据库连接池技术。</li>
<li><p><strong>数据库连接池的基本思想</strong>：就是为数据库连接建立一个“缓冲池”。预先在缓冲池中放入一定数量的连接，当需要建立数据库连接时，只需从“缓冲池”中取出一个，使用完毕之后再放回去。</p>
</li>
<li><p><strong>数据库连接池</strong>负责分配、管理和释放数据库连接，它<strong>允许应用程序重复使用一个现有的数据库连接，而不是重新建立一个</strong>。</p>
</li>
<li>数据库连接池在初始化时将创建一定数量的数据库连接放到连接池中，这些数据库连接的数量是由<strong>最小数据库连接数来设定</strong>的。无论这些数据库连接是否被使用，连接池都将一直保证至少拥有这么多的连接数量。连接池的<strong>最大数据库连接数量</strong>限定了这个连接池能占有的最大连接数，当应用程序向连接池请求的连接数超过最大连接数量时，这些请求将被加入到等待队列中。</li>
</ul>
<p><img src="尚硅谷_宋红康_JDBC.assets/1555593464033.png" alt="1555593464033"></p>
<ul>
<li><strong>工作原理：</strong></li>
</ul>
<p><img src="尚硅谷_宋红康_JDBC.assets/1555593598606.png" alt="1555593598606"></p>
<ul>
<li><p><strong>数据库连接池技术的优点</strong></p>
<p><strong>1. 资源重用</strong></p>
<p>由于数据库连接得以重用，避免了频繁创建，释放连接引起的大量性能开销。在减少系统消耗的基础上，另一方面也增加了系统运行环境的平稳性。</p>
<p><strong>2. 更快的系统反应速度</strong></p>
<p>数据库连接池在初始化过程中，往往已经创建了若干数据库连接置于连接池中备用。此时连接的初始化工作均已完成。对于业务请求处理而言，直接利用现有可用连接，避免了数据库连接初始化和释放过程的时间开销，从而减少了系统的响应时间</p>
<p><strong>3. 新的资源分配手段</strong></p>
<p>对于多应用共享同一数据库的系统而言，可在应用层通过数据库连接池的配置，实现某一应用最大可用数据库连接数的限制，避免某一应用独占所有的数据库资源</p>
<p><strong>4. 统一的连接管理，避免数据库连接泄漏</strong></p>
<p>在较为完善的数据库连接池实现中，可根据预先的占用超时设定，强制回收被占用连接，从而避免了常规数据库连接操作中可能出现的资源泄露</p>
</li>
</ul>
<h3 id="8-3-多种开源的数据库连接池"><a href="#8-3-多种开源的数据库连接池" class="headerlink" title="8.3 多种开源的数据库连接池"></a>8.3 多种开源的数据库连接池</h3><ul>
<li>JDBC 的数据库连接池使用 javax.sql.DataSource 来表示，DataSource 只是一个接口，该接口通常由服务器(Weblogic, WebSphere, Tomcat)提供实现，也有一些开源组织提供实现：<ul>
<li><strong>DBCP</strong> 是Apache提供的数据库连接池。tomcat 服务器自带dbcp数据库连接池。<strong>速度相对c3p0较快</strong>，但因自身存在BUG，Hibernate3已不再提供支持。</li>
<li><strong>C3P0</strong> 是一个开源组织提供的一个数据库连接池，<strong>速度相对较慢，稳定性还可以。</strong>hibernate官方推荐使用</li>
<li><strong>Proxool</strong> 是sourceforge下的一个开源项目数据库连接池，有监控连接池状态的功能，<strong>稳定性较c3p0差一点</strong></li>
<li><strong>BoneCP</strong> 是一个开源组织提供的数据库连接池，速度快</li>
<li><strong>Druid</strong> 是阿里提供的数据库连接池，据说是集DBCP 、C3P0 、Proxool 优点于一身的数据库连接池，但是速度不确定是否有BoneCP快</li>
</ul>
</li>
<li>DataSource 通常被称为数据源，它包含连接池和连接池管理两个部分，习惯上也经常把 DataSource 称为连接池</li>
<li><strong>DataSource用来取代DriverManager来获取Connection，获取速度快，同时可以大幅度提高数据库访问速度。</strong></li>
<li>特别注意：<ul>
<li>数据源和数据库连接不同，数据源无需创建多个，它是产生数据库连接的工厂，因此<strong>整个应用只需要一个数据源即可。</strong></li>
<li>当数据库访问结束后，程序还是像以前一样关闭数据库连接：conn.close(); 但conn.close()并没有关闭数据库的物理连接，它仅仅把数据库连接释放，归还给了数据库连接池。</li>
</ul>
</li>
</ul>
<h4 id="8-3-1-C3P0数据库连接池"><a href="#8-3-1-C3P0数据库连接池" class="headerlink" title="8.3.1 C3P0数据库连接池"></a>8.3.1 C3P0数据库连接池</h4><ul>
<li>获取连接方式一</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用C3P0数据库连接池的方式，获取数据库的连接：不推荐</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title function_">getConnection1</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">	<span class="type">ComboPooledDataSource</span> <span class="variable">cpds</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ComboPooledDataSource</span>();</span><br><span class="line">	cpds.setDriverClass(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>); </span><br><span class="line">	cpds.setJdbcUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/test&quot;</span>);</span><br><span class="line">	cpds.setUser(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">	cpds.setPassword(<span class="string">&quot;abc123&quot;</span>);</span><br><span class="line">		</span><br><span class="line"><span class="comment">//	cpds.setMaxPoolSize(100);</span></span><br><span class="line">	</span><br><span class="line">	<span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> cpds.getConnection();</span><br><span class="line">	<span class="keyword">return</span> conn;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>获取连接方式二</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用C3P0数据库连接池的配置文件方式，获取数据库的连接：推荐</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">DataSource</span> <span class="variable">cpds</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ComboPooledDataSource</span>(<span class="string">&quot;helloc3p0&quot;</span>);</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title function_">getConnection2</span><span class="params">()</span> <span class="keyword">throws</span> SQLException&#123;</span><br><span class="line">	<span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> cpds.getConnection();</span><br><span class="line">	<span class="keyword">return</span> conn;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其中，src下的配置文件为：【c3p0-config.xml】</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c3p0-config</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">named-config</span> <span class="attr">name</span>=<span class="string">&quot;helloc3p0&quot;</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 获取连接的4个基本信息 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>abc123<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span>&gt;</span>jdbc:mysql:///test<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">		<span class="comment">&lt;!-- 涉及到数据库连接池的管理的相关属性的设置 --&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 若数据库中连接数不足时, 一次向数据库服务器申请多少个连接 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;acquireIncrement&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 初始化数据库连接池时连接的数量 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialPoolSize&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 数据库连接池中的最小的数据库连接数 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minPoolSize&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 数据库连接池中的最大的数据库连接数 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolSize&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- C3P0 数据库连接池可以维护的 Statement 的个数 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxStatements&quot;</span>&gt;</span>20<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 每个连接同时可以使用的 Statement 对象的个数 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxStatementsPerConnection&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;/<span class="name">named-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c3p0-config</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="8-3-2-DBCP数据库连接池"><a href="#8-3-2-DBCP数据库连接池" class="headerlink" title="8.3.2 DBCP数据库连接池"></a>8.3.2 DBCP数据库连接池</h4><ul>
<li>DBCP 是 Apache 软件基金组织下的开源连接池实现，该连接池依赖该组织下的另一个开源系统：Common-pool。如需使用该连接池实现，应在系统中增加如下两个 jar 文件：<ul>
<li>Commons-dbcp.jar：连接池的实现</li>
<li>Commons-pool.jar：连接池实现的依赖库</li>
</ul>
</li>
<li><strong>Tomcat 的连接池正是采用该连接池来实现的。</strong>该数据库连接池既可以与应用服务器整合使用，也可由应用程序独立使用。</li>
<li>数据源和数据库连接不同，数据源无需创建多个，它是产生数据库连接的工厂，因此整个应用只需要一个数据源即可。</li>
<li>当数据库访问结束后，程序还是像以前一样关闭数据库连接：conn.close(); 但上面的代码并没有关闭数据库的物理连接，它仅仅把数据库连接释放，归还给了数据库连接池。</li>
<li>配置属性说明</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>属性</th>
<th>默认值</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>initialSize</td>
<td>0</td>
<td>连接池启动时创建的初始化连接数量</td>
</tr>
<tr>
<td>maxActive</td>
<td>8</td>
<td>连接池中可同时连接的最大的连接数</td>
</tr>
<tr>
<td>maxIdle</td>
<td>8</td>
<td>连接池中最大的空闲的连接数，超过的空闲连接将被释放，如果设置为负数表示不限制</td>
</tr>
<tr>
<td>minIdle</td>
<td>0</td>
<td>连接池中最小的空闲的连接数，低于这个数量会被创建新的连接。该参数越接近maxIdle，性能越好，因为连接的创建和销毁，都是需要消耗资源的；但是不能太大。</td>
</tr>
<tr>
<td>maxWait</td>
<td>无限制</td>
<td>最大等待时间，当没有可用连接时，连接池等待连接释放的最大时间，超过该时间限制会抛出异常，如果设置-1表示无限等待</td>
</tr>
<tr>
<td>poolPreparedStatements</td>
<td>false</td>
<td>开启池的Statement是否prepared</td>
</tr>
<tr>
<td>maxOpenPreparedStatements</td>
<td>无限制</td>
<td>开启池的prepared 后的同时最大连接数</td>
</tr>
<tr>
<td>minEvictableIdleTimeMillis</td>
<td></td>
<td>连接池中连接，在时间段内一直空闲， 被逐出连接池的时间</td>
</tr>
<tr>
<td>removeAbandonedTimeout</td>
<td>300</td>
<td>超过时间限制，回收没有用(废弃)的连接</td>
</tr>
<tr>
<td>removeAbandoned</td>
<td>false</td>
<td>超过removeAbandonedTimeout时间后，是否进 行没用连接（废弃）的回收</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li>获取连接方式一：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title function_">getConnection3</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">	<span class="type">BasicDataSource</span> <span class="variable">source</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BasicDataSource</span>();</span><br><span class="line">		</span><br><span class="line">	source.setDriverClassName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">	source.setUrl(<span class="string">&quot;jdbc:mysql:///test&quot;</span>);</span><br><span class="line">	source.setUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">	source.setPassword(<span class="string">&quot;abc123&quot;</span>);</span><br><span class="line">		</span><br><span class="line">	<span class="comment">//</span></span><br><span class="line">	source.setInitialSize(<span class="number">10</span>);</span><br><span class="line">		</span><br><span class="line">	<span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> source.getConnection();</span><br><span class="line">	<span class="keyword">return</span> conn;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>获取连接方式二：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用dbcp数据库连接池的配置文件方式，获取数据库的连接：推荐</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">DataSource</span> <span class="variable">source</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">static</span>&#123;</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		<span class="type">Properties</span> <span class="variable">pros</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">		</span><br><span class="line">		<span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> DBCPTest.class.getClassLoader().getResourceAsStream(<span class="string">&quot;dbcp.properties&quot;</span>);</span><br><span class="line">			</span><br><span class="line">		pros.load(is);</span><br><span class="line">		<span class="comment">//根据提供的BasicDataSourceFactory创建对应的DataSource对象</span></span><br><span class="line">		source = BasicDataSourceFactory.createDataSource(pros);</span><br><span class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">		e.printStackTrace();</span><br><span class="line">	&#125;</span><br><span class="line">		</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title function_">getConnection4</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">		</span><br><span class="line">	<span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> source.getConnection();</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> conn;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其中，src下的配置文件为：【dbcp.properties】</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">driverClassName</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/test?rewriteBatchedStatements=true&amp;useServerPrepStmts=false</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">abc123</span></span><br><span class="line"></span><br><span class="line"><span class="attr">initialSize</span>=<span class="string">10</span></span><br><span class="line"><span class="comment">#...</span></span><br></pre></td></tr></table></figure>
<h4 id="8-3-3-Druid（德鲁伊）数据库连接池"><a href="#8-3-3-Druid（德鲁伊）数据库连接池" class="headerlink" title="8.3.3 Druid（德鲁伊）数据库连接池"></a>8.3.3 Druid（德鲁伊）数据库连接池</h4><p>Druid是阿里巴巴开源平台上一个数据库连接池实现，它结合了C3P0、DBCP、Proxool等DB池的优点，同时加入了日志监控，可以很好的监控DB池连接和SQL的执行情况，可以说是针对监控而生的DB连接池，<strong>可以说是目前最好的连接池之一。</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.druid;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSourceFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestDruid</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">		<span class="type">Properties</span> <span class="variable">pro</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();		 pro.load(TestDruid.class.getClassLoader().getResourceAsStream(<span class="string">&quot;druid.properties&quot;</span>));</span><br><span class="line">		<span class="type">DataSource</span> <span class="variable">ds</span> <span class="operator">=</span> DruidDataSourceFactory.createDataSource(pro);</span><br><span class="line">		<span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> ds.getConnection();</span><br><span class="line">		System.out.println(conn);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>其中，src下的配置文件为：【druid.properties】</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">url=jdbc:mysql:<span class="comment">//localhost:3306/test?rewriteBatchedStatements=true</span></span><br><span class="line">username=root</span><br><span class="line">password=<span class="number">123456</span></span><br><span class="line">driverClassName=com.mysql.jdbc.Driver</span><br><span class="line"></span><br><span class="line">initialSize=<span class="number">10</span></span><br><span class="line">maxActive=<span class="number">20</span></span><br><span class="line">maxWait=<span class="number">1000</span></span><br><span class="line">filters=wall</span><br></pre></td></tr></table></figure>
<ul>
<li>详细配置参数：</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>配置</strong></th>
<th><strong>缺省</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>name</td>
<td></td>
<td>配置这个属性的意义在于，如果存在多个数据源，监控的时候可以通过名字来区分开来。   如果没有配置，将会生成一个名字，格式是：”DataSource-” +   System.identityHashCode(this)</td>
</tr>
<tr>
<td>url</td>
<td></td>
<td>连接数据库的url，不同数据库不一样。例如：mysql :   jdbc:mysql://10.20.153.104:3306/druid2      oracle :   jdbc:oracle:thin:@10.20.149.85:1521:ocnauto</td>
</tr>
<tr>
<td>username</td>
<td></td>
<td>连接数据库的用户名</td>
</tr>
<tr>
<td>password</td>
<td></td>
<td>连接数据库的密码。如果你不希望密码直接写在配置文件中，可以使用ConfigFilter。详细看这里：<a href="https://github.com/alibaba/druid/wiki/%E4%BD%BF%E7%94%A8ConfigFilter">https://github.com/alibaba/druid/wiki/%E4%BD%BF%E7%94%A8ConfigFilter</a></td>
</tr>
<tr>
<td>driverClassName</td>
<td></td>
<td>根据url自动识别   这一项可配可不配，如果不配置druid会根据url自动识别dbType，然后选择相应的driverClassName(建议配置下)</td>
</tr>
<tr>
<td>initialSize</td>
<td>0</td>
<td>初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时</td>
</tr>
<tr>
<td>maxActive</td>
<td>8</td>
<td>最大连接池数量</td>
</tr>
<tr>
<td>maxIdle</td>
<td>8</td>
<td>已经不再使用，配置了也没效果</td>
</tr>
<tr>
<td>minIdle</td>
<td></td>
<td>最小连接池数量</td>
</tr>
<tr>
<td>maxWait</td>
<td></td>
<td>获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。</td>
</tr>
<tr>
<td>poolPreparedStatements</td>
<td>false</td>
<td>是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。</td>
</tr>
<tr>
<td>maxOpenPreparedStatements</td>
<td>-1</td>
<td>要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100</td>
</tr>
<tr>
<td>validationQuery</td>
<td></td>
<td>用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。</td>
</tr>
<tr>
<td>testOnBorrow</td>
<td>true</td>
<td>申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。</td>
</tr>
<tr>
<td>testOnReturn</td>
<td>false</td>
<td>归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能</td>
</tr>
<tr>
<td>testWhileIdle</td>
<td>false</td>
<td>建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。</td>
</tr>
<tr>
<td>timeBetweenEvictionRunsMillis</td>
<td></td>
<td>有两个含义： 1)Destroy线程会检测连接的间隔时间2)testWhileIdle的判断依据，详细看testWhileIdle属性的说明</td>
</tr>
<tr>
<td>numTestsPerEvictionRun</td>
<td></td>
<td>不再使用，一个DruidDataSource只支持一个EvictionRun</td>
</tr>
<tr>
<td>minEvictableIdleTimeMillis</td>
<td></td>
<td></td>
</tr>
<tr>
<td>connectionInitSqls</td>
<td></td>
<td>物理连接初始化的时候执行的sql</td>
</tr>
<tr>
<td>exceptionSorter</td>
<td></td>
<td>根据dbType自动识别   当数据库抛出一些不可恢复的异常时，抛弃连接</td>
</tr>
<tr>
<td>filters</td>
<td></td>
<td>属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：   监控统计用的filter:stat日志用的filter:log4j防御sql注入的filter:wall</td>
</tr>
<tr>
<td>proxyFilters</td>
<td></td>
<td>类型是List，如果同时配置了filters和proxyFilters，是组合关系，并非替换关系</td>
</tr>
</tbody>
</table>
</div>
<h2 id="第9章：Apache-DBUtils实现CRUD操作"><a href="#第9章：Apache-DBUtils实现CRUD操作" class="headerlink" title="第9章：Apache-DBUtils实现CRUD操作"></a>第9章：Apache-DBUtils实现CRUD操作</h2><h3 id="9-1-Apache-DBUtils简介"><a href="#9-1-Apache-DBUtils简介" class="headerlink" title="9.1 Apache-DBUtils简介"></a>9.1 Apache-DBUtils简介</h3><ul>
<li><p>commons-dbutils 是 Apache 组织提供的一个开源 JDBC工具类库，它是对JDBC的简单封装，学习成本极低，并且使用dbutils能极大简化jdbc编码的工作量，同时也不会影响程序的性能。</p>
</li>
<li><p>API介绍：</p>
<ul>
<li>org.apache.commons.dbutils.QueryRunner</li>
<li>org.apache.commons.dbutils.ResultSetHandler</li>
<li>工具类：org.apache.commons.dbutils.DbUtils   </li>
</ul>
</li>
<li>API包说明：</li>
</ul>
<p><img src="尚硅谷_宋红康_JDBC.assets/1555595163263.png" alt="1555595163263"></p>
<p><img src="尚硅谷_宋红康_JDBC.assets/1555595198644.png" alt="1555595198644"></p>
<h3 id="9-2-主要API的使用"><a href="#9-2-主要API的使用" class="headerlink" title="9.2 主要API的使用"></a>9.2 主要API的使用</h3><h4 id="9-2-1-DbUtils"><a href="#9-2-1-DbUtils" class="headerlink" title="9.2.1 DbUtils"></a>9.2.1 DbUtils</h4><ul>
<li>DbUtils ：提供如关闭连接、装载JDBC驱动程序等常规工作的工具类，里面的所有方法都是静态的。主要方法如下：<ul>
<li><strong>public static void close(…) throws java.sql.SQLException</strong>：　DbUtils类提供了三个重载的关闭方法。这些方法检查所提供的参数是不是NULL，如果不是的话，它们就关闭Connection、Statement和ResultSet。</li>
<li>public static void closeQuietly(…): 这一类方法不仅能在Connection、Statement和ResultSet为NULL情况下避免关闭，还能隐藏一些在程序中抛出的SQLEeception。</li>
<li>public static void commitAndClose(Connection conn)throws SQLException： 用来提交连接的事务，然后关闭连接</li>
<li>public static void commitAndCloseQuietly(Connection conn)： 用来提交连接，然后关闭连接，并且在关闭连接时不抛出SQL异常。 </li>
<li>public static void rollback(Connection conn)throws SQLException：允许conn为null，因为方法内部做了判断</li>
<li>public static void rollbackAndClose(Connection conn)throws SQLException</li>
<li>rollbackAndCloseQuietly(Connection)</li>
<li>public static boolean loadDriver(java.lang.String driverClassName)：这一方装载并注册JDBC驱动程序，如果成功就返回true。使用该方法，你不需要捕捉这个异常ClassNotFoundException。</li>
</ul>
</li>
</ul>
<h4 id="9-2-2-QueryRunner类"><a href="#9-2-2-QueryRunner类" class="headerlink" title="9.2.2 QueryRunner类"></a>9.2.2 QueryRunner类</h4><ul>
<li><p><strong>该类简单化了SQL查询，它与ResultSetHandler组合在一起使用可以完成大部分的数据库操作，能够大大减少编码量。</strong></p>
</li>
<li><p>QueryRunner类提供了两个构造器：</p>
<ul>
<li>默认的构造器</li>
<li>需要一个 javax.sql.DataSource 来作参数的构造器</li>
</ul>
</li>
<li><p>QueryRunner类的主要方法：</p>
<ul>
<li><strong>更新</strong><ul>
<li>public int update(Connection conn, String sql, Object… params) throws SQLException:用来执行一个更新（插入、更新或删除）操作。</li>
<li>……</li>
</ul>
</li>
<li><strong>插入</strong><ul>
<li>public <T> T insert(Connection conn,String sql,ResultSetHandler<T> rsh, Object… params) throws SQLException：只支持INSERT语句，其中 rsh - The handler used to create the result object from the ResultSet of auto-generated keys.  返回值: An object generated by the handler.即自动生成的键值</li>
<li>….</li>
</ul>
</li>
<li><strong>批处理</strong><ul>
<li>public int[] batch(Connection conn,String sql,Object[][] params)throws SQLException： INSERT, UPDATE, or DELETE语句</li>
<li>public <T> T insertBatch(Connection conn,String sql,ResultSetHandler<T> rsh,Object[][] params)throws SQLException：只支持INSERT语句</li>
<li>…..</li>
</ul>
</li>
<li><strong>查询</strong><ul>
<li>public Object query(Connection conn, String sql, ResultSetHandler rsh,Object… params) throws SQLException：执行一个查询操作，在这个查询中，对象数组中的每个元素值被用来作为查询语句的置换参数。该方法会自行处理 PreparedStatement 和 ResultSet 的创建和关闭。</li>
<li>…… </li>
</ul>
</li>
</ul>
</li>
<li><p>测试</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 测试添加</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInsert</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">	<span class="type">QueryRunner</span> <span class="variable">runner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">QueryRunner</span>();</span><br><span class="line">	<span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> JDBCUtils.getConnection3();</span><br><span class="line">	<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into customers(name,email,birth)values(?,?,?)&quot;</span>;</span><br><span class="line">	<span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> runner.update(conn, sql, <span class="string">&quot;何成飞&quot;</span>, <span class="string">&quot;he@qq.com&quot;</span>, <span class="string">&quot;1992-09-08&quot;</span>);</span><br><span class="line"></span><br><span class="line">	System.out.println(<span class="string">&quot;添加了&quot;</span> + count + <span class="string">&quot;条记录&quot;</span>);</span><br><span class="line">		</span><br><span class="line">	JDBCUtils.closeResource(conn, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 测试删除</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDelete</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">	<span class="type">QueryRunner</span> <span class="variable">runner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">QueryRunner</span>();</span><br><span class="line">	<span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> JDBCUtils.getConnection3();</span><br><span class="line">	<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;delete from customers where id &lt; ?&quot;</span>;</span><br><span class="line">	<span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> runner.update(conn, sql,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">	System.out.println(<span class="string">&quot;删除了&quot;</span> + count + <span class="string">&quot;条记录&quot;</span>);</span><br><span class="line">		</span><br><span class="line">	JDBCUtils.closeResource(conn, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="9-2-3-ResultSetHandler接口及实现类"><a href="#9-2-3-ResultSetHandler接口及实现类" class="headerlink" title="9.2.3 ResultSetHandler接口及实现类"></a>9.2.3 ResultSetHandler接口及实现类</h4><ul>
<li><p>该接口用于处理 java.sql.ResultSet，将数据按要求转换为另一种形式。</p>
</li>
<li><p>ResultSetHandler 接口提供了一个单独的方法：Object handle (java.sql.ResultSet .rs)。</p>
</li>
<li><p>接口的主要实现类：</p>
<ul>
<li>ArrayHandler：把结果集中的第一行数据转成对象数组。</li>
<li>ArrayListHandler：把结果集中的每一行数据都转成一个数组，再存放到List中。</li>
<li><strong>BeanHandler：</strong>将结果集中的第一行数据封装到一个对应的JavaBean实例中。</li>
<li><strong>BeanListHandler：</strong>将结果集中的每一行数据都封装到一个对应的JavaBean实例中，存放到List里。</li>
<li>ColumnListHandler：将结果集中某一列的数据存放到List中。</li>
<li>KeyedHandler(name)：将结果集中的每一行数据都封装到一个Map里，再把这些map再存到一个map里，其key为指定的key。</li>
<li><strong>MapHandler：</strong>将结果集中的第一行数据封装到一个Map里，key是列名，value就是对应的值。</li>
<li><strong>MapListHandler：</strong>将结果集中的每一行数据都封装到一个Map里，然后再存放到List</li>
<li><strong>ScalarHandler：</strong>查询单个值对象</li>
</ul>
</li>
</ul>
<ul>
<li>测试</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 测试查询:查询一条记录</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 使用ResultSetHandler的实现类：BeanHandler</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testQueryInstance</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">	<span class="type">QueryRunner</span> <span class="variable">runner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">QueryRunner</span>();</span><br><span class="line"></span><br><span class="line">	<span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> JDBCUtils.getConnection3();</span><br><span class="line">		</span><br><span class="line">	<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select id,name,email,birth from customers where id = ?&quot;</span>;</span><br><span class="line">		</span><br><span class="line">	<span class="comment">//</span></span><br><span class="line">	BeanHandler&lt;Customer&gt; handler = <span class="keyword">new</span> <span class="title class_">BeanHandler</span>&lt;&gt;(Customer.class);</span><br><span class="line">	<span class="type">Customer</span> <span class="variable">customer</span> <span class="operator">=</span> runner.query(conn, sql, handler, <span class="number">23</span>);</span><br><span class="line">	System.out.println(customer);	</span><br><span class="line">	JDBCUtils.closeResource(conn, <span class="literal">null</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 测试查询:查询多条记录构成的集合</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 使用ResultSetHandler的实现类：BeanListHandler</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testQueryList</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">	<span class="type">QueryRunner</span> <span class="variable">runner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">QueryRunner</span>();</span><br><span class="line"></span><br><span class="line">	<span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> JDBCUtils.getConnection3();</span><br><span class="line">		</span><br><span class="line">	<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select id,name,email,birth from customers where id &lt; ?&quot;</span>;</span><br><span class="line">		</span><br><span class="line">	<span class="comment">//</span></span><br><span class="line">	BeanListHandler&lt;Customer&gt; handler = <span class="keyword">new</span> <span class="title class_">BeanListHandler</span>&lt;&gt;(Customer.class);</span><br><span class="line">	List&lt;Customer&gt; list = runner.query(conn, sql, handler, <span class="number">23</span>);</span><br><span class="line">	list.forEach(System.out::println);</span><br><span class="line">		</span><br><span class="line">	JDBCUtils.closeResource(conn, <span class="literal">null</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 自定义ResultSetHandler的实现类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testQueryInstance1</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">	<span class="type">QueryRunner</span> <span class="variable">runner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">QueryRunner</span>();</span><br><span class="line"></span><br><span class="line">	<span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> JDBCUtils.getConnection3();</span><br><span class="line">		</span><br><span class="line">	<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select id,name,email,birth from customers where id = ?&quot;</span>;</span><br><span class="line">		</span><br><span class="line">	ResultSetHandler&lt;Customer&gt; handler = <span class="keyword">new</span> <span class="title class_">ResultSetHandler</span>&lt;Customer&gt;() &#123;</span><br><span class="line"></span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="keyword">public</span> Customer <span class="title function_">handle</span><span class="params">(ResultSet rs)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;handle&quot;</span>);</span><br><span class="line"><span class="comment">//			return new Customer(1,&quot;Tom&quot;,&quot;tom@126.com&quot;,new Date(123323432L));</span></span><br><span class="line">				</span><br><span class="line">			<span class="keyword">if</span>(rs.next())&#123;</span><br><span class="line">				<span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> rs.getInt(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">				<span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">				<span class="type">String</span> <span class="variable">email</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;email&quot;</span>);</span><br><span class="line">				<span class="type">Date</span> <span class="variable">birth</span> <span class="operator">=</span> rs.getDate(<span class="string">&quot;birth&quot;</span>);</span><br><span class="line">					</span><br><span class="line">				<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Customer</span>(id, name, email, birth);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">				</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line">		</span><br><span class="line">	<span class="type">Customer</span> <span class="variable">customer</span> <span class="operator">=</span> runner.query(conn, sql, handler, <span class="number">23</span>);</span><br><span class="line">		</span><br><span class="line">	System.out.println(customer);</span><br><span class="line">		</span><br><span class="line">	JDBCUtils.closeResource(conn, <span class="literal">null</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 如何查询类似于最大的，最小的，平均的，总和，个数相关的数据，</span></span><br><span class="line"><span class="comment"> * 使用ScalarHandler</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testQueryValue</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">	<span class="type">QueryRunner</span> <span class="variable">runner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">QueryRunner</span>();</span><br><span class="line"></span><br><span class="line">	<span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> JDBCUtils.getConnection3();</span><br><span class="line">		</span><br><span class="line">	<span class="comment">//测试一：</span></span><br><span class="line"><span class="comment">//	String sql = &quot;select count(*) from customers where id &lt; ?&quot;;</span></span><br><span class="line"><span class="comment">//	ScalarHandler handler = new ScalarHandler();</span></span><br><span class="line"><span class="comment">//	long count = (long) runner.query(conn, sql, handler, 20);</span></span><br><span class="line"><span class="comment">//	System.out.println(count);</span></span><br><span class="line">		</span><br><span class="line">	<span class="comment">//测试二：</span></span><br><span class="line">	<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select max(birth) from customers&quot;</span>;</span><br><span class="line">	<span class="type">ScalarHandler</span> <span class="variable">handler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ScalarHandler</span>();</span><br><span class="line">	<span class="type">Date</span> <span class="variable">birth</span> <span class="operator">=</span> (Date) runner.query(conn, sql, handler);</span><br><span class="line">	System.out.println(birth);</span><br><span class="line">		</span><br><span class="line">	JDBCUtils.closeResource(conn, <span class="literal">null</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="JDBC总结"><a href="#JDBC总结" class="headerlink" title="JDBC总结"></a>JDBC总结</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">总结</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdateWithTx</span><span class="params">()</span> &#123;</span><br><span class="line">		</span><br><span class="line">	<span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		<span class="comment">//1.获取连接的操作（</span></span><br><span class="line">		<span class="comment">//① 手写的连接：JDBCUtils.getConnection();</span></span><br><span class="line">		<span class="comment">//② 使用数据库连接池：C3P0;DBCP;Druid</span></span><br><span class="line">		<span class="comment">//2.对数据表进行一系列CRUD操作</span></span><br><span class="line">		<span class="comment">//① 使用PreparedStatement实现通用的增删改、查询操作（version 1.0 \ version 2.0)</span></span><br><span class="line"><span class="comment">//version2.0的增删改public void update(Connection conn,String sql,Object ... args)&#123;&#125;</span></span><br><span class="line"><span class="comment">//version2.0的查询 public &lt;T&gt; T getInstance(Connection conn,Class&lt;T&gt; clazz,String sql,Object ... args)&#123;&#125;</span></span><br><span class="line">		<span class="comment">//② 使用dbutils提供的jar包中提供的QueryRunner类</span></span><br><span class="line">			</span><br><span class="line">		<span class="comment">//提交数据</span></span><br><span class="line">		conn.commit();</span><br><span class="line">			</span><br><span class="line">	</span><br><span class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">		e.printStackTrace();</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="comment">//回滚数据</span></span><br><span class="line">			conn.rollback();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e1) &#123;</span><br><span class="line">			e1.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">			</span><br><span class="line">	&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">		<span class="comment">//3.关闭连接等操作</span></span><br><span class="line">		<span class="comment">//① JDBCUtils.closeResource();</span></span><br><span class="line">		<span class="comment">//② 使用dbutils提供的jar包中提供的DbUtils类提供了关闭的相关操作</span></span><br><span class="line">			</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
  </entry>
  <entry>
    <title>Markdown语法</title>
    <url>/posts/5878.html</url>
    <content><![CDATA[<meta name="referrer" content="no-referrer" />

<h1 align="center">Markdown语法</h1>

<h3 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h3><p>两种方法：</p>
<p>1）使用快捷键Ctrl+(1-6)</p>
<p>1）使用#+空格+文字(一个#代表一级，两个代表二级……)</p>
<p>例：</p>
<span id="more"></span>
<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="2-段落"><a href="#2-段落" class="headerlink" title="2.段落"></a>2.段落</h3><p>段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用<strong>两个以上</strong>空格加上回车（引用中换行省略回车）。</p>
<p>换行不换段：shift+enter</p>
<p>换段：enter</p>
<p>如：</p>
<p>我不换段<br>哈哈哈</p>
<p>我换了</p>
<h3 id="3-区块引用"><a href="#3-区块引用" class="headerlink" title="3.区块引用"></a>3.区块引用</h3><p>在段落的每行或者只在第一行使用符号”&gt;”，还可使用多个嵌套引用，如：</p>
<blockquote>
<p>区块引用</p>
<blockquote>
<p>嵌套引用</p>
</blockquote>
</blockquote>
<h3 id="4-代码区块"><a href="#4-代码区块" class="headerlink" title="4.代码区块"></a>4.代码区块</h3><p>输入法切换为非中文，输入键盘左上角ESc下的按键，连续输入三次 ，在输入对应的编程语言类型，则会出现代码框，即可输入代码。</p>
<p>代码区块：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    printf(<span class="string">&quot;Hello,Markdown.&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="5-强调（加粗）"><a href="#5-强调（加粗）" class="headerlink" title="5.强调（加粗）"></a>5.强调（加粗）</h3><p>在强调内容两侧分别加上**或者—</p>
<p>如：</p>
<p><strong>加粗</strong></p>
<h3 id="6-斜体"><a href="#6-斜体" class="headerlink" title="6.斜体"></a>6.斜体</h3><p>在要使用斜体的内容左右两侧加上*或-</p>
<p>如：</p>
<p><em>斜体</em></p>
<h3 id="7-下划线"><a href="#7-下划线" class="headerlink" title="7.下划线"></a>7.下划线</h3><p>HTML的语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span>我是下划线<span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br><span class="line">或者快捷键CTRL+u</span><br></pre></td></tr></table></figure>
<p><u>我是下划线</u></p>
<h3 id="8-高亮"><a href="#8-高亮" class="headerlink" title="8.高亮"></a>8.高亮</h3><p>在需要加高亮的内容左右两侧加上==</p>
<p>如：</p>
<p>==这是高亮的内容==</p>
<h3 id="9-下标"><a href="#9-下标" class="headerlink" title="9.下标"></a>9.下标</h3><p>如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">水 H~<span class="number">2</span>~O</span><br><span class="line">在下标的左右两端加上~</span><br></pre></td></tr></table></figure>
<p>水  H~2~O</p>
<h3 id="10-上标"><a href="#10-上标" class="headerlink" title="10.上标"></a>10.上标</h3><p>如：</p>
<figure class="highlight parser3"><table><tr><td class="code"><pre><span class="line"><span class="language-xml">面积 m</span><span class="keyword">^2</span><span class="language-xml">^</span></span><br><span class="line"><span class="language-xml">体积 m</span><span class="keyword">^3</span><span class="language-xml">^</span></span><br><span class="line"><span class="language-xml">在上标的左右两端加上^</span></span><br></pre></td></tr></table></figure>
<p>面积 m^2^<br>体积 m^3^</p>
<h3 id="10-表格"><a href="#10-表格" class="headerlink" title="10.表格"></a>10.表格</h3><ol>
<li>快捷键：Ctrl+t</li>
<li>源代码模式下使用|来分隔不同的单元格，使用-来分隔表头和其他行</li>
</ol>
<p>如:</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>姓名</th>
<th>年龄</th>
<th>成绩</th>
</tr>
</thead>
<tbody>
<tr>
<td>张三</td>
<td>11</td>
<td>19</td>
</tr>
<tr>
<td>索酷</td>
<td>29</td>
<td>299</td>
</tr>
<tr>
<td>四去</td>
<td>29</td>
<td>210</td>
</tr>
</tbody>
</table>
</div>
<h3 id="11-分割线"><a href="#11-分割线" class="headerlink" title="11.分割线"></a>11.分割线</h3><p>只需要输入三个-符号</p>
<hr>
<h3 id="12-删除线"><a href="#12-删除线" class="headerlink" title="12.删除线"></a>12.删除线</h3><p>左右两边加上~~</p>
<p><del>删除了</del></p>
<h3 id="13-脚注"><a href="#13-脚注" class="headerlink" title="13.脚注"></a>13.脚注</h3><p><sup><a href="#fn_文字" id="reffn_文字">文字</a></sup></p>
<p>示例：</p>
<p>给这段文字加上脚注<sup><a href="#fn_脚注" id="reffn_脚注">脚注</a></sup></p>
<h3 id="14-有序列表"><a href="#14-有序列表" class="headerlink" title="14.有序列表"></a>14.有序列表</h3><ol>
<li>快捷键：CTRL+shift+[</li>
<li>直接输入数字+一点+空格</li>
</ol>
<h3 id="15-无序列表"><a href="#15-无序列表" class="headerlink" title="15.无序列表"></a>15.无序列表</h3><ol>
<li>快捷键：CTRL+shift+]</li>
<li>直接输入-+空格</li>
</ol>
<h3 id="16-链接"><a href="#16-链接" class="headerlink" title="16.链接"></a>16.链接</h3><figure class="highlight scheme"><table><tr><td class="code"><pre><span class="line">[<span class="name">链接名称</span>](<span class="name">图片地址</span>)</span><br></pre></td></tr></table></figure>
<p>例如：</p>
<p>这个一个链接：<a href="https://baidu.com">百度</a></p>
<h3 id="17-图片"><a href="#17-图片" class="headerlink" title="17.图片"></a>17.图片</h3><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">!<span class="selector-attr">[当图片无法显示时的占位符]</span>(图片地址)</span><br></pre></td></tr></table></figure>
<p>例如：</p>
<p><img src="Markdown语法.assets/image-20220428151121973.png" alt="占位符"></p>
<h3 id="18-内部跳转-本文件内跳转，必须是标题"><a href="#18-内部跳转-本文件内跳转，必须是标题" class="headerlink" title="18.内部跳转-本文件内跳转，必须是标题"></a>18.内部跳转-本文件内跳转，必须是标题</h3><p>格式为<code>[link text](#要去哪个标题)</code></p>
<p><a href="#1.标题">我想跳转到第一个标题</a></p>
<h3 id="19-自动链接"><a href="#19-自动链接" class="headerlink" title="19.自动链接"></a>19.自动链接</h3><p>使用&lt;&gt;包括的URL或邮箱地址会被直接自动做转换为超链接：</p>
<p><a href="https://www.baidu.com">https://www.baidu.com</a></p>
<h3 id="20-网上图片"><a href="#20-网上图片" class="headerlink" title="20.网上图片"></a>20.网上图片</h3><p>一样的，把图片路径换为网页路径</p>
<p>如：</p>
<p><img src="Markdown语法.assets/format,png.png" alt="网上图片：猫咪"></p>
<h3 id="21-任务"><a href="#21-任务" class="headerlink" title="21.任务"></a>21.任务</h3><p><code>- [x] 吃饭</code></p>
<ul>
<li>[x] 吃饭</li>
<li>[x] 睡觉</li>
</ul>
<h3 id="22-数学公式"><a href="#22-数学公式" class="headerlink" title="22.数学公式"></a>22.数学公式</h3><p>公式左右两边用两个美元符号包围</p>
<script type="math/tex; mode=display">
\frac{\partial f}{\partial x} = 2\sqrt{a}x</script><p>相关数学公式符号可查</p>
]]></content>
      <categories>
        <category>Markdown语法笔记</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL</title>
    <url>/posts/26f9.html</url>
    <content><![CDATA[<meta name="referrer" content="no-referrer" />

<h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><p>什么是数据库？什么是数据库管理系统？什么是MySQL？他们之间的关系是什么？</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">数据库：</span><br><span class="line">	英文单词DataBase，简称DB。按照一定格式存储数据的一些文件的组合。</span><br><span class="line">	顾名思义：存储数据的仓库，实际上就是一堆文件。这些文件中存储了具有特定格式的数据。</span><br><span class="line">数据库管理系统：</span><br><span class="line">		DataBaseManagement，简称DBMS。</span><br><span class="line">		数据库管理系统是专门用来管理数据库中数据的，数据库管理系统可以对数据库当中的数据进行增删改查。</span><br><span class="line">常见的数据库管理系统：</span><br><span class="line">		MySQL、Oracle、MS SqlServer、DB2、sybase等....</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p><strong>SQL： 结构化查询语言</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">程序员需要学习SQL语句，程序员通过编写SQL语句，然后DBMS负责执行SQL语句，最终来完成数据库中数据的增删改查操作。</span><br><span class="line">SQL是一套标准，程序员主要学习的就是SQL语句，这个SQL在mysql中可以使用，</span><br><span class="line">同时在Oracle中也可以使用，在DB2中也可以使用。</span><br><span class="line"></span><br><span class="line">三者之间的关系？</span><br><span class="line">	DBMS--执行--&gt; SQL --操作--&gt; DB</span><br><span class="line"></span><br><span class="line">先安装数据库管理系统MySQL，然后学习SQL语句怎么写，编写SQL语句之后，DBMS</span><br><span class="line">对SQL语句进行执行，最终来完成数据库的数据管理。</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="在windows操作系统中，怎么使用命令来启动和关闭mysql服务呢？"><a href="#在windows操作系统中，怎么使用命令来启动和关闭mysql服务呢？" class="headerlink" title="在windows操作系统中，怎么使用命令来启动和关闭mysql服务呢？"></a>在windows操作系统中，怎么使用命令来启动和关闭mysql服务呢？</h4><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">语法： </span><br><span class="line">	<span class="built_in">net</span> stop 服务名称；</span><br><span class="line">	<span class="built_in">net</span> <span class="built_in">start</span> 服务名称；</span><br></pre></td></tr></table></figure>
<p>其他服务也类似；</p>
<h4 id="怎么使用客户端登录mysql数据库呢？"><a href="#怎么使用客户端登录mysql数据库呢？" class="headerlink" title="怎么使用客户端登录mysql数据库呢？"></a>怎么使用客户端登录mysql数据库呢？</h4><p>使用bin目录下的mysql.exe命令来连接mysql数据库服务器</p>
<p>本地登录（显示密码形式）：</p>
<p>本地登录（隐藏密码形式）：</p>
<h4 id="关于SQL语句的分类"><a href="#关于SQL语句的分类" class="headerlink" title="关于SQL语句的分类"></a>关于SQL语句的分类</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SQL语句有很多，最好进行分门别类，这样更容易记忆。</span><br><span class="line">	分为：</span><br><span class="line">	DQL：</span><br><span class="line">		数据查询语言（凡是带有select关键字的都是查询语句）</span><br><span class="line">		select...</span><br><span class="line"></span><br><span class="line">	DML：</span><br><span class="line">		数据操作语言（凡是对表当中的数据进行增删改的都是DML）</span><br><span class="line">		insert delete update</span><br><span class="line">		insert 增</span><br><span class="line">		delete 删</span><br><span class="line">		update 改</span><br><span class="line">		这个主要是操作表中的数据data。</span><br><span class="line"></span><br><span class="line">	DDL：</span><br><span class="line">		数据定义语言</span><br><span class="line">		凡是带有create、drop、alter的都是DDL。</span><br><span class="line">		DDL主要操作的是表的结构。不是表中的数据。</span><br><span class="line">		create：新建，等同于增</span><br><span class="line">		drop：删除</span><br><span class="line">		alter：修改</span><br><span class="line">		这个增删改和DML不同，这个主要是对表结构进行操作。</span><br><span class="line"></span><br><span class="line">	TCL：</span><br><span class="line">		是事务控制语言</span><br><span class="line">		包括：</span><br><span class="line">		事务提交：commit;</span><br><span class="line">		事务回滚：rollback;</span><br><span class="line"></span><br><span class="line">	DCL：</span><br><span class="line">		是数据控制语言。</span><br><span class="line">		例如：授权grant、撤销权限revoke....</span><br></pre></td></tr></table></figure>
<h4 id="MySQL常用命令"><a href="#MySQL常用命令" class="headerlink" title="MySQL常用命令"></a>MySQL常用命令</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">退出mysql ：exit;</span><br><span class="line"></span><br><span class="line">查看mysql中有哪些数据库 : show databases;  </span><br><span class="line">#注意：以分号结尾，分号是英文的分号。</span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">	+--------------------+</span><br><span class="line">	| Database           |</span><br><span class="line">	+--------------------+</span><br><span class="line">	| information_schema |</span><br><span class="line">	| mysql              |</span><br><span class="line">	| performance_schema |</span><br><span class="line">	| test               |</span><br><span class="line">	+--------------------+</span><br><span class="line">	mysql默认自带了4个数据库。</span><br><span class="line">	</span><br><span class="line">怎么选择使用某个数据库:</span><br><span class="line">mysql&gt; use test;</span><br><span class="line">Database changed</span><br><span class="line">表示正在使用一个名字叫做test的数据库。</span><br><span class="line"></span><br><span class="line">怎么创建数据库:</span><br><span class="line">mysql&gt; create database bjpowernode;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">		+--------------------+</span><br><span class="line">		| Database           |</span><br><span class="line">		+--------------------+</span><br><span class="line">		| information_schema |</span><br><span class="line">		| bjpowernode        |</span><br><span class="line">		| mysql              |</span><br><span class="line">		| performance_schema |</span><br><span class="line">		| test               |</span><br><span class="line">		+--------------------+</span><br><span class="line">		</span><br><span class="line">查看某个数据库下有哪些表:</span><br><span class="line">mysql&gt; show tables;</span><br><span class="line"></span><br><span class="line">查看mysql数据库的版本号：</span><br><span class="line">mysql&gt; select version();</span><br><span class="line">		+-----------+</span><br><span class="line">		| version() |</span><br><span class="line">		+-----------+</span><br><span class="line">		| 5.5.36    |</span><br><span class="line">		+-----------+</span><br><span class="line">		</span><br><span class="line">查看当前使用的是哪个数据库:</span><br><span class="line">mysql&gt; select database();</span><br><span class="line">	+-------------+</span><br><span class="line">	| database()  |</span><br><span class="line">	+-------------+</span><br><span class="line">	| bjpowernode |</span><br><span class="line">	+-------------+</span><br><span class="line"></span><br><span class="line">导入一下提前准备好的数据：bjpowernode.sql 这个文件中是练习准备的数据库表。</span><br><span class="line">怎么将sql文件中的数据导入</span><br><span class="line">mysql&gt; source D:\course\03-MySQL\document\bjpowernode.sql #注意：路径中不要有中文！！！！</span><br><span class="line"></span><br><span class="line">查看表的结构：</span><br><span class="line">mysql&gt; desc dept; # describe缩写为：desc</span><br><span class="line">+--------+-------------+------+-----+---------+-------+</span><br><span class="line">| Field  | Type        | Null | Key | Default | Extra |</span><br><span class="line">+--------+-------------+------+-----+---------+-------+</span><br><span class="line">| DEPTNO | int(2)      | NO   | PRI | NULL    |       |部门编号</span><br><span class="line">| DNAME  | varchar(14) | YES  |     | NULL    |       |部门名字</span><br><span class="line">| LOC    | varchar(13) | YES  |     | NULL    |       |地理位置</span><br><span class="line">+--------+-------------+------+-----+---------+-------+</span><br><span class="line">#注意：mysql是不见“;”不执行的，</span><br><span class="line">\c用来终止一条命令的输入</span><br></pre></td></tr></table></figure>
<h1 id="数据库表"><a href="#数据库表" class="headerlink" title="数据库表"></a>数据库表</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">数据库当中最基本的单元是表：table</span><br><span class="line"></span><br><span class="line">	什么是表table？为什么用表来存储数据呢？</span><br><span class="line"></span><br><span class="line">		姓名	性别	年龄(列：字段) </span><br><span class="line">		---------------------------</span><br><span class="line">		张三	男			20            -------&gt;行（记录）</span><br><span class="line">		李四	女			21            -------&gt;行（记录）</span><br><span class="line">		王五	男			22            -------&gt;行（记录）</span><br><span class="line">	</span><br><span class="line">	数据库当中是以表格的形式表示数据的。因为表比较直观。</span><br><span class="line"></span><br><span class="line">	任何一张表都有行和列：</span><br><span class="line">		行（row）：被称为数据/记录。</span><br><span class="line">		列（column）：被称为字段。</span><br><span class="line">        </span><br><span class="line">	姓名字段、性别字段、年龄字段。</span><br><span class="line"></span><br><span class="line">	了解一下：</span><br><span class="line">		每一个字段都有：字段名、数据类型、约束等属性。字段名可以理解，是一个普通的名字，见名知意就行。</span><br><span class="line">		数据类型：字符串，数字，日期等，后期讲。</span><br><span class="line">		约束：约束也有很多，其中一个叫做唯一性约束，这种约束添加之后，该字段中的数据不能重复。		</span><br></pre></td></tr></table></figure>
<h1 id="查询：select"><a href="#查询：select" class="headerlink" title="查询：select"></a>查询：select</h1><h2 id="简单查询"><a href="#简单查询" class="headerlink" title="简单查询"></a>简单查询</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查询一个字段？</span><br><span class="line">select 字段名 from 表名; </span><br><span class="line"># 其中要注意：select和from都是关键字。</span><br><span class="line"># 字段名和表名都是标识符。</span><br><span class="line"></span><br><span class="line">强调：对于SQL语句来说，是通用的，所有的SQL语句以“;”结尾。</span><br><span class="line">	 另外SQL语句不区分大小写，都行。</span><br><span class="line"></span><br><span class="line">查询两个字段，或者多个字段使用逗号隔开“,”</span><br><span class="line">查询部门编号和部门名</span><br><span class="line">select deptno,dname from dept;</span><br><span class="line">    +--------+------------+</span><br><span class="line">    | deptno | dname      |</span><br><span class="line">    +--------+------------+</span><br><span class="line">    |     10 | ACCOUNTING |</span><br><span class="line">    |     20 | RESEARCH   |</span><br><span class="line">    |     30 | SALES      |</span><br><span class="line">    |     40 | OPERATIONS |</span><br><span class="line">    +--------+------------+</span><br><span class="line">    </span><br><span class="line">查询所有字段</span><br><span class="line">第一种方式：可以把每个字段都写上</span><br><span class="line">	select a,b,c,d,e,f... from tablename;</span><br><span class="line"></span><br><span class="line">第二种方式：可以使用*</span><br><span class="line">	select * from dept;</span><br><span class="line">		+--------+------------+----------+</span><br><span class="line">		| DEPTNO | DNAME      | LOC      |</span><br><span class="line">		+--------+------------+----------+</span><br><span class="line">        |     10 | ACCOUNTING | NEW YORK |</span><br><span class="line">        |     20 | RESEARCH   | DALLAS   |</span><br><span class="line">        |     30 | SALES      | CHICAGO  |</span><br><span class="line">        |     40 | OPERATIONS | BOSTON   |</span><br><span class="line">        +--------+------------+----------+</span><br><span class="line"></span><br><span class="line">    这种方式的缺点：</span><br><span class="line">        1、效率低</span><br><span class="line">        2、可读性差。</span><br><span class="line">    在实际开发中不建议，可以自己玩没问题。</span><br><span class="line">    你可以在DOS命令窗口中想快速的看一看全表数据可以采用这种方式。</span><br><span class="line"></span><br><span class="line">给查询的列起别名：使用as关键字起别名。</span><br><span class="line">  mysql&gt; select deptno,dname as deptname from dept;</span><br><span class="line">      +--------+------------+</span><br><span class="line">      | deptno | deptname   |</span><br><span class="line">      +--------+------------+</span><br><span class="line">      |     10 | ACCOUNTING |</span><br><span class="line">      |     20 | RESEARCH   |</span><br><span class="line">      |     30 | SALES      |</span><br><span class="line">      |     40 | OPERATIONS |</span><br><span class="line">      +--------+------------+</span><br><span class="line">  注意：只是将显示的查询结果列名显示为deptname，原表列名还是叫：dname</span><br><span class="line">  记住：select语句是永远都不会进行修改操作的。（因为只负责查询）</span><br><span class="line"></span><br><span class="line">  as关键字可以省略吗？可以的</span><br><span class="line">    mysql&gt; select deptno,dname deptname from dept;</span><br><span class="line">    </span><br><span class="line">假设起别名的时候，别名里面有空格，怎么办？   </span><br><span class="line">select deptno,dname &#x27;dept name&#x27; from dept; //加单引号</span><br><span class="line">select deptno,dname &quot;dept name&quot; from dept; //加双引号</span><br><span class="line">      +--------+------------+</span><br><span class="line">      | deptno | dept name  |</span><br><span class="line">      +--------+------------+</span><br><span class="line">      |     10 | ACCOUNTING |</span><br><span class="line">      |     20 | RESEARCH   |</span><br><span class="line">      |     30 | SALES      |</span><br><span class="line">      |     40 | OPERATIONS |</span><br><span class="line">      +--------+------------+</span><br><span class="line">注意：在所有的数据库当中，字符串统一使用单引号括起来，单引号是标准，双引号在oracle数据库中用不了。但是在mysql中可以使用。</span><br><span class="line"></span><br><span class="line">不看表中的数据，只看表的结构，有一个命令：</span><br><span class="line">desc 表名；</span><br><span class="line">mysql&gt; desc emp;</span><br><span class="line">+----------+-------------+------+-----+---------+-------+</span><br><span class="line">| Field    | Type        | Null | Key | Default | Extra |</span><br><span class="line">+----------+-------------+------+-----+---------+-------+</span><br><span class="line">| EMPNO    | int(4)      | NO   | PRI | NULL    |       |</span><br><span class="line">| ENAME    | varchar(10) | YES  |     | NULL    |       |</span><br><span class="line">| JOB      | varchar(9)  | YES  |     | NULL    |       |</span><br><span class="line">| MGR      | int(4)      | YES  |     | NULL    |       |</span><br><span class="line">| HIREDATE | date        | YES  |     | NULL    |       |</span><br><span class="line">| SAL      | double(7,2) | YES  |     | NULL    |       |</span><br><span class="line">| COMM     | double(7,2) | YES  |     | NULL    |       |</span><br><span class="line">| DEPTNO   | int(2)      | YES  |     | NULL    |       |</span><br><span class="line">+----------+-------------+------+-----+---------+-------+</span><br></pre></td></tr></table></figure>
<h2 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h2><p>条件查询：不是将表中所有数据都查出来。是查询出来符合条件的。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查询语法格式：</span><br><span class="line">    select</span><br><span class="line">      字段1,字段2,字段3....</span><br><span class="line">    from </span><br><span class="line">      表名</span><br><span class="line">    where</span><br><span class="line">      条件;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">都有哪些条件？</span><br><span class="line">= 等于</span><br><span class="line">查询薪资等于800的员工姓名和编号？</span><br><span class="line">  select empno,ename from emp where sal = 800;</span><br><span class="line">查询SMITH的编号和薪资？</span><br><span class="line">  select empno,sal from emp where ename = &#x27;SMITH&#x27;; //字符串使用单引号</span><br><span class="line"></span><br><span class="line">&lt;&gt; 或!= 不等于</span><br><span class="line">查询薪资不等于800的员工姓名和编号？</span><br><span class="line">  select empno,ename from emp where sal != 800;</span><br><span class="line">  select empno,ename from emp where sal &lt;&gt; 800; // 小于号和大于号组成的不等号</span><br><span class="line">  </span><br><span class="line">&lt; 小于</span><br><span class="line">查询薪资小于2000的员工姓名和编号？</span><br><span class="line">  mysql&gt; select empno,ename,sal from emp where sal &lt; 2000;</span><br><span class="line">  +-------+--------+---------+</span><br><span class="line">  | empno | ename  | sal     |</span><br><span class="line">  +-------+--------+---------+</span><br><span class="line">  |  7369 | SMITH  |  800.00 |</span><br><span class="line">  |  7499 | ALLEN  | 1600.00 |</span><br><span class="line">  |  7521 | WARD   | 1250.00 |</span><br><span class="line">  +-------+--------+---------+</span><br><span class="line"></span><br><span class="line">&lt;= 小于等于</span><br><span class="line">查询薪资小于等于3000的员工姓名和编号？</span><br><span class="line">  select empno,ename,sal from emp where sal &lt;= 3000;</span><br><span class="line"></span><br><span class="line">&gt; 大于</span><br><span class="line">查询薪资大于3000的员工姓名和编号？</span><br><span class="line">  select empno,ename,sal from emp where sal &gt; 3000;</span><br><span class="line"></span><br><span class="line">&gt;= 大于等于</span><br><span class="line">查询薪资大于等于3000的员工姓名和编号？</span><br><span class="line">  select empno,ename,sal from emp where sal &gt;= 3000;</span><br><span class="line"></span><br><span class="line">between … and …. 两个值之间, 等同于 &gt;= and &lt;=</span><br><span class="line">查询薪资在2450和3000之间的员工信息？包括2450和3000</span><br><span class="line">  第一种方式：&gt;= and &lt;= （and是并且的意思。）</span><br><span class="line">    select empno,ename,sal from emp where sal &gt;= 2450 and sal &lt;= 3000;</span><br><span class="line">    +-------+-------+---------+</span><br><span class="line">    | empno | ename | sal     |</span><br><span class="line">    +-------+-------+---------+</span><br><span class="line">    |  7566 | JONES | 2975.00 |</span><br><span class="line">    |  7698 | BLAKE | 2850.00 |</span><br><span class="line">    |  7782 | CLARK | 2450.00 |</span><br><span class="line">    |  7788 | SCOTT | 3000.00 |</span><br><span class="line">    |  7902 | FORD  | 3000.00 |</span><br><span class="line">    +-------+-------+---------+</span><br><span class="line">  第二种方式：between … and …</span><br><span class="line">    select </span><br><span class="line">      empno,ename,sal </span><br><span class="line">    from </span><br><span class="line">      emp </span><br><span class="line">    where </span><br><span class="line">      sal between 2450 and 3000;</span><br><span class="line">    </span><br><span class="line">    注意：</span><br><span class="line">      使用between and的时候，必须遵循左小右大。</span><br><span class="line">      between and是闭区间，包括两端的值。</span><br><span class="line"></span><br><span class="line">is null 为 null（is not null 不为空）</span><br><span class="line">注意：在数据库当中null不能使用等号进行衡量。需要使用is null因为数据库中的null代表什么也没有，它不是一个值，所以不能使用等号衡量。</span><br><span class="line"></span><br><span class="line">and 并且 </span><br><span class="line"></span><br><span class="line">or 或者</span><br><span class="line"></span><br><span class="line">and和or同时出现的话，有优先级问题吗？</span><br><span class="line">and和or同时出现，and优先级较高。如果想让or先执行，需要加“小括号”.以后在开发中，如果不确定优先级，就加小括号就行了。</span><br><span class="line"></span><br><span class="line">in 包含，相当于多个 or （not in 不在这个范围中）</span><br><span class="line"></span><br><span class="line">not 可以取非，主要用在 is 或 in 中</span><br><span class="line"></span><br><span class="line">like 称为模糊查询，支持%或下划线匹配</span><br><span class="line"># %匹配任意多个字符</span><br><span class="line"># 下划线_：任意一个字符。</span><br><span class="line">#（%是一个特殊的符号，_ 也是一个特殊符号）</span><br><span class="line"></span><br><span class="line">找出名字以T结尾的？</span><br><span class="line">  select ename from emp where ename like &#x27;%T&#x27;;</span><br><span class="line">  </span><br><span class="line">找出名字以K开始的？</span><br><span class="line">  select ename from emp where ename like &#x27;K%&#x27;;</span><br><span class="line"></span><br><span class="line">找出第二个字每是A的？</span><br><span class="line">  select ename from emp where ename like &#x27;_A%&#x27;;</span><br><span class="line"></span><br><span class="line">找出第三个字母是R的？</span><br><span class="line">  select ename from emp where ename like &#x27;__R%&#x27;;</span><br><span class="line"></span><br><span class="line">找出名字有下划线的？</span><br><span class="line">&#x27;%_%&#x27;;//这样不行</span><br><span class="line">应该写为&#x27;%\_%&#x27;</span><br><span class="line">\是转义字符</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、查询所有员工薪资，排序？</span><br><span class="line">select</span><br><span class="line">	ename,sal</span><br><span class="line">from</span><br><span class="line">	emp</span><br><span class="line">order by</span><br><span class="line">	sal;//默认是升序！！！</span><br><span class="line">	</span><br><span class="line">怎么降序？</span><br><span class="line">select</span><br><span class="line">	ename,sal</span><br><span class="line">from</span><br><span class="line">	emp</span><br><span class="line">order by</span><br><span class="line">	sal desc;</span><br><span class="line">ASC是升序！</span><br><span class="line">2、可以两字字段排序？或者说多个字段？</span><br><span class="line">查询员工名字和薪资，要求按照薪资升序，如果薪资一样的话，再按照名字升序排序。</span><br><span class="line">select</span><br><span class="line">	ename,sal</span><br><span class="line">from</span><br><span class="line">	emp</span><br><span class="line">order by</span><br><span class="line">	sal asc,ename asc;</span><br><span class="line">3.了解：根据字段的位置也可以排序</span><br><span class="line">select</span><br><span class="line">	enmae,sal</span><br><span class="line">from</span><br><span class="line">	emp</span><br><span class="line">order by 2;//2表示第二列，第二列是sal</span><br><span class="line">不建议在开发中这样写，因为不健壮</span><br><span class="line">因为列的顺讯容易发生改变，列顺序修改之后，2就废了。</span><br><span class="line">4、语句的执行顺序是：</span><br><span class="line">from</span><br><span class="line">where</span><br><span class="line">select</span><br><span class="line">order by</span><br></pre></td></tr></table></figure>
<h2 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h2><blockquote>
<p>什么是分组查询？</p>
</blockquote>
<ul>
<li>在实际的应用中，可能有这样的需求，需要先进行分组，然后对每一组的数据进行操作，这个时候我们需要使用分组查询。</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">语法格式：</span><br><span class="line">	select</span><br><span class="line">      ...</span><br><span class="line">    from</span><br><span class="line">      ...</span><br><span class="line">    group by</span><br><span class="line">      ...</span><br><span class="line"></span><br><span class="line">注意:</span><br><span class="line">select ename,job,sum(sal) from emp group by job;</span><br><span class="line">    +-------+-----------+----------+</span><br><span class="line">    | ename | job       | sum(sal) |</span><br><span class="line">    +-------+-----------+----------+</span><br><span class="line">    | SCOTT | ANALYST   |  6000.00 |</span><br><span class="line">    | SMITH | CLERK     |  4150.00 |</span><br><span class="line">    | JONES | MANAGER   |  8275.00 |</span><br><span class="line">    | KING  | PRESIDENT |  5000.00 |</span><br><span class="line">    | ALLEN | SALESMAN  |  5600.00 |</span><br><span class="line">    +-------+-----------+----------+</span><br><span class="line">以上语句在mysql中可以执行，但select后面添加ename字段没有意义。</span><br><span class="line">以上语句在oracle中执行报错。</span><br><span class="line">oracle的语法比mysql的语法严格。（mysql的语法相对来说松散一些！）</span><br><span class="line"></span><br><span class="line">重点结论：在一条select语句当中，如果有group by语句的话，select后面只能跟：参加分组的字段，以及分组函数。其它的一律不能跟。</span><br><span class="line"></span><br><span class="line">找出“每个部门，不同工作岗位”的最高薪资？</span><br><span class="line">select </span><br><span class="line">  deptno, job, max(sal)</span><br><span class="line">from</span><br><span class="line">  emp</span><br><span class="line">group by</span><br><span class="line">  deptno, job;</span><br><span class="line">技巧：两个字段联合成1个字段看。（两个字段联合分组）</span><br><span class="line"></span><br><span class="line">使用having可以对分完组之后的数据进一步过滤。</span><br><span class="line">having不能单独使用，having不能代替where，having必须和group by联合使用。</span><br><span class="line"></span><br><span class="line">where和having，优先选择where，where实在完成不了了，再选择having。</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p>补充一点</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">将之前的关键字全部组合在一起，来看一下他们的执行顺序？</span><br><span class="line">    select</span><br><span class="line">      	...</span><br><span class="line">    from</span><br><span class="line">     	...</span><br><span class="line">    where</span><br><span class="line">    	...</span><br><span class="line">    group by</span><br><span class="line">     	 ...</span><br><span class="line">	having</span><br><span class="line">		...</span><br><span class="line">    order by</span><br><span class="line">     	...</span><br><span class="line">以上关键字的顺序不能颠倒，需要记忆。</span><br><span class="line">执行顺序是什么？</span><br><span class="line">  1. from</span><br><span class="line">  2. where</span><br><span class="line">  3. group by</span><br><span class="line">  4. having</span><br><span class="line">  5. select</span><br><span class="line">  6. order by</span><br></pre></td></tr></table></figure>
<h2 id="排序：order-by"><a href="#排序：order-by" class="headerlink" title="排序：order by"></a>排序：order by</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">语法格式：</span><br><span class="line">	select </span><br><span class="line">		ename,sal</span><br><span class="line">	from</span><br><span class="line">		emp</span><br><span class="line">	order by</span><br><span class="line">		sal; // 默认是升序！！</span><br><span class="line">指定降序： desc</span><br><span class="line">指定升序： asc</span><br><span class="line"></span><br><span class="line">以两个字段排序吗？或者说按照多个字段排序？</span><br><span class="line">查询员工名字和薪资，要求按照薪资升序，如果薪资一样的话，再按照名字升序排列。</span><br><span class="line">select </span><br><span class="line">	ename,sal</span><br><span class="line">from</span><br><span class="line">	emp</span><br><span class="line">order by</span><br><span class="line">	sal asc, ename asc; // sal在前，起主导，只有sal相等的时候，才会考虑启用ename排序。</span><br></pre></td></tr></table></figure>
<h1 id="数据处理函数"><a href="#数据处理函数" class="headerlink" title="数据处理函数"></a>数据处理函数</h1><ul>
<li>数据处理函数又被称为单行处理函数</li>
</ul>
<h3 id="单行处理函数"><a href="#单行处理函数" class="headerlink" title="单行处理函数"></a>单行处理函数</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">单行处理函数的特点：一个输入对应一个输出。</span><br><span class="line">单行处理函数常见:</span><br><span class="line">lower 转换小写</span><br><span class="line">	mysql&gt; select lower(ename) as ename from emp;</span><br><span class="line">	</span><br><span class="line">upper 转换大写</span><br><span class="line">	mysql&gt; select upper(name) as name from t_student;</span><br><span class="line">	</span><br><span class="line">substr 取子串（substr(被截取的字符串, 起始下标,截取的长度)）</span><br><span class="line">	mysql&gt; select substr(ename, 1, 1) as ename from emp;</span><br><span class="line">	#注意：起始下标从1开始</span><br><span class="line">concat函数进行字符串的拼接</span><br><span class="line">	mysql&gt; select concat(empno,ename) from emp;</span><br><span class="line">length 取长度</span><br><span class="line">	mysql&gt; select length(ename) enamelength from emp;</span><br><span class="line">	</span><br><span class="line">trim 去空格</span><br><span class="line">	mysql&gt;	select * from emp where ename = trim(&#x27;   KING&#x27;);</span><br><span class="line">	</span><br><span class="line">str_to_date 将字符串转换成日期</span><br><span class="line"></span><br><span class="line">date_format 格式化日期</span><br><span class="line">	</span><br><span class="line">format 设置千分位</span><br><span class="line">	</span><br><span class="line">case..when..then..when..then..else..end</span><br><span class="line">当员工的工作岗位是MANAGER的时候，工资上调10%，当工作岗位是SALESMAN的时候，工资上调50%,其它正常。	（注意：不修改数据库，只是将查询结果显示为工资上调）</span><br><span class="line">select </span><br><span class="line">  ename,job, sal as oldsal,</span><br><span class="line">  (case job when &#x27;MANAGER&#x27; then sal*1.1 when &#x27;SALESMAN&#x27; then sal*1.5 else sal end) as newsal </span><br><span class="line">from </span><br><span class="line">  emp;</span><br><span class="line"></span><br><span class="line">round 四舍五入</span><br><span class="line">mysql&gt; select round(1236.567, 0) as result from emp; //保留整数位。</span><br><span class="line">mysql&gt; select round(1236.567, 1) as result from emp; //保留1个小数</span><br><span class="line">mysql&gt; select round(1236.567, 2) as result from emp; //保留2个小数</span><br><span class="line">mysql&gt; select round(1236.567, -1) as result from emp; // 保留到十位。(1240)</span><br><span class="line">mysql&gt; select round(1236.567, -2) as result from emp; // 保留到十位。（1200）</span><br><span class="line">rand() 生成随机数</span><br><span class="line">  mysql&gt; select round(rand()*100,0) from emp; // 100以内的随机数</span><br><span class="line"></span><br><span class="line">ifnull 可以将 null 转换成一个具体值</span><br><span class="line">ifnull是空处理函数。专门处理空的。在所有数据库当中，只要有NULL参与的数学运算，最终结果就是NULL。</span><br><span class="line">注意：NULL只要参与运算，最终结果一定是NULL。为了避免这个现象，需要使用ifnull函数。ifnull函数用法：ifnull(数据, 被当做哪个值)。如果“数据”为NULL的时候，把这个数据结构当做哪个值。</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="分组函数（多行处理函数）"><a href="#分组函数（多行处理函数）" class="headerlink" title="分组函数（多行处理函数）"></a>分组函数（多行处理函数）</h1><p>多行处理函数特点：多个输入，对应1个输出。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">count	# 计数</span><br><span class="line">sum		# 求和</span><br><span class="line">avg		# 平均值</span><br><span class="line">max		# 最大值</span><br><span class="line">min		# 最小值</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">	1. 分组函数在使用的时候必须先进行分组，然后才能用。如果你没有对数据进行分组，整张表默认为一组。</span><br><span class="line">	2. 分组函数自动忽略NULL，你不需要提前对NULL进行处理。</span><br><span class="line">	3. 分组函数中count(*)和count(具体字段)有什么区别？</span><br><span class="line">		count(具体字段)：表示统计该字段下所有不为NULL的元素的总数。</span><br><span class="line">		count(*)：统计表当中的总行数。（只要有一行数据count则++）</span><br><span class="line">      	因为每一行记录不可能都为NULL，一行数据中有一列不为NULL，则这行数据就是有效的。</span><br><span class="line">    4. 分组函数不能够直接使用在where子句中。</span><br><span class="line">    5. 所有的分组函数可以组合起来一起用。</span><br></pre></td></tr></table></figure>
<h2 id="distinct"><a href="#distinct" class="headerlink" title="distinct"></a>distinct</h2><blockquote>
<p>把查询结果去除重复记录 <strong>distinct</strong> </p>
</blockquote>
<p>注意：原表数据不会被修改，只是查询结果去重。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// distinct只能出现在所有字段的最前方。</span><br><span class="line">mysql&gt; select distinct job from emp;</span><br><span class="line"></span><br><span class="line">// distinct出现在job,deptno两个字段之前，表示两个字段联合起来去重。</span><br><span class="line">mysql&gt; select distinct job,deptno from emp;</span><br></pre></td></tr></table></figure>
<h1 id="分组查询-1"><a href="#分组查询-1" class="headerlink" title="分组查询"></a>分组查询</h1><blockquote>
<p>什么是分组查询？</p>
</blockquote>
<p><strong>注意</strong>在实际的应用中，可能有这样的需求，需要先进行分组，然后对分组的数据进行操作，这个时候就需要使用分组查询。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select</span><br><span class="line">	...</span><br><span class="line">from</span><br><span class="line">	...</span><br><span class="line">group by</span><br><span class="line">	...</span><br><span class="line">	</span><br><span class="line">执行顺序：</span><br><span class="line">from</span><br><span class="line">where</span><br><span class="line">group by</span><br><span class="line">select</span><br><span class="line">order by</span><br><span class="line">为什么分组函数不能直接使用在where后面？</span><br><span class="line">因为分组函数在使用的时候必须先分组之后才能使用。where执行的时候，还没有分组，所以where后面不能出现分组函数。</span><br><span class="line">#重点结论：</span><br><span class="line">	在一条select语句当中，如果有group by语句的话，select后面只能跟：参加分组的字段，以及分组函数，其他一律不能跟。</span><br></pre></td></tr></table></figure>
<p><img src="MySQL .assets/image-20220507195310609.png" alt="image-20220507195310609"></p>
<p>查询每个部门不同岗位的最高工资</p>
<p><img src="MySQL .assets/image-20220507200159424.png" alt="image-20220507200159424"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">使用having可以对分组之后的数据进一步过滤</span><br><span class="line">having不能单独使用， having 不能代替 where， having 必须和 group by联合使用。</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="MySQL .assets/image-20220507220925174.png" alt="image-20220507220925174"></p>
<p><img src="MySQL .assets/image-20220507221136058.png" alt="image-20220507221136058"></p>
<p>优化策略：where和having，优先选择where，where实在完成不了，再选择having。</p>
<p>执行顺序：<br>from<br>where<br>group by<br>having<br>select<br>order by</p>
<p><img src="MySQL .assets/image-20220507222305553.png" alt="image-20220507222305553"></p>
<h1 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h1><blockquote>
<p>多张表联合起来查询数据，被称为连接查询。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">根据表连接的方式分类：</span><br><span class="line">内连接： 等值连接 非等值连接 自连接</span><br><span class="line"></span><br><span class="line">外连接： 左外连接（左连接）	右外连接（右连接）</span><br><span class="line"></span><br><span class="line">当两张表进行连接查询，如果没有添加任何条件，则查询结果条数是两张表的条数乘积，这种现象称为笛卡尔积现象。</span><br><span class="line">#表起别名</span><br><span class="line">select</span><br><span class="line">	e.ename,d.dname</span><br><span class="line">from</span><br><span class="line">	emp e,dept d</span><br><span class="line">where</span><br><span class="line">	e.deptno=d.deptno;</span><br></pre></td></tr></table></figure>
<h2 id="内连接：等值连接"><a href="#内连接：等值连接" class="headerlink" title="内连接：等值连接"></a>内连接：等值连接</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SQL99语法：</span><br><span class="line">  select </span><br><span class="line">    ...</span><br><span class="line">  from</span><br><span class="line">    a</span><br><span class="line">  inner join</span><br><span class="line">    b</span><br><span class="line">  on</span><br><span class="line">    a和b的连接条件</span><br><span class="line">  where</span><br><span class="line">    筛选条件</span><br><span class="line"># inner可以省略（带着inner可读性更好！！！一眼就能看出来是内连接）</span><br><span class="line"></span><br><span class="line">sql92的缺点：结构不清晰，表的连接条件和后期进一步的筛选条件都放在了where后面。</span><br><span class="line"></span><br><span class="line">sql99的优点：表的连接条件是独立的，连接之后，如果还需要进一步筛选，再往后添加where语句。</span><br></pre></td></tr></table></figure>
<h2 id="内连接：非等值连接"><a href="#内连接：非等值连接" class="headerlink" title="内连接：非等值连接"></a>内连接：非等值连接</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select </span><br><span class="line">	e.ename, e.sal, s.grade</span><br><span class="line">from</span><br><span class="line">	emp e</span><br><span class="line">join</span><br><span class="line">	salgrade s</span><br><span class="line">on</span><br><span class="line">	e.sal between s.losal and s.hisal; // 条件不是一个等量关系，称为非等值连接。</span><br></pre></td></tr></table></figure>
<h2 id="内连接：自连接"><a href="#内连接：自连接" class="headerlink" title="内连接：自连接"></a>内连接：自连接</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select </span><br><span class="line">	a.ename as &#x27;员工名&#x27;, b.ename as &#x27;领导名&#x27;</span><br><span class="line">from</span><br><span class="line">	emp a</span><br><span class="line">join</span><br><span class="line">	emp b</span><br><span class="line">on</span><br><span class="line">	a.mgr = b.empno; //员工的领导编号 = 领导的员工编号</span><br><span class="line">以上就是内连接中的：自连接，技巧：一张表看做两张表</span><br><span class="line"></span><br><span class="line">内连接的特点：完全能够匹配上这个条件的数据查询出来。</span><br></pre></td></tr></table></figure>
<h2 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// outer是可以省略的，带着可读性强。</span><br><span class="line">select </span><br><span class="line">	e.ename,d.dname</span><br><span class="line">from</span><br><span class="line">	emp e </span><br><span class="line">right outer join </span><br><span class="line">	dept d</span><br><span class="line">on</span><br><span class="line">	e.deptno = d.deptno;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">outer可以省略</span><br><span class="line">	</span><br><span class="line">right代表什么：表示将join关键字右边的这张表看成主表，主要是为了将这张表的数据全部查询出来，捎带着关联查询左边的表。在外连接当中，两张表连接，产生了主次关系。</span><br><span class="line"></span><br><span class="line">带有right的是右外连接，又叫做右连接。</span><br><span class="line">带有left的是左外连接，又叫做左连接。</span><br><span class="line">任何一个右连接都有左连接的写法。</span><br><span class="line">任何一个左连接都有右连接的写法。</span><br><span class="line"></span><br><span class="line">思考：外连接的查询结果条数一定是 &gt;= 内连接的查询结果条数？</span><br><span class="line">	正确。</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">三张表，四张表怎么连接？</span><br><span class="line">语法：</span><br><span class="line">  select </span><br><span class="line">    ...</span><br><span class="line">  from</span><br><span class="line">    a</span><br><span class="line">  join</span><br><span class="line">    b</span><br><span class="line">  on</span><br><span class="line">    a和b的连接条件</span><br><span class="line">  join </span><br><span class="line">    c</span><br><span class="line">  on</span><br><span class="line">    a和c的连接条件</span><br><span class="line">  right join</span><br><span class="line">    d</span><br><span class="line">  on</span><br><span class="line">    a和d的连接条件</span><br><span class="line">  </span><br><span class="line">  一条SQL中内连接和外连接可以混合。都可以出现！</span><br><span class="line">  #案例：</span><br><span class="line">  找出每个员工的部门名称以及工资等级，（还有上级领导）要求显示员工名、（领导名）、部门名、薪资、薪资等级。</span><br><span class="line">  1.</span><br><span class="line">  select</span><br><span class="line">  	a.ename,b.dname,a.sal,c.grade</span><br><span class="line">  from</span><br><span class="line">  	emp a</span><br><span class="line">  join</span><br><span class="line">  	dept b</span><br><span class="line">  on</span><br><span class="line">  	a.deptno=b.deptno</span><br><span class="line">  join</span><br><span class="line">  	salgrade c</span><br><span class="line">  on</span><br><span class="line">  	a.sal between c.losal and c.hisal;</span><br><span class="line">  	</span><br><span class="line">+--------+------------+---------+-------+</span><br><span class="line">| ename  | dname      | sal     | grade |</span><br><span class="line">+--------+------------+---------+-------+</span><br><span class="line">| SMITH  | RESEARCH   |  800.00 |     1 |</span><br><span class="line">| ALLEN  | SALES      | 1600.00 |     3 |</span><br><span class="line">| WARD   | SALES      | 1250.00 |     2 |</span><br><span class="line">| JONES  | RESEARCH   | 2975.00 |     4 |</span><br><span class="line">| MARTIN | SALES      | 1250.00 |     2 |</span><br><span class="line">| BLAKE  | SALES      | 2850.00 |     4 |</span><br><span class="line">| CLARK  | ACCOUNTING | 2450.00 |     4 |</span><br><span class="line">| SCOTT  | RESEARCH   | 3000.00 |     4 |</span><br><span class="line">| KING   | ACCOUNTING | 5000.00 |     5 |</span><br><span class="line">| TURNER | SALES      | 1500.00 |     3 |</span><br><span class="line">| ADAMS  | RESEARCH   | 1100.00 |     1 |</span><br><span class="line">| JAMES  | SALES      |  950.00 |     1 |</span><br><span class="line">| FORD   | RESEARCH   | 3000.00 |     4 |</span><br><span class="line">| MILLER | ACCOUNTING | 1300.00 |     2 |</span><br><span class="line">+--------+------------+---------+-------+</span><br><span class="line"></span><br><span class="line">2.</span><br><span class="line">select</span><br><span class="line">  	a.ename,d.ename as lname,b.dname,a.sal,c.grade</span><br><span class="line">  from</span><br><span class="line">  	emp a</span><br><span class="line">  join</span><br><span class="line">  	dept b</span><br><span class="line">  on</span><br><span class="line">  	a.deptno=b.deptno</span><br><span class="line">  join</span><br><span class="line">  	salgrade c</span><br><span class="line">  on</span><br><span class="line">  	a.sal between c.losal and c.hisal</span><br><span class="line">  left join</span><br><span class="line">  	emp d</span><br><span class="line">  on</span><br><span class="line">  	a.mgr=d.empno;</span><br><span class="line">  </span><br><span class="line">+--------+-------+------------+---------+-------+</span><br><span class="line">| ename  | lname | dname      | sal     | grade |</span><br><span class="line">+--------+-------+------------+---------+-------+</span><br><span class="line">| SMITH  | FORD  | RESEARCH   |  800.00 |     1 |</span><br><span class="line">| ADAMS  | SCOTT | RESEARCH   | 1100.00 |     1 |</span><br><span class="line">| JAMES  | BLAKE | SALES      |  950.00 |     1 |</span><br><span class="line">| WARD   | BLAKE | SALES      | 1250.00 |     2 |</span><br><span class="line">| MARTIN | BLAKE | SALES      | 1250.00 |     2 |</span><br><span class="line">| MILLER | CLARK | ACCOUNTING | 1300.00 |     2 |</span><br><span class="line">| ALLEN  | BLAKE | SALES      | 1600.00 |     3 |</span><br><span class="line">| TURNER | BLAKE | SALES      | 1500.00 |     3 |</span><br><span class="line">| JONES  | KING  | RESEARCH   | 2975.00 |     4 |</span><br><span class="line">| BLAKE  | KING  | SALES      | 2850.00 |     4 |</span><br><span class="line">| CLARK  | KING  | ACCOUNTING | 2450.00 |     4 |</span><br><span class="line">| SCOTT  | JONES | RESEARCH   | 3000.00 |     4 |</span><br><span class="line">| FORD   | JONES | RESEARCH   | 3000.00 |     4 |</span><br><span class="line">| KING   | NULL  | ACCOUNTING | 5000.00 |     5 |</span><br><span class="line">+--------+-------+------------+---------+-------+</span><br></pre></td></tr></table></figure>
<h1 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h1><blockquote>
<p>select语句中嵌套select语句，被嵌套的select语句称为子查询。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">子查询都可以出现在哪里呢？</span><br><span class="line">select</span><br><span class="line">  ..(select).</span><br><span class="line">from</span><br><span class="line">  ..(select).</span><br><span class="line">where</span><br><span class="line">  ..(select).</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">where子句中的子查询:</span><br><span class="line"></span><br><span class="line">第一步：查询最低工资是多少</span><br><span class="line">  select min(sal) from emp;</span><br><span class="line">  +----------+</span><br><span class="line">  | min(sal) |</span><br><span class="line">  +----------+</span><br><span class="line">  |   800.00 |</span><br><span class="line">  +----------+</span><br><span class="line">第二步：找出&gt;800的</span><br><span class="line">  select ename,sal from emp where sal &gt; 800;</span><br><span class="line"></span><br><span class="line">第三步：合并</span><br><span class="line">  select ename,sal from emp where sal &gt; (select min(sal) from emp);</span><br><span class="line">  </span><br><span class="line">from子句中的子查询:</span><br><span class="line">	注意：from后面的子查询，可以将子查询的查询结果当做一张临时表。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select后面出现的子查询（这个内容不需要掌握，了解即可！！！）</span><br><span class="line">	注意：对于select后面的子查询来说，这个子查询只能一次返回1条结果</span><br></pre></td></tr></table></figure>
<p><img src="MySQL .assets/image-20220508095937164.png" alt="image-20220508095937164"></p>
<p><img src="MySQL .assets/image-20220508095958796.png" alt="image-20220508095958796"></p>
<h1 id="union合并"><a href="#union合并" class="headerlink" title="union合并"></a>union合并</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">案例：查询工作岗位是MANAGER和SALESMAN的员工？</span><br><span class="line">select ename,job from emp where job = &#x27;MANAGER&#x27; or job = &#x27;SALESMAN&#x27;;</span><br><span class="line">select ename,job from emp where job in(&#x27;MANAGER&#x27;,&#x27;SALESMAN&#x27;);</span><br><span class="line">+--------+----------+</span><br><span class="line">| ename  | job      |</span><br><span class="line">+--------+----------+</span><br><span class="line">| ALLEN  | SALESMAN |</span><br><span class="line">| WARD   | SALESMAN |</span><br><span class="line">| JONES  | MANAGER  |</span><br><span class="line">| MARTIN | SALESMAN |</span><br><span class="line">| BLAKE  | MANAGER  |</span><br><span class="line">| CLARK  | MANAGER  |</span><br><span class="line">| TURNER | SALESMAN |</span><br><span class="line">+--------+----------+</span><br><span class="line"></span><br><span class="line">select ename,job from emp where job = &#x27;MANAGER&#x27;</span><br><span class="line">union</span><br><span class="line">select ename,job from emp where job = &#x27;SALESMAN&#x27;;</span><br><span class="line"></span><br><span class="line">+--------+----------+</span><br><span class="line">| ename  | job      |</span><br><span class="line">+--------+----------+</span><br><span class="line">| JONES  | MANAGER  |</span><br><span class="line">| BLAKE  | MANAGER  |</span><br><span class="line">| CLARK  | MANAGER  |</span><br><span class="line">| ALLEN  | SALESMAN |</span><br><span class="line">| WARD   | SALESMAN |</span><br><span class="line">| MARTIN | SALESMAN |</span><br><span class="line">| TURNER | SALESMAN |</span><br><span class="line">+--------+----------+</span><br><span class="line">union的效率要高一些。对于表连接来说，每连接一次新表，</span><br><span class="line">则匹配的次数满足笛卡尔积，成倍的翻。。。</span><br><span class="line">但是union可以减少匹配的次数。在减少匹配次数的情况下，</span><br><span class="line">还可以完成两个结果集的拼接。</span><br><span class="line"></span><br><span class="line">a 连接 b 连接 c</span><br><span class="line">a 10条记录</span><br><span class="line">b 10条记录</span><br><span class="line">c 10条记录</span><br><span class="line">匹配次数是：1000</span><br><span class="line"></span><br><span class="line">a 连接 b一个结果：10 * 10 --&gt; 100次</span><br><span class="line">a 连接 c一个结果：10 * 10 --&gt; 100次</span><br><span class="line">使用union的话是：100次 + 100次 = 200次。（union把乘法变成了加法运算）</span><br><span class="line"></span><br><span class="line">union在使用的时候有注意事项吗？</span><br><span class="line"></span><br><span class="line">//错误的：union在进行结果集合并的时候，要求两个结果集的列数相同。</span><br><span class="line">select ename,job from emp where job = &#x27;MANAGER&#x27;</span><br><span class="line">union</span><br><span class="line">select ename from emp where job = &#x27;SALESMAN&#x27;;</span><br><span class="line"></span><br><span class="line">// MYSQL可以，oracle语法严格 ，不可以，报错。要求：结果集合并时列和列的数据类型也要一致。</span><br><span class="line">select ename,job from emp where job = &#x27;MANAGER&#x27;</span><br><span class="line">union</span><br><span class="line">select ename,sal from emp where job = &#x27;SALESMAN&#x27;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="limit"><a href="#limit" class="headerlink" title="limit"></a>limit</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">limit作用：将查询结果集的一部分取出来。通常使用在分页查询当中。</span><br><span class="line">百度默认：一页显示10条记录。</span><br><span class="line">分页的作用是为了提高用户的体验，因为一次全部都查出来，用户体验差。可以一页一页翻页看</span><br><span class="line"></span><br><span class="line">limit的使用</span><br><span class="line">完整用法：limit startIndex, length</span><br><span class="line">  startIndex是起始下标，length是长度。</span><br><span class="line">  起始下标从0开始。</span><br><span class="line"></span><br><span class="line">缺省用法：limit 5; 这是取前5</span><br><span class="line"></span><br><span class="line">按照薪资排序，取出排名前五的员工。</span><br><span class="line">select</span><br><span class="line">	ename,sal</span><br><span class="line">from</span><br><span class="line">	emp</span><br><span class="line">order by</span><br><span class="line">	sal desc</span><br><span class="line">limit 5;</span><br><span class="line"></span><br><span class="line">注意：mysql当中limit在order by之后执行！！！！！！</span><br><span class="line"></span><br><span class="line">#分页</span><br><span class="line">每页显示3条记录</span><br><span class="line">第1页：limit 0,3		[0 1 2]</span><br><span class="line">第2页：limit 3,3		[3 4 5]</span><br><span class="line">第3页：limit 6,3		[6 7 8]</span><br><span class="line">第4页：limit 9,3		[9 10 11]</span><br><span class="line"></span><br><span class="line">每页显示pageSize条记录</span><br><span class="line">第pageNo页：limit (pageNo - 1) * pageSize  , pageSize</span><br><span class="line"></span><br><span class="line">public static void main(String[] args)&#123;</span><br><span class="line">  // 用户提交过来一个页码，以及每页显示的记录条数</span><br><span class="line">  int pageNo = 5; //第5页</span><br><span class="line">  int pageSize = 10; //每页显示10条</span><br><span class="line"></span><br><span class="line">  int startIndex = (pageNo - 1) * pageSize;</span><br><span class="line">  String sql = &quot;select ...limit &quot; + startIndex + &quot;, &quot; + pageSize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">记公式：</span><br><span class="line">limit (pageNo-1)*pageSize , pageSize</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">关于DQL语句的大总结：</span><br><span class="line">select </span><br><span class="line">  ...</span><br><span class="line">from</span><br><span class="line">  ...</span><br><span class="line">where</span><br><span class="line">  ...</span><br><span class="line">group by</span><br><span class="line">  ...</span><br><span class="line">having</span><br><span class="line">  ...</span><br><span class="line">order by</span><br><span class="line">  ...</span><br><span class="line">limit</span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">执行顺序？</span><br><span class="line">  1.from</span><br><span class="line">  2.where</span><br><span class="line">  3.group by</span><br><span class="line">  4.having</span><br><span class="line">  5.select</span><br><span class="line">  6.order by</span><br><span class="line">  7.limit..</span><br></pre></td></tr></table></figure>
<h1 id="表的创建"><a href="#表的创建" class="headerlink" title="表的创建"></a>表的创建</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">建表的语法格式：(建表属于DDL语句，DDL包括：create drop alter)</span><br><span class="line">create table 表名(字段名1 数据类型, 字段名2 数据类型, 字段名3 数据类型);</span><br><span class="line"></span><br><span class="line">create table 表名(</span><br><span class="line">  字段名1 数据类型, </span><br><span class="line">  字段名2 数据类型, </span><br><span class="line">  字段名3 数据类型</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">表名：建议以t_ 或者 tbl_开始，可读性强。见名知意。</span><br><span class="line">字段名：见名知意。</span><br><span class="line">表名和字段名都属于标识符。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">关于mysql中的数据类型</span><br><span class="line">很多数据类型，我们只需要掌握一些常见的数据类型即可。</span><br><span class="line"></span><br><span class="line">  varchar(最长255)</span><br><span class="line">    可变长度的字符串</span><br><span class="line">    比较智能，节省空间。</span><br><span class="line">    会根据实际的数据长度动态分配空间。</span><br><span class="line"></span><br><span class="line">    优点：节省空间</span><br><span class="line">    缺点：需要动态分配空间，速度慢。</span><br><span class="line"></span><br><span class="line">  char(最长255)</span><br><span class="line">    定长字符串</span><br><span class="line">    不管实际的数据长度是多少。</span><br><span class="line">    分配固定长度的空间去存储数据。</span><br><span class="line">    使用不恰当的时候，可能会导致空间的浪费。</span><br><span class="line"></span><br><span class="line">    优点：不需要动态分配空间，速度快。</span><br><span class="line">    缺点：使用不当可能会导致空间的浪费。</span><br><span class="line"></span><br><span class="line">   varchar 和 char 我们应该怎么选择？</span><br><span class="line">      性别字段你选什么？因为性别是固定长度的字符串，所以选择char。</span><br><span class="line">      姓名字段你选什么？每一个人的名字长度不同，所以选择varchar。</span><br><span class="line"></span><br><span class="line">  int(最长11)</span><br><span class="line">    数字中的整数型。等同于java的int。</span><br><span class="line"></span><br><span class="line">  bigint</span><br><span class="line">    数字中的长整型。等同于java中的long。</span><br><span class="line"></span><br><span class="line">  float	</span><br><span class="line">    单精度浮点型数据</span><br><span class="line"></span><br><span class="line">  double</span><br><span class="line">    双精度浮点型数据</span><br><span class="line"></span><br><span class="line">  date</span><br><span class="line">    短日期类型</span><br><span class="line"></span><br><span class="line">  datetime</span><br><span class="line">    长日期类型</span><br><span class="line"></span><br><span class="line">  clob </span><br><span class="line">    字符大对象</span><br><span class="line">    最多可以存储4G的字符串。</span><br><span class="line">    比如：存储一篇文章，存储一个说明。</span><br><span class="line">    超过255个字符的都要采用CLOB字符大对象来存储。</span><br><span class="line">    Character Large OBject:CLOB</span><br><span class="line"></span><br><span class="line">  blob</span><br><span class="line">    二进制大对象</span><br><span class="line">    Binary Large OBject</span><br><span class="line">    专门用来存储图片、声音、视频等流媒体数据。</span><br><span class="line">    往BLOB类型的字段上插入数据的时候，例如插入一个图片、视频等，</span><br><span class="line">    你需要使用IO流才行。</span><br><span class="line">    </span><br><span class="line"> t_movie电影表（专门存储电影信息的）</span><br><span class="line"> 编号no---bigint</span><br><span class="line"> 名字name---varchar</span><br><span class="line"> 描述信息description---clob</span><br><span class="line"> 上映日期playtime---date</span><br><span class="line"> 时长time---double</span><br><span class="line"> 海报image---blob</span><br><span class="line"> 类型type---char</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line">创建一个学生表？</span><br><span class="line">    学号、姓名、年龄、性别、邮箱地址</span><br><span class="line">    create table t_student(</span><br><span class="line">      no int,</span><br><span class="line">      name varchar(32),</span><br><span class="line">      sex char(1),</span><br><span class="line">      age int(3),</span><br><span class="line">      email varchar(255)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">  删除表：</span><br><span class="line">  drop table t_student; // 当这张表不存在的时候会报错！</span><br><span class="line"></span><br><span class="line">  // 如果这张表存在的话，删除</span><br><span class="line">  drop table if exists t_student;</span><br><span class="line">  </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="插入数据insert"><a href="#插入数据insert" class="headerlink" title="插入数据insert"></a>插入数据insert</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">插入数据insert （DML）</span><br><span class="line">	</span><br><span class="line">语法格式：</span><br><span class="line">  insert into 表名(字段名1,字段名2,字段名3...) values(值1,值2,值3);</span><br><span class="line"></span><br><span class="line">  注意：字段名和值要一一对应。什么是一一对应？</span><br><span class="line">    数量要对应。数据类型要对应。</span><br><span class="line">    </span><br><span class="line">insert语句中的“字段名”可以省略吗？可以</span><br><span class="line">  insert into t_student values(2); //错误的</span><br><span class="line"></span><br><span class="line">  // 注意：前面的字段名省略的话，等于都写上了！所以值也要都写上！</span><br><span class="line">  insert into t_student values(2, &#x27;lisi&#x27;, &#x27;f&#x27;, 20, &#x27;lisi@123.com&#x27;);</span><br><span class="line">  +------+------+------+------+--------------+</span><br><span class="line">  | no   | name | sex  | age  | email        |</span><br><span class="line">  +------+------+------+------+--------------+</span><br><span class="line">  |    1 | NULL | m    | NULL | NULL         |</span><br><span class="line">  |    2 | lisi | f    |   20 | lisi@123.com |</span><br><span class="line">  +------+------+------+------+--------------+</span><br><span class="line"></span><br><span class="line">一次可以插入多条记录：</span><br><span class="line">  insert into t_user(id,name,birth,create_time) values</span><br><span class="line">  (1,&#x27;zs&#x27;,&#x27;1980-10-11&#x27;,now()), </span><br><span class="line">  (2,&#x27;lisi&#x27;,&#x27;1981-10-11&#x27;,now()),</span><br><span class="line">  (3,&#x27;wangwu&#x27;,&#x27;1982-10-11&#x27;,now());</span><br><span class="line"></span><br><span class="line">  语法：insert into t_user(字段名1,字段名2) values(),(),(),();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">insert插入日期</span><br><span class="line">	数字格式化：format</span><br><span class="line">	</span><br><span class="line">	格式化数字：format(数字, &#x27;格式&#x27;)</span><br><span class="line">  select ename,format(sal, &#x27;$999,999&#x27;) as sal from emp;</span><br><span class="line"></span><br><span class="line">str_to_date：将字符串varchar类型转换成date类型</span><br><span class="line">date_format：将date类型转换成具有一定格式的varchar字符串类型。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">插入数据？</span><br><span class="line">insert into t_user(id,name,birth) values(1, &#x27;zhangsan&#x27;, &#x27;01-10-1990&#x27;); // 1990年10月1日</span><br><span class="line">出问题了：原因是类型不匹配。数据库birth是date类型，这里给了一个字符串varchar。</span><br><span class="line"></span><br><span class="line">怎么办？可以使用str_to_date函数进行类型转换。</span><br><span class="line">str_to_date函数可以将字符串转换成日期类型date？</span><br><span class="line">语法格式：</span><br><span class="line">  str_to_date(&#x27;字符串日期&#x27;, &#x27;日期格式&#x27;)</span><br><span class="line"></span><br><span class="line">mysql的日期格式：</span><br><span class="line">  %Y	年</span><br><span class="line">  %m    月</span><br><span class="line">  %d    日</span><br><span class="line">  %h	时</span><br><span class="line">  %i	分</span><br><span class="line">  %s	秒</span><br><span class="line"></span><br><span class="line">insert into t_user(id,name,birth) values(1, &#x27;zhangsan&#x27;, str_to_date(&#x27;01-10-1990&#x27;,&#x27;%d-%m-%Y&#x27;));</span><br><span class="line"></span><br><span class="line">str_to_date函数可以把字符串varchar转换成日期date类型数据，</span><br><span class="line">通常使用在插入insert方面，因为插入的时候需要一个日期类型的数据，</span><br><span class="line">需要通过该函数将字符串转换成date。</span><br><span class="line"></span><br><span class="line">如果你提供的日期字符串是这个格式，str_to_date函数就不需要了！！！</span><br><span class="line">  %Y-%m-%d</span><br><span class="line">insert into t_user(id,name,birth) values(2, &#x27;lisi&#x27;, &#x27;1990-10-01&#x27;);</span><br><span class="line"></span><br><span class="line">查询的时候可以以某个特定的日期格式展示吗？</span><br><span class="line">date_format</span><br><span class="line">这个函数可以将日期类型转换成特定格式的字符串。</span><br><span class="line"></span><br><span class="line">select id,name,date_format(birth, &#x27;%m/%d/%Y&#x27;) as birth from t_user;</span><br><span class="line">+------+----------+------------+</span><br><span class="line">| id   | name     | birth      |</span><br><span class="line">+------+----------+------------+</span><br><span class="line">|    1 | zhangsan | 10/01/1990 |</span><br><span class="line">|    2 | lisi     | 10/01/1990 |</span><br><span class="line">+------+----------+------------+</span><br><span class="line"></span><br><span class="line">date_format函数怎么用？</span><br><span class="line">  date_format(日期类型数据, &#x27;日期格式&#x27;)</span><br><span class="line">  这个函数通常使用在查询日期方面。设置展示的日期格式。</span><br><span class="line"></span><br><span class="line">mysql&gt; select id,name,birth from t_user;</span><br><span class="line">+------+----------+------------+</span><br><span class="line">| id   | name     | birth      |</span><br><span class="line">+------+----------+------------+</span><br><span class="line">|    1 | zhangsan | 1990-10-01 |</span><br><span class="line">|    2 | lisi     | 1990-10-01 |</span><br><span class="line">+------+----------+------------+</span><br><span class="line">以上的SQL语句实际上是进行了默认的日期格式化，</span><br><span class="line">自动将数据库中的date类型转换成varchar类型。</span><br><span class="line">并且采用的格式是mysql默认的日期格式：&#x27;%Y-%m-%d&#x27;</span><br><span class="line"></span><br><span class="line">select id,name,date_format(birth,&#x27;%Y/%m/%d&#x27;) as birth from t_user;</span><br><span class="line"></span><br><span class="line">java中的日期格式？</span><br><span class="line">  yyyy-MM-dd HH:mm:ss SSS</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">date和datetime两个类型的区别？</span><br><span class="line">	date是短日期：只包括年月日信息。</span><br><span class="line">	datetime是长日期：包括年月日时分秒信息。</span><br><span class="line">	mysql短日期默认格式：%Y-%m-%d</span><br><span class="line">	mysql长日期默认格式：%Y-%m-%d %h:%i:%s</span><br><span class="line">	</span><br><span class="line">在mysql中怎么获取系统当前时间？</span><br><span class="line">now()函数，是datatime类型</span><br><span class="line">直接使用</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">快速创建表？</span><br><span class="line">create table 表名 as select * from 另一张表</span><br><span class="line">其实就是复制</span><br><span class="line"></span><br><span class="line">把查询结果插入一张表</span><br><span class="line">insert into 表名 select * from 另一张表</span><br><span class="line">也可添加条件选择某些字段某些数据</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="修改update"><a href="#修改update" class="headerlink" title="修改update"></a>修改update</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">语法格式：</span><br><span class="line">update 表名 set 字段名1=值1,字段名2=值2,字段名3=值3... where 条件;</span><br><span class="line"></span><br><span class="line">注意：没有条件限制会导致所有数据全部更新。</span><br><span class="line"></span><br><span class="line">update t_user set name = &#x27;jack&#x27;, birth = &#x27;2000-10-11&#x27; where id = 2;</span><br><span class="line">+------+----------+------------+---------------------+</span><br><span class="line">| id   | name     | birth      | create_time         |</span><br><span class="line">+------+----------+------------+---------------------+</span><br><span class="line">|    1 | zhangsan | 1990-10-01 | 2020-03-18 15:49:50 |</span><br><span class="line">|    2 | jack     | 2000-10-11 | 2020-03-18 15:51:23 |</span><br><span class="line">+------+----------+------------+---------------------+</span><br><span class="line"></span><br><span class="line">update t_user set name = &#x27;jack&#x27;, birth = &#x27;2000-10-11&#x27;, create_time = now() where id = 2;</span><br><span class="line"></span><br><span class="line">更新所有？</span><br><span class="line">  update t_user set name = &#x27;abc&#x27;;</span><br></pre></td></tr></table></figure>
<h1 id="删除数据-delete"><a href="#删除数据-delete" class="headerlink" title="删除数据 delete"></a>删除数据 delete</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">语法格式？</span><br><span class="line">  delete from 表名 where 条件;</span><br><span class="line"></span><br><span class="line">注意：没有条件，整张表的数据会全部删除！</span><br><span class="line"></span><br><span class="line">delete from t_user where id = 2;</span><br><span class="line"></span><br><span class="line">insert into t_user(id) values(2);</span><br><span class="line"></span><br><span class="line">delete from t_user; // 删除所有！</span><br><span class="line"></span><br><span class="line">快速删除表中的数据？【truncate比较重要，必须掌握】</span><br><span class="line"></span><br><span class="line">//删除dept_bak表中的数据</span><br><span class="line">delete from dept_bak; //这种删除数据的方式比较慢。</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from dept_bak;</span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line"></span><br><span class="line">delete语句删除数据的原理？（delete属于DML语句！！！）</span><br><span class="line">  表中的数据被删除了，但是这个数据在硬盘上的真实存储空间不会被释放！！！</span><br><span class="line">  这种删除缺点是：删除效率比较低。</span><br><span class="line">  这种删除优点是：支持回滚，后悔了可以再恢复数据！！！</span><br><span class="line"></span><br><span class="line">truncate语句删除数据的原理？</span><br><span class="line">  这种删除效率比较高，表被一次截断，物理删除。</span><br><span class="line">  这种删除缺点：不支持回滚。</span><br><span class="line">  这种删除优点：快速。</span><br><span class="line"></span><br><span class="line">用法：truncate table dept_bak; （这种操作属于DDL操作。）</span><br><span class="line"></span><br><span class="line">大表非常大，上亿条记录？？？？</span><br><span class="line">  删除的时候，使用delete，也许需要执行1个小时才能删除完！效率较低。</span><br><span class="line">  可以选择使用truncate删除表中的数据。只需要不到1秒钟的时间就删除结束。效率较高。</span><br><span class="line">  但是使用truncate之前，必须仔细询问客户是否真的要删除，并警告删除之后不可恢复！</span><br><span class="line"></span><br><span class="line">  truncate是删除表中的数据，表还在！</span><br><span class="line"></span><br><span class="line">删除表操作？</span><br><span class="line">  drop table 表名; // 这不是删除表中的数据，这是把表删除。</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">什么是约束？</span><br><span class="line">约束对应的英语单词： constraint</span><br><span class="line">在创建表的时候，我们可以给表中的字段加上一些约束，来保证这个表中数据的</span><br><span class="line">完整性、有效性！！！</span><br><span class="line"></span><br><span class="line">约束的作用就是为了保证：表中的数据有效！！</span><br><span class="line"></span><br><span class="line">约束包括哪些？</span><br><span class="line">非空约束：not null</span><br><span class="line">唯一性约束: unique</span><br><span class="line">主键约束: primary key （简称PK）</span><br><span class="line">外键约束：foreign key（简称FK）</span><br><span class="line">检查约束：check（mysql不支持，oracle支持）</span><br><span class="line">只学习前四个</span><br></pre></td></tr></table></figure>
<h2 id="非空约束：not-null"><a href="#非空约束：not-null" class="headerlink" title="非空约束：not null"></a>非空约束：not null</h2><blockquote>
<p>非空约束not null约束的字段不能为NULL。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drop table if exists t_vip;</span><br><span class="line">create table t_vip(</span><br><span class="line">  id int,</span><br><span class="line">  name varchar(255) not null  // not null只有列级约束，没有表级约束！</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p><img src="MySQL .assets/image-20220509213545013.png" alt="image-20220509213545013"></p>
<h2 id="唯一性约束-unique"><a href="#唯一性约束-unique" class="headerlink" title="唯一性约束: unique"></a>唯一性约束: unique</h2><blockquote>
<p>唯一性约束unique约束的字段不能重复，但是可以为NULL。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">唯一性约束unique约束的字段不能重复，但是可以为NULL。</span><br><span class="line">drop table if exists t_vip;</span><br><span class="line">create table t_vip(</span><br><span class="line">  id int,</span><br><span class="line">  name varchar(255) unique,</span><br><span class="line">  email varchar(255)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">如何做到联合唯一约束</span><br><span class="line">create table t_vip(</span><br><span class="line">  id int,</span><br><span class="line">  name varchar(255) unique,</span><br><span class="line">  email varchar(255) unique</span><br><span class="line">);</span><br><span class="line">这样只是分别具有唯一性。</span><br><span class="line">    </span><br><span class="line">drop table if exists t_vip;</span><br><span class="line">create table t_vip(</span><br><span class="line">  id int,</span><br><span class="line">  name varchar(255),</span><br><span class="line">  email varchar(255),</span><br><span class="line">  unique(name,email) // 约束没有添加在列的后面，这种约束被称为表级约束。</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">什么时候使用表级约束？</span><br><span class="line">需要要给多个字段联合起来添加某一个约束的时候，需要使用表级约束。</span><br><span class="line"></span><br><span class="line">name和email两个字段联合起来唯一</span><br><span class="line">在mysql当中，如果一个字段同时被not null和unique约束的话，该字段自动变成主键字段。（注意：oracle中不一样）</span><br></pre></td></tr></table></figure>
<h2 id="主键约束-primary-key"><a href="#主键约束-primary-key" class="headerlink" title="主键约束: primary key"></a>主键约束: primary key</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">主键约束的相关术语？</span><br><span class="line">  主键约束：就是一种约束。</span><br><span class="line">  主键字段：该字段上添加了主键约束，这样的字段叫做：主键字段</span><br><span class="line">  主键值：主键字段中的每一个值都叫做：主键值。</span><br><span class="line"></span><br><span class="line">什么是主键？有啥用？</span><br><span class="line">  主键值是每一行记录的唯一标识。</span><br><span class="line">  主键值是每一行记录的身份证号！！！</span><br><span class="line"></span><br><span class="line">记住：任何一张表都应该有主键，没有主键，表无效！！</span><br><span class="line"></span><br><span class="line">主键的特征：not null + unique（主键值不能是NULL，同时也不能重复！）</span><br><span class="line"></span><br><span class="line">怎么给一张表添加主键约束呢？</span><br><span class="line">  drop table if exists t_vip;</span><br><span class="line">  // 1个字段做主键，叫做：单一主键</span><br><span class="line">  create table t_vip(</span><br><span class="line">    id int primary key,  //列级约束</span><br><span class="line">    name varchar(255)</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">表级约束主要是给多个字段联合起来添加约束？</span><br><span class="line">  drop table if exists t_vip;</span><br><span class="line">  // id和name联合起来做主键：复合主键！！！！</span><br><span class="line">  create table t_vip(</span><br><span class="line">    id int,</span><br><span class="line">    name varchar(255),</span><br><span class="line">    email varchar(255),</span><br><span class="line">    primary key(id,name)</span><br><span class="line">  );</span><br><span class="line">  </span><br><span class="line">在实际开发中不建议使用：复合主键。建议使用单一主键！</span><br><span class="line">因为主键值存在的意义就是这行记录的身份证号，只要意义达到即可，单一主键可以做到。</span><br><span class="line">复合主键比较复杂，不建议使用！！！</span><br><span class="line">主键约束只能添加一个</span><br><span class="line"></span><br><span class="line">主键值建议使用：</span><br><span class="line">  int</span><br><span class="line">  bigint</span><br><span class="line">  char</span><br><span class="line">  等类型。</span><br><span class="line"></span><br><span class="line">不建议使用：varchar来做主键。主键值一般都是数字，一般都是定长的！</span><br><span class="line"></span><br><span class="line">主键除了：单一主键和复合主键之外，还可以这样进行分类？</span><br><span class="line">  自然主键：主键值是一个自然数，和业务没关系。</span><br><span class="line">  业务主键：主键值和业务紧密关联，例如拿银行卡账号做主键值。这就是业务主键！</span><br><span class="line"></span><br><span class="line">在实际开发中使用业务主键多，还是使用自然主键多一些？</span><br><span class="line">  自然主键使用比较多，因为主键只要做到不重复就行，不需要有意义。</span><br><span class="line">  业务主键不好，因为主键一旦和业务挂钩，那么当业务发生变动的时候，</span><br><span class="line">  可能会影响到主键值，所以业务主键不建议使用。尽量使用自然主键。</span><br><span class="line">  </span><br><span class="line">在mysql当中，有一种机制，可以帮助我们自动维护一个主键值？</span><br><span class="line">		drop table if exists t_vip;</span><br><span class="line">		create table t_vip(</span><br><span class="line">			id int primary key auto_increment, //auto_increment表示自增，从1开始，以1递增！</span><br><span class="line">			name varchar(255)</span><br><span class="line">		);</span><br></pre></td></tr></table></figure>
<h2 id="外键约束：foreign-key"><a href="#外键约束：foreign-key" class="headerlink" title="外键约束：foreign key"></a>外键约束：foreign key</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">外键约束涉及到的相关术语：</span><br><span class="line">  外键约束：一种约束（ foreign key）</span><br><span class="line">  外键字段：该字段上添加了外键约束</span><br><span class="line">  外键值：外键字段当中的每一个值。</span><br><span class="line">业务背景：</span><br><span class="line">请设计数据库表，来描述”班级和学生“的信息？</span><br><span class="line">第一种方案：班级和学生存储在同一张表</span><br><span class="line">t_student</span><br><span class="line">no(pk)		name		classno		classname</span><br><span class="line">-----------------------------------------------</span><br><span class="line">1			jack		100			2班</span><br><span class="line">2			lucy		100			2班</span><br><span class="line">3			lisi		100			2班</span><br><span class="line">4			ssh			100			2班</span><br><span class="line">5			zss			101			1班</span><br><span class="line">6			shq			101			1班</span><br><span class="line">7			dhq			101			1班</span><br><span class="line">8			dhw			101			1班</span><br><span class="line">分析以上方案的缺点：</span><br><span class="line">	数据冗余，空间浪费!!</span><br><span class="line">第二种方案：班级一张表，学生一张表</span><br><span class="line">t_class班级表</span><br><span class="line">classno(pk)		classname</span><br><span class="line">----------------------</span><br><span class="line">100			2班</span><br><span class="line">101			1班</span><br><span class="line">t_student学生表</span><br><span class="line">no(pk)		name		cno(FK)</span><br><span class="line">-------------------------------</span><br><span class="line">1			jack		100</span><br><span class="line">2			lucy		100</span><br><span class="line">3			lisi		100</span><br><span class="line">4			ssh			100</span><br><span class="line">5			zss			101</span><br><span class="line">6			shq			101</span><br><span class="line">7			dhq			101</span><br><span class="line">8			dhw			101</span><br><span class="line">当cno字段没有任何约束时，可能会导致数据无效，可能出现一个102，但是102班级不存在，所有为了保证cno字段中的值都是100和101，需要给cno添加外键约束。</span><br><span class="line">那么：cno字段就是外键字段，cno字段中的每一个值都是外键值。</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">t_class是父类</span><br><span class="line">t_student是子类</span><br><span class="line">先删子，再删父（删表）</span><br><span class="line">先创父，再创子</span><br><span class="line">先删子，再删父（删数据）</span><br><span class="line">先插父，再插子</span><br><span class="line">外键可以为NULL</span><br><span class="line">思考：子表中的外键引用的父表中的某个字段，被引用的这个字段必须是主键吗？</span><br><span class="line">不一定，但至少具有unique约束。</span><br></pre></td></tr></table></figure>
<h1 id="存储引擎"><a href="#存储引擎" class="headerlink" title="存储引擎"></a>存储引擎</h1><blockquote>
<p>什么是存储引擎，有什么用呢？</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">存储引擎是MySQL中特有的一个术语，其它数据库中没有。（Oracle中有，但是不叫这个名字）</span><br><span class="line">存储引擎这个名字高端大气上档次。实际上存储引擎是一个表存储/组织数据的方式。</span><br><span class="line">不同的存储引擎，表存储数据的方式不同。</span><br><span class="line"></span><br><span class="line">怎么给表添加/指定“存储引擎”呢？</span><br><span class="line">show create table t_student;</span><br><span class="line"></span><br><span class="line">可以在建表的时候给表指定存储引擎。</span><br><span class="line">CREATE TABLE `t_student` (</span><br><span class="line">  `no` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `name` varchar(255) DEFAULT NULL,</span><br><span class="line">  `cno` int(11) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`no`),</span><br><span class="line">  KEY `cno` (`cno`),</span><br><span class="line">  CONSTRAINT `t_student_ibfk_1` FOREIGN KEY (`cno`) REFERENCES `t_class` (`classno`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8</span><br><span class="line"></span><br><span class="line">在建表的时候可以在最后小括号的&quot;)&quot;的右边使用：</span><br><span class="line">  ENGINE来指定存储引擎。</span><br><span class="line">  CHARSET来指定这张表的字符编码方式。</span><br><span class="line">	</span><br><span class="line">结论：</span><br><span class="line">  mysql默认的存储引擎是：InnoDB</span><br><span class="line">  mysql默认的字符编码方式是：utf8</span><br><span class="line">  </span><br><span class="line">怎么查看mysql支持哪些存储引擎呢？</span><br><span class="line">命令： show engines \G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">      Engine: InnoDB</span><br><span class="line">     Support: DEFAULT</span><br><span class="line">     Comment: Supports transactions, row-level locking, and foreign keys</span><br><span class="line">Transactions: YES</span><br><span class="line">          XA: YES</span><br><span class="line">  Savepoints: YES</span><br><span class="line">*************************** 2. row ***************************</span><br><span class="line">      Engine: MRG_MYISAM</span><br><span class="line">     Support: YES</span><br><span class="line">     Comment: Collection of identical MyISAM tables</span><br><span class="line">Transactions: NO</span><br><span class="line">          XA: NO</span><br><span class="line">  Savepoints: NO</span><br><span class="line">*************************** 3. row ***************************</span><br><span class="line">      Engine: MEMORY</span><br><span class="line">     Support: YES</span><br><span class="line">     Comment: Hash based, stored in memory, useful for temporary tables</span><br><span class="line">Transactions: NO</span><br><span class="line">          XA: NO</span><br><span class="line">  Savepoints: NO</span><br><span class="line">*************************** 4. row ***************************</span><br><span class="line">      Engine: BLACKHOLE</span><br><span class="line">     Support: YES</span><br><span class="line">     Comment: /dev/null storage engine (anything you write to it disappears)</span><br><span class="line">Transactions: NO</span><br><span class="line">          XA: NO</span><br><span class="line">  Savepoints: NO</span><br><span class="line">*************************** 5. row ***************************</span><br><span class="line">      Engine: MyISAM</span><br><span class="line">     Support: YES</span><br><span class="line">     Comment: MyISAM storage engine</span><br><span class="line">Transactions: NO</span><br><span class="line">          XA: NO</span><br><span class="line">  Savepoints: NO</span><br><span class="line">*************************** 6. row ***************************</span><br><span class="line">      Engine: CSV</span><br><span class="line">     Support: YES</span><br><span class="line">     Comment: CSV storage engine</span><br><span class="line">Transactions: NO</span><br><span class="line">          XA: NO</span><br><span class="line">  Savepoints: NO</span><br><span class="line">*************************** 7. row ***************************</span><br><span class="line">      Engine: ARCHIVE</span><br><span class="line">     Support: YES</span><br><span class="line">     Comment: Archive storage engine</span><br><span class="line">Transactions: NO</span><br><span class="line">          XA: NO</span><br><span class="line">  Savepoints: NO</span><br><span class="line">*************************** 8. row ***************************</span><br><span class="line">      Engine: PERFORMANCE_SCHEMA</span><br><span class="line">     Support: YES</span><br><span class="line">     Comment: Performance Schema</span><br><span class="line">Transactions: NO</span><br><span class="line">          XA: NO</span><br><span class="line">  Savepoints: NO</span><br><span class="line">*************************** 9. row ***************************</span><br><span class="line">      Engine: FEDERATED</span><br><span class="line">     Support: NO</span><br><span class="line">     Comment: Federated MySQL storage engine</span><br><span class="line">Transactions: NULL</span><br><span class="line">          XA: NULL</span><br><span class="line">  Savepoints: NULL</span><br><span class="line">9 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"> select version();</span><br><span class="line">+------------+</span><br><span class="line">| version()  |</span><br><span class="line">+------------+</span><br><span class="line">| 5.7.29-log |</span><br><span class="line">+------------+</span><br><span class="line"></span><br><span class="line">mysql支持九大存储引擎，当前5.7.29支持8个。版本不同支持情况也不同</span><br></pre></td></tr></table></figure>
<h2 id="MyISAM存储引擎"><a href="#MyISAM存储引擎" class="headerlink" title="MyISAM存储引擎"></a>MyISAM存储引擎</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">它管理的表具有以下特征：</span><br><span class="line">  使用三个文件表示每个表：</span><br><span class="line">    格式文件 — 存储表结构的定义（mytable.frm）</span><br><span class="line">    数据文件 — 存储表行的内容（mytable.MYD）</span><br><span class="line">    索引文件 — 存储表上索引（mytable.MYI）：索引是一本书的目录，缩小扫描范围，提高查询效率的一种机制。</span><br><span class="line">  可被转换为压缩、只读表来节省空间</span><br><span class="line"></span><br><span class="line">  提示一下：</span><br><span class="line">    对于一张表来说，只要是主键，</span><br><span class="line">    或者加有unique约束的字段上会自动创建索引。</span><br><span class="line"></span><br><span class="line">  MyISAM存储引擎特点：</span><br><span class="line">    可被转换为压缩、只读表来节省空间</span><br><span class="line">    这是这种存储引擎的优势！！！！</span><br><span class="line">  </span><br><span class="line">  MyISAM不支持事务机制，安全性低。</span><br></pre></td></tr></table></figure>
<h2 id="InnoDB存储引擎"><a href="#InnoDB存储引擎" class="headerlink" title="InnoDB存储引擎"></a>InnoDB存储引擎</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这是mysql默认的存储引擎，同时也是一个重量级的存储引擎。</span><br><span class="line">InnoDB支持事务，支持数据库崩溃后自动恢复机制。</span><br><span class="line">InnoDB存储引擎最主要的特点是：非常安全。</span><br><span class="line"></span><br><span class="line">它管理的表具有下列主要特征：</span><br><span class="line">  – 每个 InnoDB 表在数据库目录中以.frm 格式文件表示</span><br><span class="line">  – InnoDB 表空间 tablespace 被用于存储表的内容（表空间是一个逻辑名称。表空间存储数据+索引。）</span><br><span class="line"></span><br><span class="line">  – 提供一组用来记录事务性活动的日志文件</span><br><span class="line">  – 用 COMMIT(提交)、SAVEPOINT 及ROLLBACK(回滚)支持事务处理</span><br><span class="line">  – 提供全 ACID 兼容</span><br><span class="line">  – 在 MySQL 服务器崩溃后提供自动恢复</span><br><span class="line">  – 多版本（MVCC）和行级锁定</span><br><span class="line">  – 支持外键及引用的完整性，包括级联删除和更新</span><br><span class="line"></span><br><span class="line">InnoDB最大的特点就是支持事务：</span><br><span class="line">  以保证数据的安全。效率不是很高，并且也不能压缩，不能转换为只读，</span><br><span class="line">  不能很好的节省存储空间。</span><br></pre></td></tr></table></figure>
<h2 id="MEMORY存储引擎"><a href="#MEMORY存储引擎" class="headerlink" title="MEMORY存储引擎"></a>MEMORY存储引擎</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">使用 MEMORY 存储引擎的表，其数据存储在内存中，且行的长度固定，</span><br><span class="line">这两个特点使得 MEMORY 存储引擎非常快。</span><br><span class="line"></span><br><span class="line">MEMORY 存储引擎管理的表具有下列特征：</span><br><span class="line">  – 在数据库目录内，每个表均以.frm 格式的文件表示。</span><br><span class="line">  – 表数据及索引被存储在内存中。（目的就是快，查询快！）</span><br><span class="line">  – 表级锁机制。</span><br><span class="line">  – 不能包含 TEXT 或 BLOB 字段。</span><br><span class="line"></span><br><span class="line">MEMORY 存储引擎以前被称为HEAP 引擎。</span><br><span class="line"></span><br><span class="line">MEMORY引擎优点：查询效率是最高的。不需要和硬盘交互。</span><br><span class="line">MEMORY引擎缺点：不安全，关机之后数据消失。因为数据和索引都是在内存当中。</span><br></pre></td></tr></table></figure>
<h1 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">什么是事务？</span><br><span class="line"></span><br><span class="line">一个事务其实就是一个完整的业务逻辑。</span><br><span class="line">是一个最小的工作单元。不可再分。</span><br><span class="line"></span><br><span class="line">什么是一个完整的业务逻辑？</span><br><span class="line">  假设转账，从A账户向B账户中转账10000.</span><br><span class="line">  将A账户的钱减去10000（update语句）</span><br><span class="line">  将B账户的钱加上10000（update语句）</span><br><span class="line">  这就是一个完整的业务逻辑。</span><br><span class="line"></span><br><span class="line">  以上的操作是一个最小的工作单元，要么同时成功，要么同时失败，不可再分。</span><br><span class="line">  这两个update语句要求必须同时成功或者同时失败，这样才能保证钱是正确的。</span><br><span class="line"></span><br><span class="line">只有DML语句才会有事务这一说，其它语句和事务无关！！！</span><br><span class="line">insert</span><br><span class="line">delete</span><br><span class="line">update</span><br><span class="line">只有以上的三个语句和事务有关系，其它都没有关系。</span><br><span class="line"></span><br><span class="line">因为 只有以上的三个语句是数据库表中数据进行增、删、改的。</span><br><span class="line">只要你的操作一旦涉及到数据的增、删、改，那么就一定要考虑安全问题。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">事物是怎么做到多条DML语句同时成功或者同时失败的呢？</span><br><span class="line"></span><br><span class="line">InnoDB存储引擎：提供一组用来记录事务性活动的日志文件</span><br><span class="line"></span><br><span class="line">事务开启了：</span><br><span class="line">insert</span><br><span class="line">insert</span><br><span class="line">insert</span><br><span class="line">delete</span><br><span class="line">update</span><br><span class="line">update</span><br><span class="line">update</span><br><span class="line">事务结束了！</span><br><span class="line"></span><br><span class="line">在事务的执行过程中，每一条DML的操作都会记录到“事务性活动的日志文件”中。</span><br><span class="line">在事务的执行过程中，我们可以提交事务，也可以回滚事务。</span><br><span class="line"></span><br><span class="line">提交事务？</span><br><span class="line">  清空事务性活动的日志文件，将数据全部彻底持久化到数据库表中。</span><br><span class="line">  提交事务标志着，事务的结束。并且是一种全部成功的结束。</span><br><span class="line"></span><br><span class="line">回滚事务？</span><br><span class="line">  将之前所有的DML操作全部撤销，并且清空事务性活动的日志文件</span><br><span class="line">  回滚事务标志着，事务的结束。并且是一种全部失败的结束。</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="MySQL .assets/image-20220511113015276.png" alt="image-20220511113015276"></p>
<h2 id="提交事务、回滚事务"><a href="#提交事务、回滚事务" class="headerlink" title="提交事务、回滚事务"></a>提交事务、回滚事务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">提交事务：commit; 语句</span><br><span class="line">回滚事务：rollback; 语句（回滚永远都是只能回滚到上一次的提交点！）</span><br><span class="line"></span><br><span class="line">事务对应的英语单词是：transaction</span><br><span class="line"></span><br><span class="line">测试一下，在mysql当中默认的事务行为是怎样的？</span><br><span class="line">  mysql默认情况下是支持自动提交事务的。（自动提交）</span><br><span class="line">  什么是自动提交？</span><br><span class="line">    每执行一条DML语句，则提交一次！</span><br><span class="line"></span><br><span class="line">  这种自动提交实际上是不符合我们的开发习惯，因为一个业务</span><br><span class="line">  通常是需要多条DML语句共同执行才能完成的，为了保证数据</span><br><span class="line">  的安全，必须要求同时成功之后再提交，所以不能执行一条</span><br><span class="line">  就提交一条。</span><br><span class="line"></span><br><span class="line">怎么将mysql的自动提交机制关闭掉呢？</span><br><span class="line">  先执行这个命令：start transaction;</span><br></pre></td></tr></table></figure>
<p><strong>代码演示</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">演示事务：</span><br><span class="line">  ---------------------------------回滚事务----------------------------------------</span><br><span class="line">  mysql&gt; use bjpowernode;</span><br><span class="line">  Database changed</span><br><span class="line">  mysql&gt; select * from dept_bak;</span><br><span class="line">  Empty set (0.00 sec)</span><br><span class="line"></span><br><span class="line">  mysql&gt; start transaction;</span><br><span class="line">  Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">  mysql&gt; insert into dept_bak values(10,&#x27;abc&#x27;, &#x27;tj&#x27;);</span><br><span class="line">  Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">  mysql&gt; insert into dept_bak values(10,&#x27;abc&#x27;, &#x27;tj&#x27;);</span><br><span class="line">  Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">  mysql&gt; select * from dept_bak;</span><br><span class="line">  +--------+-------+------+</span><br><span class="line">  | DEPTNO | DNAME | LOC  |</span><br><span class="line">  +--------+-------+------+</span><br><span class="line">  |     10 | abc   | tj   |</span><br><span class="line">  |     10 | abc   | tj   |</span><br><span class="line">  +--------+-------+------+</span><br><span class="line">  2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">  mysql&gt; rollback;</span><br><span class="line">  Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">  mysql&gt; select * from dept_bak;</span><br><span class="line">  Empty set (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  ---------------------------------提交事务----------------------------------------</span><br><span class="line">  mysql&gt; use bjpowernode;</span><br><span class="line">  Database changed</span><br><span class="line">  mysql&gt; select * from dept_bak;</span><br><span class="line">  +--------+-------+------+</span><br><span class="line">  | DEPTNO | DNAME | LOC  |</span><br><span class="line">  +--------+-------+------+</span><br><span class="line">  |     10 | abc   | bj   |</span><br><span class="line">  +--------+-------+------+</span><br><span class="line">  1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">  mysql&gt; start transaction;</span><br><span class="line">  Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">  mysql&gt; insert into dept_bak values(20,&#x27;abc</span><br><span class="line">  Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">  mysql&gt; insert into dept_bak values(20,&#x27;abc</span><br><span class="line">  Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">  mysql&gt; insert into dept_bak values(20,&#x27;abc</span><br><span class="line">  Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">  mysql&gt; commit;</span><br><span class="line">  Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">  mysql&gt; select * from dept_bak;</span><br><span class="line">  +--------+-------+------+</span><br><span class="line">  | DEPTNO | DNAME | LOC  |</span><br><span class="line">  +--------+-------+------+</span><br><span class="line">  |     10 | abc   | bj   |</span><br><span class="line">  |     20 | abc   | tj   |</span><br><span class="line">  |     20 | abc   | tj   |</span><br><span class="line">  |     20 | abc   | tj   |</span><br><span class="line">  +--------+-------+------+</span><br><span class="line">  4 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">  mysql&gt; rollback;</span><br><span class="line">  Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">  mysql&gt; select * from dept_bak;</span><br><span class="line">  +--------+-------+------+</span><br><span class="line">  | DEPTNO | DNAME | LOC  |</span><br><span class="line">  +--------+-------+------+</span><br><span class="line">  |     10 | abc   | bj   |</span><br><span class="line">  |     20 | abc   | tj   |</span><br><span class="line">  |     20 | abc   | tj   |</span><br><span class="line">  |     20 | abc   | tj   |</span><br><span class="line">  +--------+-------+------+</span><br><span class="line">  4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>
<h2 id="事务四个特性"><a href="#事务四个特性" class="headerlink" title="事务四个特性"></a>事务四个特性</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A：原子性</span><br><span class="line">  说明事务是最小的工作单元。不可再分。</span><br><span class="line"></span><br><span class="line">C：一致性</span><br><span class="line">  所有事务要求，在同一个事务当中，所有操作必须同时成功，或者同时失败，</span><br><span class="line">  以保证数据的一致性。</span><br><span class="line"></span><br><span class="line">I：隔离性</span><br><span class="line">  A事务和B事务之间具有一定的隔离。</span><br><span class="line">  教室A和教室B之间有一道墙，这道墙就是隔离性。</span><br><span class="line">  A事务在操作一张表的时候，另一个事务B也操作这张表会那样？？？</span><br><span class="line"></span><br><span class="line">D：持久性</span><br><span class="line">  事务最终结束的一个保障。事务提交，就相当于将没有保存到硬盘上的数据</span><br><span class="line">  保存到硬盘上！</span><br></pre></td></tr></table></figure>
<h2 id="事务的隔离性"><a href="#事务的隔离性" class="headerlink" title="事务的隔离性"></a>事务的隔离性</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A教室和B教室中间有一道墙，这道墙可以很厚，也可以很薄。这就是事务的隔离级别。</span><br><span class="line">这道墙越厚，表示隔离级别就越高。</span><br><span class="line"></span><br><span class="line">事务和事务之间的隔离级别有哪些呢？4个级别</span><br><span class="line"></span><br><span class="line">读未提交：read uncommitted（最低的隔离级别）《没有提交就读到了》</span><br><span class="line">  什么是读未提交？</span><br><span class="line">    事务A可以读取到事务B未提交的数据。</span><br><span class="line">  这种隔离级别存在的问题就是：</span><br><span class="line">    脏读现象！(Dirty Read)</span><br><span class="line">    我们称读到了脏数据。</span><br><span class="line">  这种隔离级别一般都是理论上的，大多数的数据库隔离级别都是二档起步！</span><br><span class="line"></span><br><span class="line">读已提交：read committed《提交之后才能读到》</span><br><span class="line">  什么是读已提交？</span><br><span class="line">    事务A只能读取到事务B提交之后的数据。</span><br><span class="line">  这种隔离级别解决了什么问题？</span><br><span class="line">    解决了脏读的现象。</span><br><span class="line">  这种隔离级别存在什么问题？</span><br><span class="line">    不可重复读取数据。</span><br><span class="line">    什么是不可重复读取数据呢？</span><br><span class="line">      在事务开启之后，第一次读到的数据是3条，当前事务还没有</span><br><span class="line">      结束，可能第二次再读取的时候，读到的数据是4条，3不等于4</span><br><span class="line">      称为不可重复读取。</span><br><span class="line"></span><br><span class="line">  这种隔离级别是比较真实的数据，每一次读到的数据是绝对的真实。</span><br><span class="line">  oracle数据库默认的隔离级别是：read committed</span><br><span class="line"></span><br><span class="line">可重复读：repeatable read《提交之后也读不到，永远读取的都是刚开启事务时的数据》</span><br><span class="line">  什么是可重复读取？</span><br><span class="line">    事务A开启之后，不管是多久，每一次在事务A中读取到的数据</span><br><span class="line">    都是一致的。即使事务B将数据已经修改，并且提交了，事务A</span><br><span class="line">    读取到的数据还是没有发生改变，这就是可重复读。</span><br><span class="line">  可重复读解决了什么问题？</span><br><span class="line">    解决了不可重复读取数据。</span><br><span class="line">  可重复读存在的问题是什么？</span><br><span class="line">    可以会出现幻影读。</span><br><span class="line">    每一次读取到的数据都是幻象。不够真实！</span><br><span class="line">  </span><br><span class="line">  早晨9点开始开启了事务，只要事务不结束，到晚上9点，读到的数据还是那样！</span><br><span class="line">  读到的是假象。不够绝对的真实。</span><br><span class="line"></span><br><span class="line">  mysql中默认的事务隔离级别就是这个！！！！！！！！！！！</span><br><span class="line"></span><br><span class="line">序列化/串行化：serializable（最高的隔离级别）</span><br><span class="line">  这是最高隔离级别，效率最低。解决了所有的问题。</span><br><span class="line">  这种隔离级别表示事务排队，不能并发！</span><br><span class="line">  synchronized，线程同步（事务同步）</span><br><span class="line">  每一次读取到的数据都是最真实的，并且效率是最低的。</span><br><span class="line"></span><br><span class="line">查看隔离级别：SELECT @@tx_isolation</span><br><span class="line">+-----------------+</span><br><span class="line">| @@tx_isolation  |</span><br><span class="line">+-----------------+</span><br><span class="line">| REPEATABLE-READ |</span><br><span class="line">+-----------------+</span><br><span class="line">mysql默认的隔离级别</span><br></pre></td></tr></table></figure>
<p><strong>验证隔离级别：</strong></p>
<p>1.read uncommitted</p>
<p><img src="MySQL .assets/image-20220511120806176.png" alt="image-20220511120806176"></p>
<p>2.read committed</p>
<p><img src="MySQL .assets/image-20220511121102017.png" alt="image-20220511121102017"></p>
<p>3.repeatable read</p>
<p><img src="MySQL .assets/image-20220511121315245.png" alt="image-20220511121315245"></p>
<p>4.serializable</p>
<p><img src="MySQL .assets/image-20220511121736463.png" alt="image-20220511121736463"></p>
<p>事物B会卡住直到事物A提交结束，才执行。</p>
<h1 id="索引（index）"><a href="#索引（index）" class="headerlink" title="索引（index）"></a>索引（index）</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">什么是索引？</span><br><span class="line">索引是在数据库表的字段上添加的，是为了提高查询效率存在的一种机制。</span><br><span class="line">一张表的一个字段可以添加一个索引，当然，多个字段联合起来也可以添加索引。</span><br><span class="line">索引相当于一本书的目录，是为了缩小扫描范围而存在的一种机制。</span><br><span class="line"></span><br><span class="line">对于一本字典来说，查找某个汉字有两种方式：</span><br><span class="line">  第一种方式：一页一页挨着找，直到找到为止，这种查找方式属于全字典扫描。</span><br><span class="line">  效率比较低。</span><br><span class="line">  第二种方式：先通过目录（索引）去定位一个大概的位置，然后直接定位到这个</span><br><span class="line">  位置，做局域性扫描，缩小扫描的范围，快速的查找。这种查找方式属于通过</span><br><span class="line">  索引检索，效率较高。</span><br><span class="line">  </span><br><span class="line">select * from t_user where name = &#x27;jack&#x27;;</span><br><span class="line"></span><br><span class="line">以上的这条SQL语句会去name字段上扫描，为什么？</span><br><span class="line">  因为查询条件是：name=&#x27;jack&#x27;</span><br><span class="line"></span><br><span class="line">如果name字段上没有添加索引（目录），或者说没有给name字段创建索引，</span><br><span class="line">MySQL会进行全扫描，会将name字段上的每一个值都比对一遍。效率比较低。</span><br><span class="line"></span><br><span class="line">MySQL在查询方面主要就是两种方式：</span><br><span class="line">  第一种方式：全表扫描</span><br><span class="line">  第二种方式：根据索引检索。</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">  在实际中，汉语字典前面的目录是排序的，按照a b c d e f....排序，</span><br><span class="line">  为什么排序呢？因为只有排序了才会有区间查找这一说！（缩小扫描范围</span><br><span class="line">  其实就是扫描某个区间罢了！）</span><br><span class="line"></span><br><span class="line">  在mysql数据库当中索引也是需要排序的，并且这个所以的排序和TreeSet</span><br><span class="line">  数据结构相同。TreeSet（TreeMap）底层是一个自平衡的二叉树！在mysql当中索引是一个B-Tree数据结构。</span><br><span class="line"></span><br><span class="line">  遵循左小右大原则存放。采用中序遍历方式遍历取数据。</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">假设有一张用户表：t_user</span><br><span class="line"></span><br><span class="line">id(PK)					name						每一行记录在硬盘上都有物理存储编号</span><br><span class="line">----------------------------------------------------------------------------------</span><br><span class="line">100						zhangsan					0x1111</span><br><span class="line">120						lisi						0x2222</span><br><span class="line">99						wangwu						0x8888</span><br><span class="line">88						zhaoliu						0x9999</span><br><span class="line">101						jack						0x6666</span><br><span class="line">55						lucy						0x5555</span><br><span class="line">130						tom							0x7777</span><br><span class="line"></span><br><span class="line">提醒1：在任何数据库当中主键上都会自动添加索引对象，id字段上自动有索引，</span><br><span class="line">因为id是PK。另外在mysql当中，一个字段上如果有unique约束的话，也会自动</span><br><span class="line">创建索引对象。</span><br><span class="line"></span><br><span class="line">提醒2：在任何数据库当中，任何一张表的任何一条记录在硬盘存储上都有</span><br><span class="line">一个硬盘的物理存储编号。</span><br><span class="line"></span><br><span class="line">提醒3：在mysql当中，索引是一个单独的对象，不同的存储引擎以不同的形式存在，在MyISAM存储引擎中，索引存储在一个.MYI文件中。在InnoDB存储引擎中索引存储在一个逻辑名称叫做tablespace的当中。在MEMORY存储引擎当中索引被存储在内存当中。不管索引存储在哪里，索引在mysql当中都是一个树的形式存在。（自平衡二叉树：B-Tree）</span><br></pre></td></tr></table></figure>
<p><img src="MySQL .assets/image-20220511153441061.png" alt="image-20220511153441061"></p>
<h2 id="添加索引的条件"><a href="#添加索引的条件" class="headerlink" title="添加索引的条件"></a>添加索引的条件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">什么条件下，我们会考虑给字段添加索引呢？</span><br><span class="line">条件1：数据量庞大（到底有多么庞大算庞大，这个需要测试，因为每一个硬件环境不同）</span><br><span class="line">条件2：该字段经常出现在where的后面，以条件的形式存在，也就是说这个字段总是被扫描。</span><br><span class="line">条件3：该字段很少的DML(insert delete update)操作。（因为DML之后，索引需要重新排序。）</span><br><span class="line"></span><br><span class="line">建议不要随意添加索引，因为索引也是需要维护的，太多的话反而会降低系统的性能。</span><br><span class="line">建议通过主键查询，建议通过unique约束的字段进行查询，效率是比较高的。</span><br></pre></td></tr></table></figure>
<h2 id="索引的创建和删除"><a href="#索引的创建和删除" class="headerlink" title="索引的创建和删除"></a>索引的创建和删除</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">创建索引：</span><br><span class="line">  mysql&gt; create index emp_ename_index on emp(ename);</span><br><span class="line">  给emp表的ename字段添加索引，起名：emp_ename_index</span><br><span class="line"></span><br><span class="line">删除索引：</span><br><span class="line">  mysql&gt; drop index emp_ename_index on emp;</span><br><span class="line">  将emp表上的emp_ename_index索引对象删除。</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="是否使用索引进行检索"><a href="#是否使用索引进行检索" class="headerlink" title="是否使用索引进行检索"></a>是否使用索引进行检索</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.5、在mysql当中，怎么查看一个SQL语句是否使用了索引进行检索？</span><br><span class="line"></span><br><span class="line">mysql&gt; explain select * from emp where ename = &#x27;KING&#x27;;</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><br><span class="line">| id | select_type | table | type | possible_keys | key  | key_len | ref  | rows | Extra       |</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><br><span class="line">|  1 | SIMPLE      | emp   | ALL  | NULL          | NULL | NULL    | NULL |   14 | Using where |</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><br><span class="line">扫描14条记录：说明没有使用索引。type=ALL</span><br><span class="line"></span><br><span class="line">mysql&gt; create index emp_ename_index on emp(ename);</span><br><span class="line"></span><br><span class="line">mysql&gt; explain select * from emp where ename = &#x27;KING&#x27;;</span><br><span class="line">+----+-------------+-------+------+-----------------+-----------------+---------+-------+------+-------------+</span><br><span class="line">| id | select_type | table | type | possible_keys   | key             | key_len | ref   | rows | Extra       |</span><br><span class="line">+----+-------------+-------+------+-----------------+-----------------+---------+-------+------+-------------+</span><br><span class="line">|  1 | SIMPLE      | emp   | ref  | emp_ename_index | emp_ename_index | 33      | const |    1 | Using where |</span><br><span class="line">+----+-------------+-------+------+-----------------+-----------------+---------+-------+------+-------------+</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="索引失效的情况"><a href="#索引失效的情况" class="headerlink" title="索引失效的情况"></a>索引失效的情况</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">索引有失效的时候，什么时候索引失效呢？</span><br><span class="line"></span><br><span class="line">失效的第1种情况：</span><br><span class="line">  select * from emp where ename like &#x27;%T&#x27;;</span><br><span class="line"></span><br><span class="line">  ename上即使添加了索引，也不会走索引，为什么？</span><br><span class="line">    原因是因为模糊匹配当中以“%”开头了！</span><br><span class="line">    尽量避免模糊查询的时候以“%”开始。</span><br><span class="line">    这是一种优化的手段/策略。</span><br><span class="line"></span><br><span class="line">  mysql&gt; explain select * from emp where ename like &#x27;%T&#x27;;</span><br><span class="line">  +----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><br><span class="line">  | id | select_type | table | type | possible_keys | key  | key_len | ref  | rows | Extra       |</span><br><span class="line">  +----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><br><span class="line">  |  1 | SIMPLE      | emp   | ALL  | NULL          | NULL | NULL    | NULL |   14 | Using where |</span><br><span class="line">  +----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><br><span class="line"></span><br><span class="line">失效的第2种情况：</span><br><span class="line">  使用or的时候会失效，如果使用or那么要求or两边的条件字段都要有</span><br><span class="line">  索引，才会走索引，如果其中一边有一个字段没有索引，那么另一个</span><br><span class="line">  字段上的索引也会失效。所以这就是为什么不建议使用or的原因。</span><br><span class="line"></span><br><span class="line">  mysql&gt; explain select * from emp where ename = &#x27;KING&#x27; or job = &#x27;MANAGER&#x27;;</span><br><span class="line">  +----+-------------+-------+------+-----------------+------+---------+------+------+-------------+</span><br><span class="line">  | id | select_type | table | type | possible_keys   | key  | key_len | ref  | rows | Extra       |</span><br><span class="line">  +----+-------------+-------+------+-----------------+------+---------+------+------+-------------+</span><br><span class="line">  |  1 | SIMPLE      | emp   | ALL  | emp_ename_index | NULL | NULL    | NULL |   14 | Using where |</span><br><span class="line">  +----+-------------+-------+------+-----------------+------+---------+------+------+-------------+</span><br><span class="line"></span><br><span class="line">失效的第3种情况：</span><br><span class="line">  使用复合索引的时候，没有使用左侧的列查找，索引失效</span><br><span class="line">  什么是复合索引？</span><br><span class="line">    两个字段，或者更多的字段联合起来添加一个索引，叫做复合索引。</span><br><span class="line">  </span><br><span class="line">  create index emp_job_sal_index on emp(job,sal);</span><br><span class="line">  </span><br><span class="line">  mysql&gt; explain select * from emp where job = &#x27;MANAGER&#x27;;</span><br><span class="line">  +----+-------------+-------+------+-------------------+-------------------+---------+-------+------+-------------+</span><br><span class="line">  | id | select_type | table | type | possible_keys     | key               | key_len | ref   | rows | Extra       |</span><br><span class="line">  +----+-------------+-------+------+-------------------+-------------------+---------+-------+------+-------------+</span><br><span class="line">  |  1 | SIMPLE      | emp   | ref  | emp_job_sal_index | emp_job_sal_index | 30      | const |    3 | Using where |</span><br><span class="line">  +----+-------------+-------+------+-------------------+-------------------+---------+-------+------+-------------+</span><br><span class="line">  </span><br><span class="line">  mysql&gt; explain select * from emp where sal = 800;</span><br><span class="line">  +----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><br><span class="line">  | id | select_type | table | type | possible_keys | key  | key_len | ref  | rows | Extra       |</span><br><span class="line">  +----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><br><span class="line">  |  1 | SIMPLE      | emp   | ALL  | NULL          | NULL | NULL    | NULL |   14 | Using where |</span><br><span class="line">  +----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><br><span class="line"></span><br><span class="line">失效的第4种情况：</span><br><span class="line">  在where当中索引列参加了运算，索引失效。</span><br><span class="line">  mysql&gt; create index emp_sal_index on emp(sal);</span><br><span class="line"></span><br><span class="line">  explain select * from emp where sal = 800;</span><br><span class="line">  +----+-------------+-------+------+---------------+---------------+---------+-------+------+-------------+</span><br><span class="line">  | id | select_type | table | type | possible_keys | key           | key_len | ref   | rows | Extra       |</span><br><span class="line">  +----+-------------+-------+------+---------------+---------------+---------+-------+------+-------------+</span><br><span class="line">  |  1 | SIMPLE      | emp   | ref  | emp_sal_index | emp_sal_index | 9       | const |    1 | Using where |</span><br><span class="line">  +----+-------------+-------+------+---------------+---------------+---------+-------+------+-------------+</span><br><span class="line"></span><br><span class="line">  mysql&gt; explain select * from emp where sal+1 = 800;</span><br><span class="line">  +----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><br><span class="line">  | id | select_type | table | type | possible_keys | key  | key_len | ref  | rows | Extra       |</span><br><span class="line">  +----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><br><span class="line">  |  1 | SIMPLE      | emp   | ALL  | NULL          | NULL | NULL    | NULL |   14 | Using where |</span><br><span class="line">  +----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><br><span class="line"></span><br><span class="line">失效的第5种情况：</span><br><span class="line">  在where当中索引列使用了函数</span><br><span class="line">  explain select * from emp where lower(ename) = &#x27;smith&#x27;;</span><br><span class="line">  +----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><br><span class="line">  | id | select_type | table | type | possible_keys | key  | key_len | ref  | rows | Extra       |</span><br><span class="line">  +----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><br><span class="line">  |  1 | SIMPLE      | emp   | ALL  | NULL          | NULL | NULL    | NULL |   14 | Using where |</span><br><span class="line">  +----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="索引分类"><a href="#索引分类" class="headerlink" title="索引分类"></a>索引分类</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">单一索引：一个字段上添加索引。</span><br><span class="line">复合索引：两个字段或者更多的字段上添加索引。</span><br><span class="line"></span><br><span class="line">主键索引：主键上添加索引。</span><br><span class="line">唯一性索引：具有unique约束的字段上添加索引。</span><br><span class="line">.....</span><br><span class="line"></span><br><span class="line">注意：唯一性比较弱的字段上添加索引用处不大。</span><br></pre></td></tr></table></figure>
<h1 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h1><blockquote>
<p>什么是视图？</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">视图：站在不同的角度去看待同一份数据。</span><br></pre></td></tr></table></figure>
<h2 id="视图创建和删除"><a href="#视图创建和删除" class="headerlink" title="视图创建和删除"></a>视图创建和删除</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">创建视图对象：</span><br><span class="line">  create view dept2_view as select * from dept2;</span><br><span class="line"></span><br><span class="line">删除视图对象：</span><br><span class="line">  drop view dept2_view;</span><br><span class="line"></span><br><span class="line">注意：只有DQL语句才能以view的形式创建。</span><br><span class="line">  create view view_name as 这里的语句必须是DQL语句;</span><br></pre></td></tr></table></figure>
<h2 id="视图的用途"><a href="#视图的用途" class="headerlink" title="视图的用途"></a>视图的用途</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">《方便，简化开发，利于维护》</span><br><span class="line">我们可以面向视图对象进行增删改查，对视图对象的增删改查，会导致</span><br><span class="line">原表被操作！（视图的特点：通过对视图的操作，会影响到原表数据。）</span><br><span class="line"></span><br><span class="line">//面向视图查询</span><br><span class="line">select * from dept2_view; </span><br><span class="line"></span><br><span class="line">// 面向视图插入</span><br><span class="line">insert into dept2_view(deptno,dname,loc) values(60,&#x27;SALES&#x27;, &#x27;BEIJING&#x27;);</span><br><span class="line"></span><br><span class="line">// 查询原表数据</span><br><span class="line">mysql&gt; select * from dept2;</span><br><span class="line">+--------+------------+----------+</span><br><span class="line">| DEPTNO | DNAME      | LOC      |</span><br><span class="line">+--------+------------+----------+</span><br><span class="line">|     10 | ACCOUNTING | NEW YORK |</span><br><span class="line">|     20 | RESEARCH   | DALLAS   |</span><br><span class="line">|     30 | SALES      | CHICAGO  |</span><br><span class="line">|     40 | OPERATIONS | BOSTON   |</span><br><span class="line">|     60 | SALES      | BEIJING  |</span><br><span class="line">+--------+------------+----------+</span><br><span class="line"></span><br><span class="line">// 面向视图删除</span><br><span class="line">mysql&gt; delete from dept2_view;</span><br><span class="line"></span><br><span class="line">// 查询原表数据</span><br><span class="line">mysql&gt; select * from dept2;</span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line"></span><br><span class="line">假设有一条非常复杂的SQL语句，而这条SQL语句需要在不同的位置上反复使用。</span><br><span class="line">每一次使用这个sql语句的时候都需要重新编写，很长，很麻烦，怎么办？</span><br><span class="line">  可以把这条复杂的SQL语句以视图对象的形式新建。</span><br><span class="line">  在需要编写这条SQL语句的位置直接使用视图对象，可以大大简化开发。</span><br><span class="line">  并且利于后期的维护，因为修改的时候也只需要修改一个位置就行，只需要修改视图对象所映射的SQL语句。</span><br><span class="line"></span><br><span class="line">我们以后面向视图开发的时候，使用视图的时候可以像使用table一样。</span><br><span class="line">可以对视图进行增删改查等操作。视图不是在内存当中，视图对象也是</span><br><span class="line">存储在硬盘上的，不会消失。</span><br><span class="line"></span><br><span class="line">再提醒一下：</span><br><span class="line">  视图对应的语句只能是DQL语句。</span><br><span class="line">  但是视图对象创建完成之后，可以对视图进行增删改查等操作。</span><br><span class="line"></span><br><span class="line">小插曲：</span><br><span class="line">  增删改查，又叫做：CRUD。</span><br><span class="line">  CRUD是在公司中程序员之间沟通的术语。一般我们很少说增删改查。</span><br><span class="line">  一般都说CRUD。</span><br><span class="line"></span><br><span class="line">  C:Create（增）</span><br><span class="line">  R:Retrieve（查：检索）</span><br><span class="line">  U:Update（改）</span><br><span class="line">  D:Delete（删）</span><br></pre></td></tr></table></figure>
<h1 id="DBA常用命令"><a href="#DBA常用命令" class="headerlink" title="DBA常用命令"></a>DBA常用命令</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">重点掌握：</span><br><span class="line">  数据的导入和导出（数据的备份）</span><br><span class="line">  其它命令了解一下即可。</span><br><span class="line"></span><br><span class="line">数据导出？</span><br><span class="line">  注意：在windows的dos命令窗口中：</span><br><span class="line">    mysqldump bjpowernode&gt;D:\bjpowernode.sql -uroot -p123456</span><br><span class="line">  </span><br><span class="line">  可以导出指定的表吗？</span><br><span class="line">    mysqldump bjpowernode emp&gt;D:\bjpowernode.sql -uroot -p123456</span><br><span class="line"></span><br><span class="line">数据导入？</span><br><span class="line">  注意：需要先登录到mysql数据库服务器上。</span><br><span class="line">  然后创建数据库：create database bjpowernode;</span><br><span class="line">  使用数据库：use bjpowernode</span><br><span class="line">  然后初始化数据库：source D:\bjpowernode.sql</span><br></pre></td></tr></table></figure>
<h1 id="数据库设计三范式"><a href="#数据库设计三范式" class="headerlink" title="数据库设计三范式"></a>数据库设计三范式</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">什么是数据库设计范式？</span><br><span class="line">数据库表的设计依据。教你怎么进行数据库表的设计。</span><br><span class="line"></span><br><span class="line">数据库设计范式共有？</span><br><span class="line">3个。</span><br><span class="line">第一范式：要求任何一张表必须有主键，每一个字段原子性不可再分。</span><br><span class="line"></span><br><span class="line">第二范式：建立在第一范式的基础之上，要求所有非主键字段完全依赖主键，</span><br><span class="line">不要产生部分依赖。</span><br><span class="line"></span><br><span class="line">第三范式：建立在第二范式的基础之上，要求所有非主键字段直接依赖主键，</span><br><span class="line">不要产生传递依赖。</span><br><span class="line"></span><br><span class="line">声明：三范式是面试官经常问的，所以一定要熟记在心！</span><br><span class="line"></span><br><span class="line">设计数据库表的时候，按照以上的范式进行，可以避免表中数据的冗余，空间的浪费。</span><br><span class="line"></span><br><span class="line">第一范式</span><br><span class="line">最核心，最重要的范式，所有表的设计都需要满足。</span><br><span class="line">必须有主键，并且每一个字段都是原子性不可再分。</span><br><span class="line"></span><br><span class="line">学生编号 学生姓名 联系方式</span><br><span class="line">------------------------------------------</span><br><span class="line">1001		张三		zs@gmail.com,1359999999</span><br><span class="line">1002		李四		ls@gmail.com,13699999999</span><br><span class="line">1001		王五		ww@163.net,13488888888</span><br><span class="line"></span><br><span class="line">以上是学生表，满足第一范式吗？</span><br><span class="line">  不满足，第一：没有主键。第二：联系方式可以分为邮箱地址和电话</span><br><span class="line"></span><br><span class="line">学生编号(pk) 学生姓名	邮箱地址			联系电话</span><br><span class="line">----------------------------------------------------</span><br><span class="line">1001				张三		zs@gmail.com	1359999999</span><br><span class="line">1002				李四		ls@gmail.com	13699999999</span><br><span class="line">1003				王五		ww@163.net		13488888888</span><br><span class="line"></span><br><span class="line">第二范式：</span><br><span class="line">建立在第一范式的基础之上，</span><br><span class="line">要求所有非主键字段必须完全依赖主键，不要产生部分依赖。</span><br><span class="line"></span><br><span class="line">学生编号 学生姓名 教师编号 教师姓名</span><br><span class="line">----------------------------------------------------</span><br><span class="line">1001			张三		001		王老师</span><br><span class="line">1002			李四		002		赵老师</span><br><span class="line">1003			王五		001		王老师</span><br><span class="line">1001			张三		002		赵老师</span><br><span class="line"></span><br><span class="line">这张表描述了学生和老师的关系：（1个学生可能有多个老师，1个老师有多个学生）</span><br><span class="line">这是非常典型的：多对多关系！</span><br><span class="line"></span><br><span class="line">分析以上的表是否满足第一范式？</span><br><span class="line">  不满足第一范式。</span><br><span class="line"></span><br><span class="line">怎么满足第一范式呢？修改</span><br><span class="line"></span><br><span class="line">学生编号+教师编号(pk)		学生姓名  教师姓名</span><br><span class="line">----------------------------------------------------</span><br><span class="line">1001			001				张三			王老师</span><br><span class="line">1002			002				李四			赵老师</span><br><span class="line">1003			001				王五			王老师</span><br><span class="line">1001			002				张三			赵老师</span><br><span class="line"></span><br><span class="line">学生编号 教师编号，两个字段联合做主键，复合主键（PK: 学生编号+教师编号）</span><br><span class="line">经过修改之后，以上的表满足了第一范式。但是满足第二范式吗？</span><br><span class="line">  不满足，“张三”依赖1001，“王老师”依赖001，显然产生了部分依赖。</span><br><span class="line">  产生部分依赖有什么缺点？</span><br><span class="line">    数据冗余了。空间浪费了。“张三”重复了，“王老师”重复了。</span><br><span class="line"></span><br><span class="line">为了让以上的表满足第二范式，你需要这样设计：</span><br><span class="line">  使用三张表来表示多对多的关系！！！！</span><br><span class="line">  学生表</span><br><span class="line">  学生编号(pk)		学生名字</span><br><span class="line">  ------------------------------------</span><br><span class="line">  1001					张三</span><br><span class="line">  1002					李四</span><br><span class="line">  1003					王五</span><br><span class="line">  </span><br><span class="line">  教师表</span><br><span class="line">  教师编号(pk)		教师姓名</span><br><span class="line">  --------------------------------------</span><br><span class="line">  001					王老师</span><br><span class="line">  002					赵老师</span><br><span class="line"></span><br><span class="line">  学生教师关系表</span><br><span class="line">  id(pk)			学生编号(fk)			教师编号(fk)</span><br><span class="line">  ------------------------------------------------------</span><br><span class="line">  1						1001						001</span><br><span class="line">  2						1002						002</span><br><span class="line">  3						1003						001</span><br><span class="line">  4						1001						002</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">背口诀：</span><br><span class="line">  多对多怎么设计？</span><br><span class="line">    多对多，三张表，关系表两个外键！！！！！！！！！！！！！！！</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">第三范式</span><br><span class="line">第三范式建立在第二范式的基础之上</span><br><span class="line">要求所有非主键字典必须直接依赖主键，不要产生传递依赖。</span><br><span class="line"></span><br><span class="line">学生编号（PK） 学生姓名 班级编号  班级名称</span><br><span class="line">---------------------------------------------------------</span><br><span class="line">  1001				张三		01			一年一班</span><br><span class="line">  1002				李四		02			一年二班</span><br><span class="line">  1003				王五		03			一年三班</span><br><span class="line">  1004				赵六		03			一年三班</span><br><span class="line"></span><br><span class="line">以上表的设计是描述：班级和学生的关系。很显然是1对多关系！</span><br><span class="line">一个教室中有多个学生。</span><br><span class="line"></span><br><span class="line">分析以上表是否满足第一范式？</span><br><span class="line">  满足第一范式，有主键。</span><br><span class="line"></span><br><span class="line">分析以上表是否满足第二范式？</span><br><span class="line">  满足第二范式，因为主键不是复合主键，没有产生部分依赖。主键是单一主键。</span><br><span class="line"></span><br><span class="line">分析以上表是否满足第三范式？</span><br><span class="line">  第三范式要求：不要产生传递依赖！</span><br><span class="line">  一年一班依赖01，01依赖1001，产生了传递依赖。</span><br><span class="line">  不符合第三范式的要求。产生了数据的冗余。</span><br><span class="line"></span><br><span class="line">那么应该怎么设计一对多呢？</span><br><span class="line"></span><br><span class="line">  班级表：一</span><br><span class="line">  班级编号(pk)				班级名称</span><br><span class="line">  ----------------------------------------</span><br><span class="line">  01								一年一班</span><br><span class="line">  02								一年二班</span><br><span class="line">  03								一年三班</span><br><span class="line"></span><br><span class="line">  学生表：多</span><br><span class="line"></span><br><span class="line">  学生编号（PK） 学生姓名 班级编号(fk)</span><br><span class="line">  -------------------------------------------</span><br><span class="line">  1001				张三			01			</span><br><span class="line">  1002				李四			02			</span><br><span class="line">  1003				王五			03			</span><br><span class="line">  1004				赵六			03		</span><br><span class="line">  </span><br><span class="line">  背口诀：</span><br><span class="line">    一对多，两张表，多的表加外键！！！！！！！！！！！！</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="总结表的设计"><a href="#总结表的设计" class="headerlink" title="总结表的设计"></a>总结表的设计</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一对多：</span><br><span class="line">  一对多，两张表，多的表加外键！！！！！！！！！！！！</span><br><span class="line"></span><br><span class="line">多对多：</span><br><span class="line">  多对多，三张表，关系表两个外键！！！！！！！！！！！！！！！</span><br><span class="line"></span><br><span class="line">一对一：</span><br><span class="line">一对一放到一张表中不就行了吗？为啥还要拆分表？</span><br><span class="line">在实际的开发中，可能存在一张表字段太多，太庞大。这个时候要拆分表。</span><br><span class="line">一对一怎么设计？</span><br><span class="line">  没有拆分表之前：一张表</span><br><span class="line">    t_user</span><br><span class="line">    id		login_name		login_pwd		real_name		email				address........</span><br><span class="line">    ---------------------------------------------------------------------------</span><br><span class="line">    1			zhangsan		123				张三				zhangsan@xxx</span><br><span class="line">    2			lisi			123				李四				lisi@xxx</span><br><span class="line">    ...</span><br><span class="line">  </span><br><span class="line">  这种庞大的表建议拆分为两张：</span><br><span class="line">    t_login 登录信息表</span><br><span class="line">    id(pk)		login_name		login_pwd	</span><br><span class="line">    ---------------------------------</span><br><span class="line">    1				zhangsan		123			</span><br><span class="line">    2				lisi			123			</span><br><span class="line"></span><br><span class="line">    t_user 用户详细信息表</span><br><span class="line">    id(pk)		real_name		email				address........	login_id(fk+unique)</span><br><span class="line">    -----------------------------------------------------------------------------------------</span><br><span class="line">    100			张三				zhangsan@xxx								1</span><br><span class="line">    200			李四				lisi@xxx									2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    口诀：一对一，外键唯一！！！！！！！！！！</span><br></pre></td></tr></table></figure>
<h1 id="嘱咐"><a href="#嘱咐" class="headerlink" title="嘱咐"></a>嘱咐</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">数据库设计三范式是理论上的。</span><br><span class="line"></span><br><span class="line">实践和理论有的时候有偏差。</span><br><span class="line"></span><br><span class="line">最终的目的都是为了满足客户的需求，有的时候会拿冗余换执行速度。</span><br><span class="line"></span><br><span class="line">因为在sql当中，表和表之间连接次数越多，效率越低。（笛卡尔积）</span><br><span class="line"></span><br><span class="line">有的时候可能会存在冗余，但是为了减少表的连接次数，这样做也是合理的，</span><br><span class="line">并且对于开发人员来说，sql语句的编写难度也会降低。</span><br><span class="line"></span><br><span class="line">面试的时候把这句话说上：他就不会认为你是初级程序员了！</span><br></pre></td></tr></table></figure>
<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><p>1、取得每个部门最高薪水的人员名称<br>第一步：取得每个部门最高薪水(按照部门编号分组，找出每一组最大值)<br>mysql&gt; select deptno,max(sal) as maxsal from emp group by deptno;<br>+————+————-+<br>| deptno | maxsal  |<br>+————+————-+<br>|     10 | 5000.00 |<br>|     20 | 3000.00 |<br>|     30 | 2850.00 |<br>+————+————-+<br>第二步：将以上的查询结果当做一张临时表t，<br>t和emp表连接，条件：t.deptno = e.deptno and t.maxsal = e.sal<br>select<br>    e.ename, t.*<br>from<br>    emp e<br>join<br>    (select deptno,max(sal) as maxsal from emp group by deptno) t<br>on<br>    t.deptno = e.deptno and t.maxsal = e.sal;</p>
<p>+———-+————+————-+<br>| ename | deptno | maxsal  |<br>+———-+————+————-+<br>| BLAKE |     30 | 2850.00 |<br>| SCOTT |     20 | 3000.00 |<br>| KING  |     10 | 5000.00 |<br>| FORD  |     20 | 3000.00 |<br>+———-+————+————-+</p>
<p>2、哪些人的薪水在部门的平均薪水之上<br>第一步：找出每个部门的平均薪水<br>select deptno,avg(sal) as avgsal from emp group by deptno;<br>+————+——————-+<br>| deptno | avgsal      |<br>+————+——————-+<br>|     10 | 2916.666667 |<br>|     20 | 2175.000000 |<br>|     30 | 1566.666667 |<br>+————+——————-+<br>第二步：将以上查询结果当做t表，t和emp表连接<br>条件：部门编号相同，并且emp的sal大于t表的avgsal<br>select<br>    t.*, e.ename, e.sal<br>from<br>    emp e<br>join<br>    (select deptno,avg(sal) as avgsal from emp group by deptno) t<br>on<br>    e.deptno = t.deptno and e.sal &gt; t.avgsal;<br>+————+——————-+———-+————-+<br>| deptno | avgsal      | ename | sal     |<br>+————+——————-+———-+————-+<br>|     30 | 1566.666667 | ALLEN | 1600.00 |<br>|     20 | 2175.000000 | JONES | 2975.00 |<br>|     30 | 1566.666667 | BLAKE | 2850.00 |<br>|     20 | 2175.000000 | SCOTT | 3000.00 |<br>|     10 | 2916.666667 | KING  | 5000.00 |<br>|     20 | 2175.000000 | FORD  | 3000.00 |<br>+————+——————-+———-+————-+</p>
<p>3、取得部门中（所有人的）平均的薪水等级</p>
<pre><code>平均的薪水等级：先计算每一个薪水的等级，然后找出薪水等级的平均值。

平均薪水的等级：先计算平均薪水，然后找出每个平均薪水的等级值。

第一步：找出每个人的薪水等级
emp e和salgrade s表连接。
连接条件：e.sal between s.losal and s.hisal

select 
    e.ename,e.sal,e.deptno,s.grade
from
    emp e
join
    salgrade s
on
    e.sal between s.losal and s.hisal;

+--------+---------+--------+-------+
| ename  | sal     | deptno | grade |
+--------+---------+--------+-------+
| CLARK  | 2450.00 |     10 |     4 |
| KING   | 5000.00 |     10 |     5 |
| MILLER | 1300.00 |     10 |     2 |

| SMITH  |  800.00 |     20 |     1 |
| ADAMS  | 1100.00 |     20 |     1 |
| SCOTT  | 3000.00 |     20 |     4 |
| FORD   | 3000.00 |     20 |     4 |
| JONES  | 2975.00 |     20 |     4 |

| MARTIN | 1250.00 |     30 |     2 |
| TURNER | 1500.00 |     30 |     3 |
| BLAKE  | 2850.00 |     30 |     4 |
| ALLEN  | 1600.00 |     30 |     3 |
| JAMES  |  950.00 |     30 |     1 |
| WARD   | 1250.00 |     30 |     2 |
+--------+---------+--------+-------+

第二步：基于以上的结果继续按照deptno分组，求grade的平均值。
select 
    e.deptno,avg(s.grade)
from
    emp e
join
    salgrade s
on
    e.sal between s.losal and s.hisal
group by
    e.deptno;

+--------+--------------+
| deptno | avg(s.grade) |
+--------+--------------+
|     10 |       3.6667 |
|     20 |       2.8000 |
|     30 |       2.5000 |
+--------+--------------+
</code></pre><p>4、不准用组函数（Max ），取得最高薪水</p>
<p>第一种：sal降序，limit 1<br>select ename,sal from emp order by sal desc limit 1;<br>+———-+————-+<br>| ename | sal     |<br>+———-+————-+<br>| KING  | 5000.00 |<br>+———-+————-+</p>
<p>第二种方案：select max(sal) from emp;</p>
<p>第三种方案：表的自连接<br>select sal from emp where sal not in(select distinct a.sal from emp a join emp b on a.sal &lt; b.sal);</p>
<p>+————-+<br>| sal     |<br>+————-+<br>| 5000.00 |<br>+————-+</p>
<p>select<br>    distinct a.sal<br>from<br>    emp a<br>join<br>    emp b<br>on<br>    a.sal &lt; b.sal</p>
<p>a表<br>+————-+<br>| sal     |<br>+————-+<br>|  800.00 |<br>| 1600.00 |<br>| 1250.00 |<br>| 2975.00 |<br>| 1250.00 |<br>| 2850.00 |<br>| 2450.00 |<br>| 3000.00 |<br>| 5000.00 |<br>| 1500.00 |<br>| 1100.00 |<br>|  950.00 |<br>| 3000.00 |<br>| 1300.00 |<br>+————-+</p>
<p>b表<br>+————-+<br>| sal     |<br>+————-+<br>|  800.00 |<br>| 1600.00 |<br>| 1250.00 |<br>| 2975.00 |<br>| 1250.00 |<br>| 2850.00 |<br>| 2450.00 |<br>| 3000.00 |<br>| 5000.00 |<br>| 1500.00 |<br>| 1100.00 |<br>|  950.00 |<br>| 3000.00 |<br>| 1300.00 |<br>+————-+</p>
<p>5、取得平均薪水最高的部门的部门编号</p>
<p>第一种方案：降序取第一个。</p>
<pre><code>第一步：找出每个部门的平均薪水
    select deptno,avg(sal) as avgsal from emp group by deptno;
    +--------+-------------+
    | deptno | avgsal      |
    +--------+-------------+
    |     10 | 2916.666667 |
    |     20 | 2175.000000 |
    |     30 | 1566.666667 |
    +--------+-------------+
第二步：降序选第一个。
    select deptno,avg(sal) as avgsal from emp group by deptno order by avgsal desc limit 1;
    +--------+-------------+
    | deptno | avgsal      |
    +--------+-------------+
    |     10 | 2916.666667 |
    +--------+-------------+
</code></pre><p>第二种方案：max</p>
<pre><code>第一步：找出每个部门的平均薪水

select deptno,avg(sal) as avgsal from emp group by deptno;
+--------+-------------+
| deptno | avgsal      |
+--------+-------------+
|     10 | 2916.666667 |
|     20 | 2175.000000 |
|     30 | 1566.666667 |
+--------+-------------+

第二步：找出以上结果中avgsal最大的值。
select max(t.avgsal) from (select avg(sal) as avgsal from emp group by deptno) t;
+---------------+
| max(t.avgsal) |
+---------------+
|   2916.666667 |
+---------------+

第三步：
select 
    deptno,avg(sal) as avgsal 
from 
    emp 
group by 
    deptno
having
    avgsal = (select max(t.avgsal) from (select avg(sal) as avgsal from emp group by deptno) t);

+--------+-------------+
| deptno | avgsal      |
+--------+-------------+
|     10 | 2916.666667 |
+--------+-------------+
</code></pre><p>6、取得平均薪水最高的部门的部门名称</p>
<p>select<br>    d.dname,avg(e.sal) as avgsal<br>from<br>    emp e<br>join<br>    dept d<br>on<br>    e.deptno = d.deptno<br>group by<br>    d.dname<br>order by<br>    avgsal desc<br>limit<br>    1;</p>
<p>+——————+——————-+<br>| dname      | avgsal      |<br>+——————+——————-+<br>| ACCOUNTING | 2916.666667 |<br>+——————+——————-+</p>
<p>7、求平均薪水的等级最低的部门的部门名称</p>
<p>平均薪水是800<br>平均薪水是900<br>那么他俩都是1级别。</p>
<p>第一步：找出每个部门的平均薪水<br>select deptno,avg(sal) as avgsal from emp group by deptno;<br>+————+——————-+<br>| deptno | avgsal      |<br>+————+——————-+<br>|     10 | 2916.666667 |<br>|     20 | 2175.000000 |<br>|     30 | 1566.666667 |<br>+————+——————-+</p>
<p>第二步：找出每个部门的平均薪水的等级<br>以上t表和salgrade表连接，条件：t.avgsal between s.losal and s.hisal</p>
<p>select<br>    t.*,s.grade<br>from<br>    (select d.dname,avg(sal) as avgsal from emp e join dept d on e.deptno = d.deptno group by d.dname) t<br>join<br>    salgrade s<br>on<br>    t.avgsal between s.losal and s.hisal;</p>
<p>+——————+——————-+———-+<br>| dname      | avgsal      | grade |<br>+——————+——————-+———-+<br>| SALES      | 1566.666667 |     3 |<br>| ACCOUNTING | 2916.666667 |     4 |<br>| RESEARCH   | 2175.000000 |     4 |<br>+——————+——————-+———-+</p>
<p>select<br>    t.*,s.grade<br>from<br>    (select d.dname,avg(sal) as avgsal from emp e join dept d on e.deptno = d.deptno group by d.dname) t<br>join<br>    salgrade s<br>on<br>    t.avgsal between s.losal and s.hisal<br>where<br>    s.grade = (select grade from salgrade where (select avg(sal) as avgsal from emp group by deptno order by avgsal asc limit 1) between losal and hisal);</p>
<p>+———-+——————-+———-+<br>| dname | avgsal      | grade |<br>+———-+——————-+———-+<br>| SALES | 1566.666667 |     3 |<br>+———-+——————-+———-+</p>
<p>抛开之前的，最低等级你怎么着？<br>    平均薪水最低的对应的等级一定是最低的.<br>    select avg(sal) as avgsal from emp group by deptno order by avgsal asc limit 1;<br>    +——————-+<br>    | avgsal      |<br>    +——————-+<br>    | 1566.666667 |<br>    +——————-+</p>
<pre><code>select grade from salgrade where (select avg(sal) as avgsal from emp group by deptno order by avgsal asc limit 1) between losal and hisal;
+-------+
| grade |
+-------+
|     3 |
+-------+
</code></pre><p>8、取得比普通员工(员工代码没有在 mgr 字段上出现的) 的最高薪水还要高的领导人姓名</p>
<pre><code>比“普通员工的最高薪水”还要高的一定是领导！
    没毛病！！！！
</code></pre><p>mysql&gt; select distinct mgr from emp where mgr is not null;<br>+———+<br>| mgr  |<br>+———+<br>| 7902 |<br>| 7698 |<br>| 7839 |<br>| 7566 |<br>| 7788 |<br>| 7782 |<br>+———+<br>员工编号没有在以上范围内的都是普通员工。</p>
<p>第一步：找出普通员工的最高薪水！<br>not in在使用的时候，后面小括号中记得排除NULL。<br>select max(sal) from emp where empno not in(select distinct mgr from emp where mgr is not null);<br>+—————+<br>| max(sal) |<br>+—————+<br>|  1600.00 |<br>+—————+</p>
<p>第二步：找出高于1600的<br>select ename,sal from emp where sal &gt; (select max(sal) from emp where empno not in(select distinct mgr from emp where mgr is not null));<br>+———-+————-+<br>| ename | sal     |<br>+———-+————-+<br>| JONES | 2975.00 |<br>| BLAKE | 2850.00 |<br>| CLARK | 2450.00 |<br>| SCOTT | 3000.00 |<br>| KING  | 5000.00 |<br>| FORD  | 3000.00 |<br>+———-+————-+</p>
<p>9、取得薪水最高的前五名员工<br>select ename,sal from emp order by sal desc limit 5;<br>+———-+————-+<br>| ename | sal     |<br>+———-+————-+<br>| KING  | 5000.00 |<br>| SCOTT | 3000.00 |<br>| FORD  | 3000.00 |<br>| JONES | 2975.00 |<br>| BLAKE | 2850.00 |<br>+———-+————-+</p>
<p>10、取得薪水最高的第六到第十名员工<br>select ename,sal from emp order by sal desc limit 5, 5;<br>+————+————-+<br>| ename  | sal     |<br>+————+————-+<br>| CLARK  | 2450.00 |<br>| ALLEN  | 1600.00 |<br>| TURNER | 1500.00 |<br>| MILLER | 1300.00 |<br>| MARTIN | 1250.00 |<br>+————+————-+</p>
<p>11、取得最后入职的 5 名员工<br>日期也可以降序，升序。</p>
<pre><code>select ename,hiredate from emp order by hiredate desc limit 5;

+--------+------------+
| ename  | hiredate   |
+--------+------------+
| ADAMS  | 1987-05-23 |
| SCOTT  | 1987-04-19 |
| MILLER | 1982-01-23 |
| FORD   | 1981-12-03 |
| JAMES  | 1981-12-03 |
+--------+------------+
</code></pre><p>12、取得每个薪水等级有多少员工<br>分组count</p>
<p>第一步：找出每个员工的薪水等级<br>select<br>    e.ename,e.sal,s.grade<br>from<br>    emp e<br>join<br>    salgrade s<br>on<br>    e.sal between s.losal and s.hisal;<br>+————+————-+———-+<br>| ename  | sal     | grade |<br>+————+————-+———-+<br>| SMITH  |  800.00 |     1 |<br>| ALLEN  | 1600.00 |     3 |<br>| WARD   | 1250.00 |     2 |<br>| JONES  | 2975.00 |     4 |<br>| MARTIN | 1250.00 |     2 |<br>| BLAKE  | 2850.00 |     4 |<br>| CLARK  | 2450.00 |     4 |<br>| SCOTT  | 3000.00 |     4 |<br>| KING   | 5000.00 |     5 |<br>| TURNER | 1500.00 |     3 |<br>| ADAMS  | 1100.00 |     1 |<br>| JAMES  |  950.00 |     1 |<br>| FORD   | 3000.00 |     4 |<br>| MILLER | 1300.00 |     2 |<br>+————+————-+———-+</p>
<p>第二步：继续按照grade分组统计数量<br>select<br>    s.grade ,count(*)<br>from<br>    emp e<br>join<br>    salgrade s<br>on<br>    e.sal between s.losal and s.hisal<br>group by<br>    s.grade;</p>
<p>+———-+—————+<br>| grade | count(*) |<br>+———-+—————+<br>|     1 |        3 |<br>|     2 |        3 |<br>|     3 |        2 |<br>|     4 |        5 |<br>|     5 |        1 |<br>+———-+—————+</p>
<p>13、面试题：<br>有 3 个表 S(学生表)，C（课程表），SC（学生选课表）<br>S（SNO，SNAME）代表（学号，姓名）<br>C（CNO，CNAME，CTEACHER）代表（课号，课名，教师）<br>SC（SNO，CNO，SCGRADE）代表（学号，课号，成绩）<br>问题：<br>1，找出没选过“黎明”老师的所有学生姓名。<br>2，列出 2 门以上（含2 门）不及格学生姓名及平均成绩。<br>3，即学过 1 号课程又学过 2 号课所有学生的姓名。</p>
<p>14、列出所有员工及领导的姓名<br>select<br>    a.ename ‘员工’, b.ename ‘领导’<br>from<br>    emp a<br>left join<br>    emp b<br>on<br>    a.mgr = b.empno;</p>
<p>+————+———-+<br>| 员工   | 领导    |<br>+————+———-+<br>| SMITH  | FORD  |<br>| ALLEN  | BLAKE |<br>| WARD   | BLAKE |<br>| JONES  | KING  |<br>| MARTIN | BLAKE |<br>| BLAKE  | KING  |<br>| CLARK  | KING  |<br>| SCOTT  | JONES |<br>| KING   | NULL  |<br>| TURNER | BLAKE |<br>| ADAMS  | SCOTT |<br>| JAMES  | BLAKE |<br>| FORD   | JONES |<br>| MILLER | CLARK |<br>+————+———-+</p>
<p>15、列出受雇日期早于其直接上级的所有员工的编号,姓名,部门名称<br>emp a 员工表<br>emp b 领导表<br>a.mgr = b.empno and a.hiredate &lt; b.hiredate</p>
<p>select<br>    a.ename ‘员工’, a.hiredate, b.ename ‘领导’, b.hiredate, d.dname<br>from<br>    emp a<br>join<br>    emp b<br>on<br>    a.mgr = b.empno<br>join<br>    dept d<br>on<br>    a.deptno = d.deptno<br>where<br>     a.hiredate &lt; b.hiredate;</p>
<p>+———-+——————+———-+——————+——————+<br>| 员工     | hiredate   | 领导    | hiredate   | dname      |<br>+———-+——————+———-+——————+——————+<br>| CLARK | 1981-06-09 | KING  | 1981-11-17 | ACCOUNTING |<br>| SMITH | 1980-12-17 | FORD  | 1981-12-03 | RESEARCH   |<br>| JONES | 1981-04-02 | KING  | 1981-11-17 | RESEARCH   |<br>| ALLEN | 1981-02-20 | BLAKE | 1981-05-01 | SALES      |<br>| WARD  | 1981-02-22 | BLAKE | 1981-05-01 | SALES      |<br>| BLAKE | 1981-05-01 | KING  | 1981-11-17 | SALES      |<br>+———-+——————+———-+——————+——————+</p>
<p>16、 列出部门名称和这些部门的员工信息, 同时列出那些没有员工的部门</p>
<p>select<br>    e.*,d.dname<br>from<br>    emp e<br>right join<br>    dept d<br>on<br>    e.deptno = d.deptno;</p>
<p>+———-+————+—————-+———+——————+————-+————-+————+——————+<br>| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO | dname      |<br>+———-+————+—————-+———+——————+————-+————-+————+——————+<br>|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |    NULL |     10 | ACCOUNTING |<br>|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000.00 |    NULL |     10 | ACCOUNTING |<br>|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |    NULL |     10 | ACCOUNTING |<br>|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |    NULL |     20 | RESEARCH   |<br>|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 2975.00 |    NULL |     20 | RESEARCH   |<br>|  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |    NULL |     20 | RESEARCH   |<br>|  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |    NULL |     20 | RESEARCH   |<br>|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |    NULL |     20 | RESEARCH   |<br>|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 | SALES      |<br>|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 | SALES      |<br>|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 | SALES      |<br>|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 2850.00 |    NULL |     30 | SALES      |<br>|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 | SALES      |<br>|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |    NULL |     30 | SALES      |<br>|  NULL | NULL   | NULL      | NULL | NULL       |    NULL |    NULL |   NULL | OPERATIONS |<br>+———-+————+—————-+———+——————+————-+————-+————+——————+</p>
<p>17、列出至少有 5 个员工的所有部门<br>按照部门编号分组，计数，筛选出 &gt;= 5</p>
<p>select<br>    deptno<br>from<br>    emp<br>group by<br>    deptno<br>having<br>    count(*) &gt;= 5;</p>
<p>+————+<br>| deptno |<br>+————+<br>|     20 |<br>|     30 |<br>+————+</p>
<p>18、列出薪金比”SMITH” 多的所有员工信息</p>
<p>select ename,sal from emp where sal &gt; (select sal from emp where ename = ‘SMITH’);<br>+————+————-+<br>| ename  | sal     |<br>+————+————-+<br>| ALLEN  | 1600.00 |<br>| WARD   | 1250.00 |<br>| JONES  | 2975.00 |<br>| MARTIN | 1250.00 |<br>| BLAKE  | 2850.00 |<br>| CLARK  | 2450.00 |<br>| SCOTT  | 3000.00 |<br>| KING   | 5000.00 |<br>| TURNER | 1500.00 |<br>| ADAMS  | 1100.00 |<br>| JAMES  |  950.00 |<br>| FORD   | 3000.00 |<br>| MILLER | 1300.00 |<br>+————+————-+</p>
<p>19、 列出所有”CLERK”( 办事员) 的姓名及其部门名称, 部门的人数<br>select ename,job from emp where job = ‘CLERK’;<br>+————+———-+<br>| ename  | job   |<br>+————+———-+<br>| SMITH  | CLERK |<br>| ADAMS  | CLERK |<br>| JAMES  | CLERK |<br>| MILLER | CLERK |<br>+————+———-+</p>
<p>select<br>    e.ename,e.job,d.dname<br>from<br>    emp e<br>join<br>    dept d<br>on<br>    e.deptno = d.deptno<br>where<br>    e.job = ‘CLERK’;</p>
<p>+————+———-+——————+<br>| ename  | job   | dname      |<br>+————+———-+——————+<br>| MILLER | CLERK | ACCOUNTING |<br>| SMITH  | CLERK | RESEARCH   |<br>| ADAMS  | CLERK | RESEARCH   |<br>| JAMES  | CLERK | SALES      |<br>+————+———-+——————+</p>
<p>select<br>    e.ename,e.job,d.dname,d.deptno<br>from<br>    emp e<br>join<br>    dept d<br>on<br>    e.deptno = d.deptno<br>where<br>    e.job = ‘CLERK’;</p>
<p>+————+———-+——————+————+<br>| ename  | job   | dname      | deptno |<br>+————+———-+——————+————+<br>| MILLER | CLERK | ACCOUNTING |     10 |<br>| SMITH  | CLERK | RESEARCH   |     20 |<br>| ADAMS  | CLERK | RESEARCH   |     20 |<br>| JAMES  | CLERK | SALES      |     30 |<br>+————+———-+——————+————+</p>
<p>//每个部门的人数？<br>select deptno, count(*) as deptcount from emp group by deptno;<br>+————+—————-+<br>| deptno | deptcount |<br>+————+—————-+<br>|     10 |         3 |<br>|     20 |         5 |<br>|     30 |         6 |<br>+————+—————-+</p>
<p>select<br>    t1.<em>,t2.deptcount<br>from<br>    (select<br>        e.ename,e.job,d.dname,d.deptno<br>    from<br>        emp e<br>    join<br>        dept d<br>    on<br>        e.deptno = d.deptno<br>    where<br>        e.job = ‘CLERK’) t1<br>join<br>    (select deptno, count(</em>) as deptcount from emp group by deptno) t2<br>on<br>    t1.deptno = t2.deptno;</p>
<p>+————+———-+——————+————+—————-+<br>| ename  | job   | dname      | deptno | deptcount |<br>+————+———-+——————+————+—————-+<br>| MILLER | CLERK | ACCOUNTING |     10 |         3 |<br>| SMITH  | CLERK | RESEARCH   |     20 |         5 |<br>| ADAMS  | CLERK | RESEARCH   |     20 |         5 |<br>| JAMES  | CLERK | SALES      |     30 |         6 |<br>+————+———-+——————+————+—————-+</p>
<p>20、列出最低薪金大于 1500 的各种工作及从事此工作的全部雇员人数<br>按照工作岗位分组求最小值。<br>select job,count(*) from emp group by job having min(sal) &gt; 1500;</p>
<p>+—————-+—————+<br>| job       | count(*) |<br>+—————-+—————+<br>| ANALYST   |        2 |<br>| MANAGER   |        3 |<br>| PRESIDENT |        1 |<br>+—————-+—————+</p>
<p>21、列出在部门”SALES”&lt; 销售部&gt; 工作的员工的姓名, 假定不知道销售部的部门编号.</p>
<p>select ename from emp where deptno = (select deptno from dept where dname = ‘SALES’);</p>
<p>+————+<br>| ename  |<br>+————+<br>| ALLEN  |<br>| WARD   |<br>| MARTIN |<br>| BLAKE  |<br>| TURNER |<br>| JAMES  |<br>+————+</p>
<p>22、列出薪金高于公司平均薪金的所有员工, 所在部门, 上级领导, 雇员的工资等级.</p>
<p>select<br>    e.ename ‘员工’,d.dname,l.ename ‘领导’,s.grade<br>from<br>    emp e<br>join<br>    dept d<br>on<br>    e.deptno = d.deptno<br>left join<br>    emp l<br>on<br>    e.mgr = l.empno<br>join<br>    salgrade s<br>on<br>    e.sal between s.losal and s.hisal<br>where<br>    e.sal &gt; (select avg(sal) from emp);</p>
<p>+———-+——————+———-+———-+<br>| 员工     | dname      | 领导    | grade |<br>+———-+——————+———-+———-+<br>| JONES | RESEARCH   | KING  |     4 |<br>| BLAKE | SALES      | KING  |     4 |<br>| CLARK | ACCOUNTING | KING  |     4 |<br>| SCOTT | RESEARCH   | JONES |     4 |<br>| KING  | ACCOUNTING | NULL  |     5 |<br>| FORD  | RESEARCH   | JONES |     4 |<br>+———-+——————+———-+———-+</p>
<p>23、 列出与”SCOTT” 从事相同工作的所有员工及部门名称<br>select job from emp where ename = ‘SCOTT’;<br>+————-+<br>| job     |<br>+————-+<br>| ANALYST |<br>+————-+</p>
<p>select<br>    e.ename,e.job,d.dname<br>from<br>    emp e<br>join<br>    dept d<br>on<br>    e.deptno = d.deptno<br>where<br>    e.job = (select job from emp where ename = ‘SCOTT’)<br>and<br>    e.ename &lt;&gt; ‘SCOTT’;</p>
<p>+———-+————-+—————+<br>| ename | job     | dname    |<br>+———-+————-+—————+<br>| FORD  | ANALYST | RESEARCH |<br>+———-+————-+—————+</p>
<p>24、列出薪金等于部门 30 中员工的薪金的其他员工的姓名和薪金.<br>select distinct sal from emp where deptno = 30;<br>+————-+<br>| sal     |<br>+————-+<br>| 1600.00 |<br>| 1250.00 |<br>| 2850.00 |<br>| 1500.00 |<br>|  950.00 |<br>+————-+</p>
<p>select<br>    ename,sal<br>from<br>    emp<br>where<br>    sal in(select distinct sal from emp where deptno = 30)<br>and<br>    deptno &lt;&gt; 30;</p>
<p>Empty set (0.00 sec)</p>
<p>25、列出薪金高于在部门 30 工作的所有员工的薪金的员工姓名和薪金. 部门名称<br>select max(sal) from emp where deptno = 30;<br>+—————+<br>| max(sal) |<br>+—————+<br>|  2850.00 |<br>+—————+</p>
<p>select<br>    e.ename,e.sal,d.dname<br>from<br>    emp e<br>join<br>    dept d<br>on<br>    e.deptno = d.deptno<br>where<br>    e.sal &gt; (select max(sal) from emp where deptno = 30);</p>
<p>+———-+————-+——————+<br>| ename | sal     | dname      |<br>+———-+————-+——————+<br>| KING  | 5000.00 | ACCOUNTING |<br>| JONES | 2975.00 | RESEARCH   |<br>| SCOTT | 3000.00 | RESEARCH   |<br>| FORD  | 3000.00 | RESEARCH   |<br>+———-+————-+——————+</p>
<p>26、列出在每个部门工作的员工数量, 平均工资和平均服务期限</p>
<p>没有员工的部门，部门人数是0</p>
<p>select<br>    d.deptno, count(e.ename) ecount,ifnull(avg(e.sal),0) as avgsal, ifnull(avg(timestampdiff(YEAR, hiredate, now())), 0) as avgservicetime<br>from<br>    emp e<br>right join<br>    dept d<br>on<br>    e.deptno = d.deptno<br>group by<br>    d.deptno;</p>
<p>+————+————+——————-+————————+<br>| deptno | ecount | avgsal      | avgservicetime |<br>+————+————+——————-+————————+<br>|     10 |      3 | 2916.666667 |        38.0000 |<br>|     20 |      5 | 2175.000000 |        35.8000 |<br>|     30 |      6 | 1566.666667 |        38.3333 |<br>|     40 |      0 |    0.000000 |         0.0000 |<br>+————+————+——————-+————————+</p>
<p>在mysql当中怎么计算两个日期的“年差”，差了多少年？<br>    TimeStampDiff(间隔类型, 前一个日期, 后一个日期)</p>
<pre><code>timestampdiff(YEAR, hiredate, now())

间隔类型：
    SECOND   秒，
    MINUTE   分钟，
    HOUR   小时，
    DAY   天，
    WEEK   星期
    MONTH   月，
    QUARTER   季度，
    YEAR   年
</code></pre><p>27、 列出所有员工的姓名、部门名称和工资。<br>select<br>    e.ename,d.dname,e.sal<br>from<br>    emp e<br>join<br>    dept d<br>on<br>    e.deptno = d.deptno;</p>
<p>+————+——————+————-+<br>| ename  | dname      | sal     |<br>+————+——————+————-+<br>| CLARK  | ACCOUNTING | 2450.00 |<br>| KING   | ACCOUNTING | 5000.00 |<br>| MILLER | ACCOUNTING | 1300.00 |<br>| SMITH  | RESEARCH   |  800.00 |<br>| JONES  | RESEARCH   | 2975.00 |<br>| SCOTT  | RESEARCH   | 3000.00 |<br>| ADAMS  | RESEARCH   | 1100.00 |<br>| FORD   | RESEARCH   | 3000.00 |<br>| ALLEN  | SALES      | 1600.00 |<br>| WARD   | SALES      | 1250.00 |<br>| MARTIN | SALES      | 1250.00 |<br>| BLAKE  | SALES      | 2850.00 |<br>| TURNER | SALES      | 1500.00 |<br>| JAMES  | SALES      |  950.00 |<br>+————+——————+————-+</p>
<p>28、列出所有部门的详细信息和人数</p>
<p>select<br>    d.deptno,d.dname,d.loc,count(e.ename)<br>from<br>    emp e<br>right join<br>    dept d<br>on<br>    e.deptno = d.deptno<br>group by<br>    d.deptno,d.dname,d.loc;</p>
<p>+————+——————+—————+————————+<br>| deptno | dname      | loc      | count(e.ename) |<br>+————+——————+—————+————————+<br>|     10 | ACCOUNTING | NEW YORK |              3 |<br>|     20 | RESEARCH   | DALLAS   |              5 |<br>|     30 | SALES      | CHICAGO  |              6 |<br>|     40 | OPERATIONS | BOSTON   |              0 |<br>+————+——————+—————+————————+</p>
<p>29、列出各种工作的最低工资及从事此工作的雇员姓名<br>select<br>    job,min(sal) as minsal<br>from<br>    emp<br>group by<br>    job;</p>
<p>+—————-+—————+<br>| job       | minsal        |<br>+—————-+—————+<br>| ANALYST   |  3000.00 |<br>| CLERK     |   800.00 |<br>| MANAGER   |  2450.00 |<br>| PRESIDENT |  5000.00 |<br>| SALESMAN  |  1250.00 |<br>+—————-+—————+</p>
<p>emp e和以上t连接</p>
<p>select<br>    e.ename,t.*<br>from<br>    emp e<br>join<br>    (select<br>        job,min(sal) as minsal<br>    from<br>        emp<br>    group by<br>        job) t<br>on<br>    e.job = t.job and e.sal = t.minsal;</p>
<p>+————+—————-+————-+<br>| ename  | job       | minsal  |<br>+————+—————-+————-+<br>| SMITH  | CLERK     |  800.00 |<br>| WARD   | SALESMAN  | 1250.00 |<br>| MARTIN | SALESMAN  | 1250.00 |<br>| CLARK  | MANAGER   | 2450.00 |<br>| SCOTT  | ANALYST   | 3000.00 |<br>| KING   | PRESIDENT | 5000.00 |<br>| FORD   | ANALYST   | 3000.00 |<br>+————+—————-+————-+</p>
<p>30、列出各个部门的 MANAGER( 领导) 的最低薪金<br>select<br>    deptno, min(sal)<br>from<br>    emp<br>where<br>    job = ‘MANAGER’<br>group by<br>    deptno;</p>
<p>+————+—————+<br>| deptno | min(sal) |<br>+————+—————+<br>|     10 |  2450.00 |<br>|     20 |  2975.00 |<br>|     30 |  2850.00 |<br>+————+—————+</p>
<p>31、列出所有员工的 年工资, 按 年薪从低到高排序</p>
<p>select<br>    ename,(sal + ifnull(comm,0)) * 12 as yearsal<br>from<br>    emp<br>order by<br>    yearsal asc;</p>
<p>+————+—————+<br>| ename  | yearsal  |<br>+————+—————+<br>| SMITH  |  9600.00 |<br>| JAMES  | 11400.00 |<br>| ADAMS  | 13200.00 |<br>| MILLER | 15600.00 |<br>| TURNER | 18000.00 |<br>| WARD   | 21000.00 |<br>| ALLEN  | 22800.00 |<br>| CLARK  | 29400.00 |<br>| MARTIN | 31800.00 |<br>| BLAKE  | 34200.00 |<br>| JONES  | 35700.00 |<br>| FORD   | 36000.00 |<br>| SCOTT  | 36000.00 |<br>| KING   | 60000.00 |<br>+————+—————+</p>
<p>32、求出员工领导的薪水超过3000的员工名称与领导</p>
<p>select<br>    a.ename ‘员工’,b.ename ‘领导’<br>from<br>    emp a<br>join<br>    emp b<br>on<br>    a.mgr = b.empno<br>where<br>    b.sal &gt; 3000;</p>
<p>+———-+———+<br>| 员工  | 领导   |<br>+———-+———+<br>| JONES | KING |<br>| BLAKE | KING |<br>| CLARK | KING |<br>+———-+———+</p>
<p>33、求出部门名称中, 带’S’字符的部门员工的工资合计、部门人数</p>
<p>select<br>    d.deptno,d.dname,d.loc,count(e.ename),ifnull(sum(e.sal),0) as sumsal<br>from<br>    emp e<br>right join<br>    dept d<br>on<br>    e.deptno = d.deptno<br>where<br>    d.dname like ‘%S%’<br>group by<br>    d.deptno,d.dname,d.loc;</p>
<p>+————+——————+————-+————————+—————+<br>| deptno | dname      | loc     | count(e.ename) | sumsal   |<br>+————+——————+————-+————————+—————+<br>|     20 | RESEARCH   | DALLAS  |              5 | 10875.00 |<br>|     30 | SALES      | CHICAGO |              6 |  9400.00 |<br>|     40 | OPERATIONS | BOSTON  |              0 |     0.00 |<br>+————+——————+————-+————————+—————+</p>
<p>34、给任职日期超过 30 年的员工加薪 10%.</p>
<p>update emp set sal = sal * 1.1 where timestampdiff(YEAR, hiredate, now()) &gt; 30;</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
  </entry>
  <entry>
    <title>Html和CSS</title>
    <url>/posts/7ba2.html</url>
    <content><![CDATA[<meta name="referrer" content="no-referrer" />

<h1 id="前端基础——三件套"><a href="#前端基础——三件套" class="headerlink" title="前端基础——三件套"></a>前端基础——三件套</h1><p>[TOC]</p>
<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>Zeal64位下载<a href="https://wwr.lanzoui.com/iQhP5urk3gb">https://wwr.lanzoui.com/iQhP5urk3gb</a><br>Html5<a href="http://search.bilibili.com/all?from_source=webcommentline_search&amp;keyword=文档下载">文档下载</a><a href="https://wwr.lanzoui.com/iqAiiurklfi">https://wwr.lanzoui.com/iqAiiurklfi</a><br>CSS3文档下载<a href="https://wwr.lanzoui.com/iA86gurklgj">https://wwr.lanzoui.com/iA86gurklgj</a><br>文档下载完解压，将html.docset和css.docset放到Zeal-x64/docset文件夹下<br>启动zeal.exe程序就可以直接使用了</p>
<span id="more"></span>
<h3 id="1、客户端"><a href="#1、客户端" class="headerlink" title="1、客户端"></a>1、客户端</h3><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209270915279.png" alt="image-20220927091521117"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209270919459.png" alt="image-20220927091901368"></p>
<h3 id="2、网页"><a href="#2、网页" class="headerlink" title="2、网页"></a>2、网页</h3><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209270919455.png" alt="image-20220927091938369"></p>
<h3 id="3、历史"><a href="#3、历史" class="headerlink" title="3、历史"></a>3、历史</h3><p>蒂姆·伯纳斯李爵士—- 万维网的发明人</p>
<p>1991年8月6日，世界上第一个服务器和第一个网站在欧洲核子研究中心上线。</p>
<p>第一个网站：<a href="http://info.cern.ch/hypertext/WWW/TheProject.html">http://info.cern.ch/hypertext/WWW/TheProject.html</a></p>
<h3 id="4、浏览器和网页"><a href="#4、浏览器和网页" class="headerlink" title="4、浏览器和网页"></a>4、浏览器和网页</h3><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209270931932.png" alt="image-20220927093157864"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209270932340.png" alt="image-20220927093216263"></p>
<h3 id="5、浏览器的问题"><a href="#5、浏览器的问题" class="headerlink" title="5、浏览器的问题"></a>5、浏览器的问题</h3><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209270934688.png" alt="image-20220927093439625"></p>
<p>不同浏览器可能解析出来的页面不一样</p>
<h3 id="6、W3C的建立"><a href="#6、W3C的建立" class="headerlink" title="6、W3C的建立"></a>6、W3C的建立</h3><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209270936860.png" alt="image-20220927093619796"></p>
<h3 id="7、网页的结构"><a href="#7、网页的结构" class="headerlink" title="7、网页的结构"></a>7、网页的结构</h3><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209270943960.png" alt="image-20220927094309891"></p>
<h4 id="1、结构、表现、行为"><a href="#1、结构、表现、行为" class="headerlink" title="1、结构、表现、行为"></a>1、结构、表现、行为</h4><ol>
<li>结构<ul>
<li>HTML用于描述页面的结构</li>
</ul>
</li>
<li>表现<ul>
<li>CSS用于控制页面中元素的样式</li>
</ul>
</li>
<li>行为<ul>
<li>JavaScript用于响应用户操作</li>
</ul>
</li>
</ol>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209270947386.png" alt="image-20220927094750278"></p>
<h2 id="二、HTML"><a href="#二、HTML" class="headerlink" title="二、HTML"></a>二、HTML</h2><p>HTML：<strong>超文本标记语言</strong></p>
<p>负责网页三要素之中的<strong>结构</strong></p>
<p>使用<strong>标签</strong>的形式来标识网页中的不同组成部分</p>
<p>所谓超文本指的是超链接，使用<strong>超链接</strong>可以让我们从一个页面跳转到另外一个页面</p>
<p>纯文本只能存储数据</p>
<h3 id="1、第一个网页"><a href="#1、第一个网页" class="headerlink" title="1、第一个网页"></a>1、第一个网页</h3><p>用记事本编写第一个网页</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>哈哈哈<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>1、根标签\<html\>\&lt;/html></p>
<p>2、头部标签\<head\>\&lt;/head></p>
<p>3、title标签\<title\>\&lt;/title></p>
<p>4、body标签\<body\>\&lt;/body></p>
<h3 id="2、第二个网页"><a href="#2、第二个网页" class="headerlink" title="2、第二个网页"></a>2、第二个网页</h3><p>用notepad++编写</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209271018082.png" alt="image-20220927101853015"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>这个第二个网页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello第二个网页<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--标签一般成对出现，但是也存在一些自结束标签</span></span><br><span class="line"><span class="comment">		注释不会在网页中显示，但是可以在网页的源代码中查看</span></span><br><span class="line"><span class="comment">		注意:注释不能嵌套--&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">		&lt;img/&gt;</span></span><br><span class="line"><span class="comment">		&lt;input/&gt;</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="3、第三个网页"><a href="#3、第三个网页" class="headerlink" title="3、第三个网页"></a>3、第三个网页</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>标签的属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">		在标签中（开始标签或自结束标签）可以设置属性</span></span><br><span class="line"><span class="comment">		属性是一个名值对结构（x=y）</span></span><br><span class="line"><span class="comment">		属性可以用来设置标签中的内容如何显示</span></span><br><span class="line"><span class="comment">		属性和标签名或其他属性应该用空格隔开</span></span><br><span class="line"><span class="comment">		属性不能瞎写，有些属性有属性值，属性值注意不能漏了引号，有些属性没有属性值</span></span><br><span class="line"><span class="comment">		可以自定义属性</span></span><br><span class="line"><span class="comment">		</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是我的<span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span>第三个网页!<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="4、第四个网页"><a href="#4、第四个网页" class="headerlink" title="4、第四个网页"></a>4、第四个网页</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!Doctype <span class="keyword">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--可以通过meta标签来设置网页的字符集，避免乱码问题--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>网页的基本结构<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">			迭代</span></span><br><span class="line"><span class="comment">				网页的版本</span></span><br><span class="line"><span class="comment">					HTML4</span></span><br><span class="line"><span class="comment">					XHTML2.0</span></span><br><span class="line"><span class="comment">					HTML5</span></span><br><span class="line"><span class="comment">					...</span></span><br><span class="line"><span class="comment">				文档声明（doctype）</span></span><br><span class="line"><span class="comment">					-文档声明用来告诉浏览器当前网页的版本</span></span><br><span class="line"><span class="comment">					-html的文档声明</span></span><br><span class="line"><span class="comment">					&lt;!doctype html&gt;</span></span><br><span class="line"><span class="comment">					</span></span><br><span class="line"><span class="comment">			进制：</span></span><br><span class="line"><span class="comment">				十进制：满10进1</span></span><br><span class="line"><span class="comment">					-计数：0 1 2 3 4 5  6 7 8 9 10...</span></span><br><span class="line"><span class="comment">					-单位数字:10个（0-9）</span></span><br><span class="line"><span class="comment">				八进制：满8进1</span></span><br><span class="line"><span class="comment">					-计数：0 1 2 3 4 5 6 7 10 11 12...</span></span><br><span class="line"><span class="comment">					-单位数字：8个（0-7）</span></span><br><span class="line"><span class="comment">				二进制：满2进1（底层）</span></span><br><span class="line"><span class="comment">					-计数：0 1 10 11 100 101 110 111...</span></span><br><span class="line"><span class="comment">					-单位数字：2个（0-1）</span></span><br><span class="line"><span class="comment">					-扩展:</span></span><br><span class="line"><span class="comment">						-所有数据在计算机底层都是以二进制形式保存</span></span><br><span class="line"><span class="comment">						-可以将内存想象成为一个有多个小各自组成的容器，每一个小格子可以存储一个1或0</span></span><br><span class="line"><span class="comment">							一个格子在内存中称为1位（bit）</span></span><br><span class="line"><span class="comment">							</span></span><br><span class="line"><span class="comment">							8bit = 1byte（字节）</span></span><br><span class="line"><span class="comment">							最小操作单位字节</span></span><br><span class="line"><span class="comment">							1024byte = 1kb（千字节）</span></span><br><span class="line"><span class="comment">							1024kb = 1mb（兆字节）</span></span><br><span class="line"><span class="comment">							1024mb = 1gb（吉字节）</span></span><br><span class="line"><span class="comment">							1024gb = 1tb（特字节）</span></span><br><span class="line"><span class="comment">							1024tb = 1pb</span></span><br><span class="line"><span class="comment">				十六进制：满16进1（一般显示一个二进制数字时，都会转换位16进制）</span></span><br><span class="line"><span class="comment">					-计数：0 1 2 3 4 5 6 7 8 9 a b c d e f 10 11 12...</span></span><br><span class="line"><span class="comment">					-单位数字：16个（0-f）</span></span><br><span class="line"><span class="comment">					</span></span><br><span class="line"><span class="comment">					</span></span><br><span class="line"><span class="comment">					</span></span><br><span class="line"><span class="comment">					</span></span><br><span class="line"><span class="comment">			字符编码：</span></span><br><span class="line"><span class="comment">				小林 -&gt; 1010100101</span></span><br><span class="line"><span class="comment">				1010100101 -&gt; 小林</span></span><br><span class="line"><span class="comment">				-所有数据在计算机底层都是以二进制形式保存，文字也不例外</span></span><br><span class="line"><span class="comment">					所以一段文字在存储进内存时，都会转换成为二进制编码</span></span><br><span class="line"><span class="comment">					当我们查看这段文字时，计算机会将编码转换为字符，给我们阅读</span></span><br><span class="line"><span class="comment">				-编码</span></span><br><span class="line"><span class="comment">					-将字符转换为二进制码</span></span><br><span class="line"><span class="comment">				-解码</span></span><br><span class="line"><span class="comment">					-将二进制码转换为字符</span></span><br><span class="line"><span class="comment">				-字符集（charset）</span></span><br><span class="line"><span class="comment">					-编码和解码所采用的规则成为字符集</span></span><br><span class="line"><span class="comment">				-乱码问题</span></span><br><span class="line"><span class="comment">					-如果编码和解码所采用的字符集不同就会出现乱码</span></span><br><span class="line"><span class="comment">				-常见的字符集：</span></span><br><span class="line"><span class="comment">					ASCII</span></span><br><span class="line"><span class="comment">					ISO88591</span></span><br><span class="line"><span class="comment">					GB2312</span></span><br><span class="line"><span class="comment">					GBK</span></span><br><span class="line"><span class="comment">					UTF-8（万国码）首选</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>5、第五个网页</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--文档声明,声明当前网页的版本--&gt;</span></span><br><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--html的根标签（元素），网页中所有的内容都要写根元素的里面--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!--head是网页的头部，head内容不会在网页中直接出现，主要用来帮助浏览器或搜索引擎解析网页--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">			meta标签用来设置网页的元数据</span></span><br><span class="line"><span class="comment">			这里meta用来设置网页的字符集，避免乱码问题</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--title中的内容会显示在浏览器的标题栏，搜索引擎会主要根据title中的内容来判断网页的主要内容--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>网页的标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">&lt;!--body是html是子元素，显示网页的主体，网页中所有可见的内容都要写在body的里面--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--h1设置一级标题--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">	</span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="6、文档工具"><a href="#6、文档工具" class="headerlink" title="6、文档工具"></a>6、文档工具</h3><p>网址：<a href="https://www.w3school.com.cn/">w3school 在线教程</a></p>
<p>软件：zeal</p>
<h3 id="7、vscode"><a href="#7、vscode" class="headerlink" title="7、vscode"></a>7、vscode</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        1、安装vscode</span></span><br><span class="line"><span class="comment">        2、安装中文语言包</span></span><br><span class="line"><span class="comment">        3、安装ayu主题</span></span><br><span class="line"><span class="comment">        4、打开一个文件目录</span></span><br><span class="line"><span class="comment">        5、创建一个新网页</span></span><br><span class="line"><span class="comment">        6、安装liveServer</span></span><br><span class="line"><span class="comment">        7、通过liveserver运行网页/livePreview可以在软件中分屏显示</span></span><br><span class="line"><span class="comment">        8、设置自动保存</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>hhhhhh<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">     </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="8、实体"><a href="#8、实体" class="headerlink" title="8、实体"></a>8、实体</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>实体<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        在网页中编写的多个空格默认情况都会自动被浏览器解析为一个空格</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">        在Html中有些时候，不能直接书写一些特殊符号</span></span><br><span class="line"><span class="comment">        比如：多个连续空格，比如字母两侧的大于和小于号</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        如果我们需要在网页书写这些特殊符号，则需要使用html中的实体（转义字符）</span></span><br><span class="line"><span class="comment">        实体的语法：</span></span><br><span class="line"><span class="comment">            &amp;实体的名字;</span></span><br><span class="line"><span class="comment">             &amp;nbsp;空格</span></span><br><span class="line"><span class="comment">             &amp;gt;大于号</span></span><br><span class="line"><span class="comment">             &amp;lt;小于号</span></span><br><span class="line"><span class="comment">             &amp;copy;版权符号</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- &amp;nbsp;表示一个空格 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        今天<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>天气真不错</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &amp;lt; &amp;gt;分别表示小于号和大于号 --&gt;</span></span><br><span class="line">        a<span class="symbol">&amp;lt;</span>b<span class="symbol">&amp;gt;</span>c</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="9、meta标签"><a href="#9、meta标签" class="headerlink" title="9、meta标签"></a>9、meta标签</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        meta标签主要用于设置网页的一些元数据，元数据不是给用户看的</span></span><br><span class="line"><span class="comment">        charset：指定网页的字符集</span></span><br><span class="line"><span class="comment">        content：指定数据的内容</span></span><br><span class="line"><span class="comment">	    name：指定数据的名称</span></span><br><span class="line"><span class="comment">            keywords 表示网站的关键字（搜索引擎搜索出的关键字）,</span></span><br><span class="line"><span class="comment">            可以同时指定多个关键字，关键字间使用,隔开</span></span><br><span class="line"><span class="comment">                &lt;meta name=&quot;keywords&quot; content=&quot;qq,微信,淘宝&quot;&gt;</span></span><br><span class="line"><span class="comment">            </span></span><br><span class="line"><span class="comment">            description用于指定网站的描述</span></span><br><span class="line"><span class="comment">                &lt;meta name=&quot;description&quot; content=&quot;这是一个非常不错的网站&quot;&gt;</span></span><br><span class="line"><span class="comment">                网站的描述会显示在搜索引擎的搜索结果中</span></span><br><span class="line"><span class="comment">            </span></span><br><span class="line"><span class="comment">            title标签的内容会作为搜索结果的超链接上的文字显示</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;HTML5,CSS,JavaScript&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;这是一个非常不错的网站&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        &lt;meta http-equiv=&quot;refresh&quot; content=&quot;3;url=https://www.mozilla.org&quot;&gt;</span></span><br><span class="line"><span class="comment">        将页面重定向到另一个网站！！！</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">content</span>=<span class="string">&quot;3;url=https://www.baidu.com&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>meta标签<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="10、语义化标签1-0"><a href="#10、语义化标签1-0" class="headerlink" title="10、语义化标签1.0"></a>10、语义化标签1.0</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>语义化标签<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        在网页中HTML专门用来辅助网页的结构</span></span><br><span class="line"><span class="comment">            所以在使用html标签时，应该关注的是标签的语义，而不是它的样式</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            标题标签：</span></span><br><span class="line"><span class="comment">                h1-h6 一共有六级标题</span></span><br><span class="line"><span class="comment">                从h1-h6重要性递减，h1最重要，h6最不重要</span></span><br><span class="line"><span class="comment">                h1在网页中的重要性仅次于title标签，一般情况下一个页面只有一个h1标签</span></span><br><span class="line"><span class="comment">                一般情况下标题标签只会使用到h1-h3，h4-h6很少用</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                标题标签都是块元素</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            在页面中独占一行的元素成为块元素（block element）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">h2</span>&gt;</span>二级标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">h3</span>&gt;</span>三级标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">h4</span>&gt;</span>四级标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">h5</span>&gt;</span>五级标题<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">h6</span>&gt;</span>六级标题<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        hgroup标签用来给标题分组，可以将一组相关的标题同时放入到hgroup</span></span><br><span class="line"><span class="comment">      --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">hgroup</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>哈哈哈哈哈<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>六六六六六<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">hgroup</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        p标签表示页面中的一个段落</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        p也是一个块元素</span></span><br><span class="line"><span class="comment">      --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>标签表示页面中的一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>标签表示页面中的一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        em标签用于表示语音语调的一个加重</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        在页面中不会独占一行的元素称为行内元素（inline element）</span></span><br><span class="line"><span class="comment">       --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>今天天气<span class="tag">&lt;<span class="name">em</span>&gt;</span>真<span class="tag">&lt;/<span class="name">em</span>&gt;</span>不错!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        strong表示强调，重要内容！</span></span><br><span class="line"><span class="comment">       --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>你今天必须<span class="tag">&lt;<span class="name">strong</span>&gt;</span>完成作业！<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      鲁迅说：</span><br><span class="line">      <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        blockquote表示一个长引用</span></span><br><span class="line"><span class="comment">       --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">blockquote</span>&gt;</span></span><br><span class="line">        这句话我可是从来没说过！</span><br><span class="line">      <span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        q表示一个短引用</span></span><br><span class="line"><span class="comment">       --&gt;</span></span><br><span class="line">      子曰：<span class="tag">&lt;<span class="name">q</span>&gt;</span>学而时习之，不亦说乎！<span class="tag">&lt;/<span class="name">q</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        br标签表示页面中的一个换行</span></span><br><span class="line"><span class="comment">       --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      今天天气很不错！</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="11、语义化标签2-0"><a href="#11、语义化标签2-0" class="headerlink" title="11、语义化标签2.0"></a>11、语义化标签2.0</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>语义化标签<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        块元素（block element）</span></span><br><span class="line"><span class="comment">            -在网页中一般通过块元素来对页面进行布局</span></span><br><span class="line"><span class="comment">        行内元素(inline element)</span></span><br><span class="line"><span class="comment">            -行内元素主要用来包裹文字</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            -一般情况下会在块元素中放行内元素，而不会在行内元素中方块元素</span></span><br><span class="line"><span class="comment">            -块元素中基本都可以放任何元素</span></span><br><span class="line"><span class="comment">            -p元素不能放任何块元素</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        浏览器在解析网页时，会自动对网页中不符合规范的内容进行修正</span></span><br><span class="line"><span class="comment">            比如：</span></span><br><span class="line"><span class="comment">                标签写在了根元素的外部</span></span><br><span class="line"><span class="comment">                p元素中嵌套了块元素</span></span><br><span class="line"><span class="comment">                根元素中出现了除head和body以外的子元素</span></span><br><span class="line"><span class="comment">                ...</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        开发者工具可以看到代码在内存中的存放情况</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>哈哈<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="12、语义化标签3-0"><a href="#12、语义化标签3-0" class="headerlink" title="12、语义化标签3.0"></a>12、语义化标签3.0</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        布局标签（结构化语义标签）</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        header表示网页的头部</span></span><br><span class="line"><span class="comment">        main表示网页的主体部分,一个页面只会有一个main</span></span><br><span class="line"><span class="comment">        footer表示网页的底部</span></span><br><span class="line"><span class="comment">        nav表示网页中的导航</span></span><br><span class="line"><span class="comment">        aside表示和主体相关的其他内容，侧边栏</span></span><br><span class="line"><span class="comment">        article表示一个独立的文章</span></span><br><span class="line"><span class="comment">        section表示一个独立的区块，上边的标签都不能表示时使用section</span></span><br><span class="line"><span class="comment">        div没有语义，但它表示一个区块，目前来讲div还是我们主要的布局元素</span></span><br><span class="line"><span class="comment">        span是行内元素，没有语义，一般用于在网页中选中文字</span></span><br><span class="line"><span class="comment">      --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">main</span>&gt;</span><span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span>&gt;</span><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aside</span>&gt;</span><span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">article</span>&gt;</span><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span>&gt;</span><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="13、列表"><a href="#13、列表" class="headerlink" title="13、列表"></a>13、列表</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        列表(list)</span></span><br><span class="line"><span class="comment">            1、铅笔</span></span><br><span class="line"><span class="comment">            2、尺子</span></span><br><span class="line"><span class="comment">            3、橡皮</span></span><br><span class="line"><span class="comment">        在html也可以创建列表，分为三种</span></span><br><span class="line"><span class="comment">            1、无序列表</span></span><br><span class="line"><span class="comment">            2、有序列表</span></span><br><span class="line"><span class="comment">            3、定义列表</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        无序列表，使用ul标签来创建</span></span><br><span class="line"><span class="comment">            使用li标签标识列表的列表项</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        有序列表，使用ol标签来创建</span></span><br><span class="line"><span class="comment">            使用li标签标识列表的列表项</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        定义列表，使用dl标签来创建</span></span><br><span class="line"><span class="comment">            使用dt标签标识定义的内容</span></span><br><span class="line"><span class="comment">            使用dd来对内容进行解释说明</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        列表之间可以互相嵌套</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>结构<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>表现<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>行为<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>结构<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>表现<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>行为<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span>结构<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>结构表示网页的结构，用来规定网页中哪里是标题，哪里是段落<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            aa</span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>bbb<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>ccc</span><br><span class="line">                    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span>ddd<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="14、超链接"><a href="#14、超链接" class="headerlink" title="14、超链接"></a>14、超链接</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>超链接<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        超链接可以让我们从一个页面跳转到其他页面</span></span><br><span class="line"><span class="comment">        也可以跳转到我们当前页面的其他位置，或者其他页面指定的位置</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        使用a标签来定义超链接</span></span><br><span class="line"><span class="comment">            属性：</span></span><br><span class="line"><span class="comment">                href：指定跳转的目标路径</span></span><br><span class="line"><span class="comment">                    -值可以是外部网站的地址</span></span><br><span class="line"><span class="comment">                    -也可以写一个内部页面的地址</span></span><br><span class="line"><span class="comment">                    -</span></span><br><span class="line"><span class="comment">        超链接也是行内元素，在a标签中可以嵌套除了它自身之外的任何元素</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span>&gt;</span>超链接1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;07.列表.html&quot;</span>&gt;</span>超链接2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://bilibili.com&quot;</span>&gt;</span>超链接3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://douyin.com&quot;</span>&gt;</span>超链接4<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>15、相对路径</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209272329195.png" alt="image-20220927232802616"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        当我们需要跳转到服务器或项目内部的页面时，一般使用相对路径</span></span><br><span class="line"><span class="comment">        相对路径都会使用.或..开头</span></span><br><span class="line"><span class="comment">            ./</span></span><br><span class="line"><span class="comment">            ../</span></span><br><span class="line"><span class="comment">        ./可以省略不写，如果不写./也不写../相当于写了./</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        ./表示当前文件所在目录</span></span><br><span class="line"><span class="comment">            - 当前页面就是09.相对路径.html</span></span><br><span class="line"><span class="comment">            - ./就相当于09.相对路径.html所在的目录path</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">        ../表示当前文件所在目录的上一级目录</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;../07.列表.html&quot;</span>&gt;</span>超链接1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./inner/target.html&quot;</span>&gt;</span>超链接2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;../out/target2.html&quot;</span>&gt;</span>超链接3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="16、超链接2-0"><a href="#16、超链接2-0" class="headerlink" title="16、超链接2.0"></a>16、超链接2.0</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        target属性：用来指定超链接打开的方式</span></span><br><span class="line"><span class="comment">            可选值：</span></span><br><span class="line"><span class="comment">                _self默认值，在当前页面打开超链接</span></span><br><span class="line"><span class="comment">                _blank 在新窗口打开超链接</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;07.列表.html&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>超链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        给其他标签声明id属性</span></span><br><span class="line"><span class="comment">        使用#id属性值给href赋值</span></span><br><span class="line"><span class="comment">        跳转到指定id值标签位置</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#bottom&quot;</span>&gt;</span>去底部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#p3&quot;</span>&gt;</span>去p3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        在开发中，可以用#作为超链接的路径的占位符使用</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>新的超链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        可以使用javascript:;来作为href的属性值，此时点击这个超链接不会有反应</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>新的超链接2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>书是朋友，它能带着我们畅游知识的海洋；书是老师，在我有问题不懂的时侯，它能给我解答；书是家，在我们孤独寂寞的时候，它能给我们带来温暖和快乐……</span><br><span class="line"></span><br><span class="line">        自记事的那天起，无论是幼儿园时看的连环画、小人书，还是一二年级时读的儿童文学，又或是三四五年级时读的少年文学，直到现在，放眼望去，他们都还整整齐齐的在书柜里边儿仿佛排列着队伍等着我随时的检阅。</span><br><span class="line">        </span><br><span class="line">        记得那是一个周末的早上，天有点冷，我包裹着被子把头伸向窗外，雨淅淅沥沥的下着，不愿起床的我随手拿着一本名为《假如给我三天光明》的书看了起来，可是我要怎么理解这本书呢？</span><br><span class="line">        </span><br><span class="line">        我见过午后明媚的阳光透过学校后面的小树林，随着徐徐微风轻轻地起舞，就像好多星星一样的眼睛又明亮又可爱的在那里眨巴眨巴。</span><br><span class="line">        </span><br><span class="line">        我见过隔壁阿姨家的小朋友，虽然还那么小，每当她从我手里抢走棒棒糖并塞到嘴里的时候，笑得跟朵花儿似的。</span><br><span class="line">        </span><br><span class="line">        我还见过，见过高年级的大哥哥大姐姐们穿着漂亮的衣服照毕业照。想着他们小学的美好时光，就在照相师傅快门咔嚓一声后就永远的定格在了那，我也会想，想自己毕业的那天穿的是不是妈妈特意买的新衣服，扎的是小学时候的羊角辫还是属于初中时的大马尾，无限憧憬无限期望……</span><br><span class="line">        </span><br><span class="line">        假如给我三天光明，如果可以，我想把它捐给从来就没看见过爸爸妈妈、看见过这个五彩世界的人。大熊猫的世界里还有黑色、白色；而失明人的世界里就只有一种单调的颜色，那就是“黑”。如果这个世界都是盲人，他们不可怜，因为这样就有好多好多人陪在他们的身边，大家互相帮助，一起生活。可是，世界并不是这样，在正常人的世界里，他们需要人帮助。</span><br><span class="line">        </span><br><span class="line">        如果我能借给他们三天光明，我一定要督促他们多走多看，看擦身而过的每一个笑脸；</span><br><span class="line">        </span><br><span class="line">        如果我能借给他们三天光明，我一定要呼吁更多的人帮助他们，在时间没到之前，谁也不许打扰他们；</span><br><span class="line">        </span><br><span class="line">        多美好的“如果”啊！可是，我知道没有如果。</span><br><span class="line">        </span><br><span class="line">        如果可以，我希望能给他们的不是三天光明，我要做一位医生，我要用最先进的仪器和我最精湛的医术给他们一辈子光明。</span><br><span class="line">        </span><br><span class="line">        书，我们的朋友、我们的老师，我们的家，书让我们插上力量的翅膀，飞向美好的明天，也让我们对未来有了无限期待。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>书是朋友，它能带着我们畅游知识的海洋；书是老师，在我有问题不懂的时侯，它能给我解答；书是家，在我们孤独寂寞的时候，它能给我们带来温暖和快乐……</span><br><span class="line"></span><br><span class="line">        自记事的那天起，无论是幼儿园时看的连环画、小人书，还是一二年级时读的儿童文学，又或是三四五年级时读的少年文学，直到现在，放眼望去，他们都还整整齐齐的在书柜里边儿仿佛排列着队伍等着我随时的检阅。</span><br><span class="line">        </span><br><span class="line">        记得那是一个周末的早上，天有点冷，我包裹着被子把头伸向窗外，雨淅淅沥沥的下着，不愿起床的我随手拿着一本名为《假如给我三天光明》的书看了起来，可是我要怎么理解这本书呢？</span><br><span class="line">        </span><br><span class="line">        我见过午后明媚的阳光透过学校后面的小树林，随着徐徐微风轻轻地起舞，就像好多星星一样的眼睛又明亮又可爱的在那里眨巴眨巴。</span><br><span class="line">        </span><br><span class="line">        我见过隔壁阿姨家的小朋友，虽然还那么小，每当她从我手里抢走棒棒糖并塞到嘴里的时候，笑得跟朵花儿似的。</span><br><span class="line">        </span><br><span class="line">        我还见过，见过高年级的大哥哥大姐姐们穿着漂亮的衣服照毕业照。想着他们小学的美好时光，就在照相师傅快门咔嚓一声后就永远的定格在了那，我也会想，想自己毕业的那天穿的是不是妈妈特意买的新衣服，扎的是小学时候的羊角辫还是属于初中时的大马尾，无限憧憬无限期望……</span><br><span class="line">        </span><br><span class="line">        假如给我三天光明，如果可以，我想把它捐给从来就没看见过爸爸妈妈、看见过这个五彩世界的人。大熊猫的世界里还有黑色、白色；而失明人的世界里就只有一种单调的颜色，那就是“黑”。如果这个世界都是盲人，他们不可怜，因为这样就有好多好多人陪在他们的身边，大家互相帮助，一起生活。可是，世界并不是这样，在正常人的世界里，他们需要人帮助。</span><br><span class="line">        </span><br><span class="line">        如果我能借给他们三天光明，我一定要督促他们多走多看，看擦身而过的每一个笑脸；</span><br><span class="line">        </span><br><span class="line">        如果我能借给他们三天光明，我一定要呼吁更多的人帮助他们，在时间没到之前，谁也不许打扰他们；</span><br><span class="line">        </span><br><span class="line">        多美好的“如果”啊！可是，我知道没有如果。</span><br><span class="line">        </span><br><span class="line">        如果可以，我希望能给他们的不是三天光明，我要做一位医生，我要用最先进的仪器和我最精湛的医术给他们一辈子光明。</span><br><span class="line">        </span><br><span class="line">        书，我们的朋友、我们的老师，我们的家，书让我们插上力量的翅膀，飞向美好的明天，也让我们对未来有了无限期待。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p3&quot;</span>&gt;</span>书是朋友，它能带着我们畅游知识的海洋；书是老师，在我有问题不懂的时侯，它能给我解答；书是家，在我们孤独寂寞的时候，它能给我们带来温暖和快乐……</span><br><span class="line"></span><br><span class="line">        自记事的那天起，无论是幼儿园时看的连环画、小人书，还是一二年级时读的儿童文学，又或是三四五年级时读的少年文学，直到现在，放眼望去，他们都还整整齐齐的在书柜里边儿仿佛排列着队伍等着我随时的检阅。</span><br><span class="line">        </span><br><span class="line">        记得那是一个周末的早上，天有点冷，我包裹着被子把头伸向窗外，雨淅淅沥沥的下着，不愿起床的我随手拿着一本名为《假如给我三天光明》的书看了起来，可是我要怎么理解这本书呢？</span><br><span class="line">        </span><br><span class="line">        我见过午后明媚的阳光透过学校后面的小树林，随着徐徐微风轻轻地起舞，就像好多星星一样的眼睛又明亮又可爱的在那里眨巴眨巴。</span><br><span class="line">        </span><br><span class="line">        我见过隔壁阿姨家的小朋友，虽然还那么小，每当她从我手里抢走棒棒糖并塞到嘴里的时候，笑得跟朵花儿似的。</span><br><span class="line">        </span><br><span class="line">        我还见过，见过高年级的大哥哥大姐姐们穿着漂亮的衣服照毕业照。想着他们小学的美好时光，就在照相师傅快门咔嚓一声后就永远的定格在了那，我也会想，想自己毕业的那天穿的是不是妈妈特意买的新衣服，扎的是小学时候的羊角辫还是属于初中时的大马尾，无限憧憬无限期望……</span><br><span class="line">        </span><br><span class="line">        假如给我三天光明，如果可以，我想把它捐给从来就没看见过爸爸妈妈、看见过这个五彩世界的人。大熊猫的世界里还有黑色、白色；而失明人的世界里就只有一种单调的颜色，那就是“黑”。如果这个世界都是盲人，他们不可怜，因为这样就有好多好多人陪在他们的身边，大家互相帮助，一起生活。可是，世界并不是这样，在正常人的世界里，他们需要人帮助。</span><br><span class="line">        </span><br><span class="line">        如果我能借给他们三天光明，我一定要督促他们多走多看，看擦身而过的每一个笑脸；</span><br><span class="line">        </span><br><span class="line">        如果我能借给他们三天光明，我一定要呼吁更多的人帮助他们，在时间没到之前，谁也不许打扰他们；</span><br><span class="line">        </span><br><span class="line">        多美好的“如果”啊！可是，我知道没有如果。</span><br><span class="line">        </span><br><span class="line">        如果可以，我希望能给他们的不是三天光明，我要做一位医生，我要用最先进的仪器和我最精湛的医术给他们一辈子光明。</span><br><span class="line">        </span><br><span class="line">        书，我们的朋友、我们的老师，我们的家，书让我们插上力量的翅膀，飞向美好的明天，也让我们对未来有了无限期待。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        可以直接将超链接的href属性设置为#，这样点击超链接以后</span></span><br><span class="line"><span class="comment">        页面不会发生跳转，而是转到   当前页面的顶部位置</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        id属性（唯一不重复）</span></span><br><span class="line"><span class="comment">            -每一个标签都可以添加一个id属性</span></span><br><span class="line"><span class="comment">            -id属性就是元素的唯一标识，同一页面不能出现重复的id属性</span></span><br><span class="line"><span class="comment">      --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;bottom&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>回到顶部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="17、图片标签"><a href="#17、图片标签" class="headerlink" title="17、图片标签"></a>17、图片标签</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        图片标签用于向当前页面中引入一个外部图片</span></span><br><span class="line"><span class="comment">        使用img标签来引入外部图片，img标签是一个自结束标签</span></span><br><span class="line"><span class="comment">        img这种元素属于替换元素（基于块元素和行内元素之间,具有两种元素的特点）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        属性：</span></span><br><span class="line"><span class="comment">            src 属性指定的是外部图片的路径，路径规则和超链接是一样的</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            alt 图片的描述，这个描述默认情况下不会显示，有些浏览器会在图片无法加载时显示</span></span><br><span class="line"><span class="comment">                搜索引擎会根据alt的内容来识别图片，如果不写alt属性，则图片不会被搜索引擎所收录</span></span><br><span class="line"><span class="comment">            </span></span><br><span class="line"><span class="comment">            width 图片的宽度（单位的像素）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            height 图片的高度</span></span><br><span class="line"><span class="comment">                -宽度和高度如果只修改了一个，则另一个会等比例缩放（一般情况下只指定一个属性）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            注意：</span></span><br><span class="line"><span class="comment">                一般情况下在pc端，不建议修改图片的大小，需要多大的图片就裁剪多大</span></span><br><span class="line"><span class="comment">                但是在移动端，经常需要对图片进行缩放（大图缩小较多）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        图片的格式：</span></span><br><span class="line"><span class="comment">            jpeg（jpg）</span></span><br><span class="line"><span class="comment">                -支持的颜色比较丰富，不支持透明效果，不支持动图</span></span><br><span class="line"><span class="comment">                -一般用来显示图片</span></span><br><span class="line"><span class="comment">            gif</span></span><br><span class="line"><span class="comment">                -支持的颜色比较少，支持简单透明，支持动图</span></span><br><span class="line"><span class="comment">                -颜色单一的图片，动图</span></span><br><span class="line"><span class="comment">            png</span></span><br><span class="line"><span class="comment">                -支持的颜色丰富，支持复杂透明，不支持动图</span></span><br><span class="line"><span class="comment">                -颜色丰富，复杂透明（专为网页而生）</span></span><br><span class="line"><span class="comment">            webp</span></span><br><span class="line"><span class="comment">                -这种格式是谷歌新推出的专门用来表示网页中的一种样式</span></span><br><span class="line"><span class="comment">                -它具有其他图片格式所有优点，而且文件还特别的小</span></span><br><span class="line"><span class="comment">                -缺点：兼容性不好</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            base64</span></span><br><span class="line"><span class="comment">                -将图片使用base64进行编码，这样可以将图片转换为字符，通过字符的形式来引入图片</span></span><br><span class="line"><span class="comment">                -一般都是一些需要和网页一起加载的图片才会使用base64，可以通过百度在线转换</span></span><br><span class="line"><span class="comment">            </span></span><br><span class="line"><span class="comment">            效果一样，用小的</span></span><br><span class="line"><span class="comment">            效果不一样，用效果好的（均衡）</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/女侠客.jpg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;松鼠&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://tse2-mm.cn.bing.net/th/id/OIP-C.l8B9TkGhy_umXB5oCD8PawHaJ4?w=186&amp;h=248&amp;c=7&amp;r=0&amp;o=5&amp;dpr=2&amp;pid=1.7&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;钢铁侠&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="18、内联框架"><a href="#18、内联框架" class="headerlink" title="18、内联框架"></a>18、内联框架</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        内联框架，用来向当前页面引入一个其他页面</span></span><br><span class="line"><span class="comment">            src指定要引入的网页路径</span></span><br><span class="line"><span class="comment">            frameborder指定内联框架的边框</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://www.bilibili.com&quot;</span> <span class="attr">width</span>=<span class="string">&quot;600&quot;</span> <span class="attr">height</span>=<span class="string">&quot;600&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>没影响<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="19、音频视频"><a href="#19、音频视频" class="headerlink" title="19、音频视频"></a>19、音频视频</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        audio标签用来向页面中一引入一个外部的音频文件的</span></span><br><span class="line"><span class="comment">          音视频文件引入后，默认情况下不允许用户自己控制播放停止  </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        属性：</span></span><br><span class="line"><span class="comment">            controls 是否允许用户控制播放，没有属性值</span></span><br><span class="line"><span class="comment">            autoplay 音频文件是否自动播放</span></span><br><span class="line"><span class="comment">                -如果设置了autoplay，则音乐在打开页面时会自动播放</span></span><br><span class="line"><span class="comment">                    但是目前来说大多数浏览器不会自动对音乐进行播放</span></span><br><span class="line"><span class="comment">            loop 音乐是否循环播放</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            写了就生效</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     <span class="comment">&lt;!-- &lt;audio src=&quot;./source/audio.mp3&quot; controls autoplay&gt;&lt;/audio&gt; --&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- &lt;audio src=&quot;./source/audio.mp3&quot; controls loop&gt;&lt;/audio&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        除了提供src指定外部文件路径以外，还支持通过source标签来指定文件路径</span></span><br><span class="line"><span class="comment">      --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- &lt;audio controls&gt;</span></span><br><span class="line"><span class="comment">        对不起，您的浏览器不支持播放音频，请升级浏览器！</span></span><br><span class="line"><span class="comment">        &lt;source src=&quot;./source/audio.mp3&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;source src=&quot;./source/audio.ogg&quot;&gt;</span></span><br><span class="line"><span class="comment">      &lt;/audio&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        会自动播放</span></span><br><span class="line"><span class="comment">        type指定文件格式 audio/mp3</span></span><br><span class="line"><span class="comment">	   这个基本支持所有浏览器</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- &lt;embed src=&quot;./source/audio.mp3&quot; type=&quot;&quot;&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">audio</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;./source/audio.mp3&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;./source/audio.ogg&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">embed</span> <span class="attr">src</span>=<span class="string">&quot;./source/audio.mp3&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/mp3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        使用video标签引入视频文件</span></span><br><span class="line"><span class="comment">            使用方式根audio基本是一样的</span></span><br><span class="line"><span class="comment">        属性跟audio差不多</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;./source/flower.webm&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;./source/flower.mp4&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">embed</span> <span class="attr">src</span>=<span class="string">&quot;./source/flower.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="三、CSS"><a href="#三、CSS" class="headerlink" title="三、CSS"></a>三、CSS</h2><h3 id="1、css简介"><a href="#1、css简介" class="headerlink" title="1、css简介"></a>1、css简介</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    第二种方式（内部样式表）：</span></span><br><span class="line"><span class="comment">        -将样式编写到head中的style标签里</span></span><br><span class="line"><span class="comment">            然后通过CSS的选择器选中元素并为其设置各种样式</span></span><br><span class="line"><span class="comment">            可以同时为多个标签设置样式，并且修改时只需要修改一处即可全部应用</span></span><br><span class="line"><span class="comment">        -内部样式更加方便对样式进行复用</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        -问题：</span></span><br><span class="line"><span class="comment">            内部样式表只能对一个网页起作用</span></span><br><span class="line"><span class="comment">                他里边的样式不能跨页面进行复用</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;style&gt;</span></span><br><span class="line"><span class="comment">        p&#123;</span></span><br><span class="line"><span class="comment">            color: blue;</span></span><br><span class="line"><span class="comment">            font-size: 50px;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &lt;/style&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        第三种方式(外部样式表)最佳实践</span></span><br><span class="line"><span class="comment">            -可以将CSS样式编写到一个外部的CSS文件</span></span><br><span class="line"><span class="comment">                然后通过link标签来引入外部的CSS文件</span></span><br><span class="line"><span class="comment">            -属性:</span></span><br><span class="line"><span class="comment">                href:css文件的路径</span></span><br><span class="line"><span class="comment">            -外部样式表需要通过link标签进行引入,</span></span><br><span class="line"><span class="comment">                意味这只要只要想使用这些样式的网页都可以对他进行引用</span></span><br><span class="line"><span class="comment">                使样式可以在不同的页面之间进行复用</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            -将样式编写到外部的css文件中,可以使用到浏览器的缓存机制</span></span><br><span class="line"><span class="comment">                从而加快网页的加载是速度,提高用户的体验</span></span><br><span class="line"><span class="comment">            </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./style.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        网页分成三个部分：</span></span><br><span class="line"><span class="comment">            结构（HTML）</span></span><br><span class="line"><span class="comment">            表现（CSS）</span></span><br><span class="line"><span class="comment">            行为（JavaScript）</span></span><br><span class="line"><span class="comment">        CSS</span></span><br><span class="line"><span class="comment">            -层叠样式表</span></span><br><span class="line"><span class="comment">            -网页实际上是一个多层结构，通过CSS可以分别为网页的每一个层来设置样式</span></span><br><span class="line"><span class="comment">                而最终我们看到的只是最上边的一层</span></span><br><span class="line"><span class="comment">            -总而言之，CSS是用来设置网页中的元素的样式</span></span><br><span class="line"><span class="comment">            </span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        使用CSS来修改元素的样式</span></span><br><span class="line"><span class="comment">        第一种方式(内联样式，行内样式）：</span></span><br><span class="line"><span class="comment">            -在标签内部通过style属性来设置元素的样式</span></span><br><span class="line"><span class="comment">            -问题</span></span><br><span class="line"><span class="comment">                使用内联样式，样式只能对一个标签生效，如果希望影响到多个元素必须在每一个元素中复制一遍</span></span><br><span class="line"><span class="comment">                并且当样式发生变化时，还要一个一个修改，非常不方便</span></span><br><span class="line"><span class="comment">            -注意，开发时绝对不要使用内联样式</span></span><br><span class="line"><span class="comment">       </span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="comment">&lt;!-- &lt;p style=&quot;color:green ; font-size: 50px;&quot;&gt;哈哈哈哈哈哈&lt;/p&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="comment">&lt;!-- &lt;p style=&quot;color:green ; font-size:60px&quot;&gt;今天天气真不错！&lt;/p&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>哈哈哈哈哈<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>hhhh<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2、CSS语法"><a href="#2、CSS语法" class="headerlink" title="2、CSS语法"></a>2、CSS语法</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            css中的注释:注释中的内容自动被浏览器所忽略</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            css的基本语法</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                选择器 声明块</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                选择器,通过选择器可以选中页面中的指定元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    比如p的作用就是选择页面中的所有p元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                声明块,通过声明块来指定要为元素设置的样式</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    声明块由一个一个的声明组成</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    声明是一个名值对结构</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        一个样式名对应一个样式值,名和值之间以:连接,以;结尾</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    </span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        </span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>111<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>222<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>333<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="3、CSS常用选择器"><a href="#3、CSS常用选择器" class="headerlink" title="3、CSS常用选择器"></a>3、CSS常用选择器</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">        将所有段落设置为红色（字体）</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">        元素选择器</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            作用：根据标签名来选中指定的元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            语法：标签名&#123;&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            例子：p&#123;&#125; h1&#123;&#125; div&#123;&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">    */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/* p&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        color: red;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">    &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">    h1&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        color: blue;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">    &#125; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">        将DDDDDDD设置为绿色</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">        id选择器</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            作用：根据元素的id属性值选中一个元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            语法：#id属性值</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            例子：#box&#123;&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">    */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/* #D&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        color: green;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">    &#125; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">    </span></span></span><br><span class="line"><span class="comment"><span class="language-css">        将A和C设为黄色</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">        class选择器（类选择器）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            作用：根据元素的class属性值选择多个元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            语法：.class属性值</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            例子：.grenn&#123;&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">    </span></span></span><br><span class="line"><span class="comment"><span class="language-css">        class是一个标签的属性，和id属性类似，但是它可以重复使用，id不行</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        可以为一个元素指定多个class属性,空格隔开即可</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">    */</span></span></span><br><span class="line"><span class="language-css">    <span class="comment">/* .pink&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        color: pink;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">    &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">    .big&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        font-size: 30px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">    &#125; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">        通配选择器</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            作用：选中页面中的所有元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            语法：*&#123;&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">    */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    *&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;pink big&quot;</span>&gt;</span>HAHAHAHAHA<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>BBBBBBBBBB<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;pink&quot;</span>&gt;</span>CCCCCCCCCC<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;D&quot;</span>&gt;</span>DDDDDDDDDD<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>EEEEEEEEEE<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>FFFFFFFFFF<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="4、复合选择器"><a href="#4、复合选择器" class="headerlink" title="4、复合选择器"></a>4、复合选择器</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            将class为red的元素设置为红色（字体）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.red</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 将class为red的div元素字体大小设置为30px */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            交集选择器</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                作用：选中同时符合多个条件的元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                语法：选择器1选择器2选择器n&#123;&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                注意点：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    如果选择器中有元素选择器，必须使用元素选择器开头</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span><span class="selector-class">.red</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.a</span><span class="selector-class">.b</span><span class="selector-class">.c</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            选择器分组（并集选择器）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                作用：同时选择多个选择器对应的元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                语法：选择器1,选择器2,选择器n&#123;&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                #b1,.p1,h1,span，div.red&#123;&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h1</span>,<span class="selector-tag">span</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        </span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>我是div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>我是p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;red2 a b c&quot;</span>&gt;</span>我是div2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>hhhh<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="5、关系选择器"><a href="#5、关系选择器" class="headerlink" title="5、关系选择器"></a>5、关系选择器</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            为div的子元素span设置字体颜色为红色</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                （为div直接包含的span设置字体颜色）</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            子元素选择器</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                作用：选中指定父元素的指定子元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                语法：父元素 &gt; 子元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* div.box &gt; span&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            color: orange;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            后代元素选择器：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                作用 ：选中指定元素的指定后代元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                语法：祖先 后代</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* div span&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            color: blue;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">          选择下一个兄弟元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            语法：前一个+后一个</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            注意：如果紧挨着的下一个元素不是指定的元素，则不生效</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* p + span&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            color: aqua;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            选择所有兄弟元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                语法：兄~弟</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            注意是兄后面的，前面的不会记录</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> ~ <span class="selector-tag">span</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: aqua;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        父元素</span></span><br><span class="line"><span class="comment">            -直接包含子元素的元素叫做父元素</span></span><br><span class="line"><span class="comment">        子元素</span></span><br><span class="line"><span class="comment">            -直接被父元素包含的元素是子元素</span></span><br><span class="line"><span class="comment">        祖先元素</span></span><br><span class="line"><span class="comment">            -直接或间接包含后代元素的元素叫做祖先元素</span></span><br><span class="line"><span class="comment">            -一个元素的父元素也是它的祖先元素</span></span><br><span class="line"><span class="comment">            -只能有一个父元素，可以有多个祖先元素</span></span><br><span class="line"><span class="comment">        后代元素</span></span><br><span class="line"><span class="comment">            -直接或简介被祖先元素包含的元素叫做后代元素</span></span><br><span class="line"><span class="comment">            -子元素也是后代元素</span></span><br><span class="line"><span class="comment">            -可以有多个子元素和后代元素</span></span><br><span class="line"><span class="comment">        兄弟元素</span></span><br><span class="line"><span class="comment">            -拥有相同父元素的元素是兄弟元素</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        我是一个div</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>我是div中的span元素<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是div中的p元素</span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>我是div中的p中的span元素<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>我是div中的span元素<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>我是div中的span元素<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>我是div中的span元素<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        我是div</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>我也是div的子元素<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="6、属性选择器"><a href="#6、属性选择器" class="headerlink" title="6、属性选择器"></a>6、属性选择器</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            [属性名]选择含有指定属性的元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            [属性名=属性值]选择含有指定属性和属性值的元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            [属性名^=值]选择属性值以值为开头的元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            [属性名$=值]选择属性值以值结尾的元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            [属性值*=值]选择属性值中含有某值的元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span><span class="selector-attr">[title]</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: orange;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span><span class="selector-attr">[title=这是c]</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span><span class="selector-attr">[title^=aa]</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span><span class="selector-attr">[title$=dd]</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: aqua;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* p[title*=这是]&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            font-size: larger;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        </span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">title</span>=<span class="string">&quot;aa这是a&quot;</span>&gt;</span>aaaaa<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">title</span>=<span class="string">&quot;aa这是b&quot;</span>&gt;</span>bbbbb<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">title</span>=<span class="string">&quot;这是c&quot;</span>&gt;</span>ccccc<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">title</span>=<span class="string">&quot;这是dd&quot;</span>&gt;</span>ddddd<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>eeeee<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>fffff<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="7、伪类选择器"><a href="#7、伪类选择器" class="headerlink" title="7、伪类选择器"></a>7、伪类选择器</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            将ul中的第一个li设置为红色</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            伪类（不存在的类，特殊的类）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                -伪类用来描述一个元素的特殊状态</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    比如，第一个子元素，被点击的元素，鼠标移入的元素...</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                -伪类一般情况下都是使用:开头</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    :first-child 第一个子元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    :last-child最后一个子元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    :nth-child(n)选择第n个元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        特殊值：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            n 全选，取值范围是0到正无穷</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            2n 或 even 表示选择偶数位的元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            2n+1 或 odd 表示选择奇数位的元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -以上这些伪类都是根据所有的子元素进行排序的</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    :first-of-type</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    :last-of-type</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    :nth-of-type()</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        -这几个伪类的功能和上面的类似，不同点是这三个是在同类型进行排序的                    </span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            -    not()否定伪类</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                -将符合条件的元素从选择器中去除</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        </span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span><span class="selector-pseudo">:first</span>-child&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: orange;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>)&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span><span class="selector-pseudo">:first</span>-of-type&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: aqua;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span><span class="selector-pseudo">:not</span>(<span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>)) &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        </span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>hhh<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>000<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>222<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>333<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>444<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>555<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="8、超链接的伪类"><a href="#8、超链接的伪类" class="headerlink" title="8、超链接的伪类"></a>8、超链接的伪类</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            :link表示没访问过的链接（正常的链接）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:link</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            :visited表示访问过的链接</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            由于隐私的原因，所以visted这个伪类只能修改颜色这个样式</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            :hover用来表示鼠标移入的状态</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: aqua;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            :active用来表示鼠标点击的状态</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        1、访问过的链接</span></span><br><span class="line"><span class="comment">        2、没访问过的链接</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.douyin.com&quot;</span>&gt;</span>抖音<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu123.com&quot;</span>&gt;</span>baidu123<span class="tag">&lt;/<span class="name">a</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="9、伪元素选择器"><a href="#9、伪元素选择器" class="headerlink" title="9、伪元素选择器"></a>9、伪元素选择器</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            伪元素，表示页面中一些特殊的并不真实存在的元素（特殊的元素）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                伪元素使用::开头</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                ::first-letter表示第一个字母</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                ::first-line表示第一行</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                ::selection表示选中的内容</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                ::before元素的开始位置</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                ::after元素的最后位置</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -beforeheafter必须结合content属性来使用</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        		使用before和after添加的内容不能被复制</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span><span class="selector-pseudo">::first-letter</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span><span class="selector-pseudo">::first-line</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: aqua;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        </span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">P</span><span class="selector-pseudo">::selection</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: gray;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* div::before&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            content:&#x27;开始无法选中&#x27; ;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            color: aqua;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        </span></span></span><br><span class="line"><span class="comment"><span class="language-css">        div::after&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            content: &#x27;最后无法选中&#x27;;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            color: aqua;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span><span class="selector-pseudo">::after</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">content</span>: <span class="string">&#x27;】&#x27;</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span><span class="selector-pseudo">::before</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">content</span>: <span class="string">&#x27;【&#x27;</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">q</span>&gt;</span>我自带引号<span class="tag">&lt;/<span class="name">q</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我是一个div哈哈哈<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        Lorem ipsum dolor sit amet consectetur adipisicing elit. Nobis accusantium sed fugiat voluptas consequuntur nisi labore voluptatem quod? Maiores enim, sint placeat corporis qui dolore debitis quae quasi iusto et.</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="10、样式的继承"><a href="#10、样式的继承" class="headerlink" title="10、样式的继承"></a>10、样式的继承</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            样式的继承，我们为一个元素设置的样式也会应用到它的后代元素上</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            继承是发生在祖先和后代之间的</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            继承的设计是方便我们的开发，利用继承可以将一些通用的样式设置到共同的祖先元素上，</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            这样只需设置一次即可让所有的元素都具有该样式</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            注意：并不是所有样式都会被继承，</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                比如 背景相关 的，布局相关的这些样式 都不会被继承！！！</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: aqua;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        我是一个p元素</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>我是p元素中的span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>我是一个span元素<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        我是一个div</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">            我是div中的span</span><br><span class="line">            <span class="tag">&lt;<span class="name">em</span>&gt;</span>我是span中的em<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="11、选择器的权重"><a href="#11、选择器的权重" class="headerlink" title="11、选择器的权重"></a>11、选择器的权重</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            样式的冲突</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                -当我们通过不同的选择器，选中相同的元素，并且为相同的样式设置不同的值时，此时就会发生冲突</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            发生样式冲突时，应用哪个样式值由选择器的权重（优先级）决定</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            选择器的权重</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                内联样式 1,0,0,0</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                id选择器 0,1,0,0</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                类和伪类选择器 0,0,1,0</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                元素选择器 0,0,0,1</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                通配选择器 0,0,0,0</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                继承的样式 没有优先级</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            比较优先级时，需要将所有的选择器的优先级相加计算，最后优先级越高，则越优先显示（分组选择器是单独计算的）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            选择器的累加不会超过其最大的数量级，类选择器再高也不会超过id选择器</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            如果优先级计算后相同，此时使用靠下的样式，即后面的会覆盖前面的</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            可以在某一个样式的后边添加！important，则此时该样式会获取到最高的优先级，甚至超过内联样式</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                注意：在开发中一定要慎用！</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span>      </span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: orange;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.red</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.d1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: purple <span class="meta">!important</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        *&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* div#box1&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            color: yellow;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        </span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color: green ;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;box1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;red d1&quot;</span>&gt;</span></span><br><span class="line">        我是div</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>我是div中的span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="12、单位"><a href="#12、单位" class="headerlink" title="12、单位"></a>12、单位</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            长度单位：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                像素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -屏幕(显示器)实际上是由一个一个的小点构成的</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -不同屏幕的像素大小是不同的，像素越小的屏幕显示的效果越清晰</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -所以同样的200px在不同的设备下显示效果不一样</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                百分比</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -也可以将属性值设置为相对于父元素属性的百分比</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -设置百分比可以使子元素随父元素的改变而改变</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                em</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -em是相对于 自身元素 的字体大小来计算的</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -1em= 1font-size</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -em会根据字体大小的改变而改变</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                rem</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -rem是相对于 根元素 的字体大小来计算的</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: aqua;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box3</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* width: 10em;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            height: 10em; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">10rem</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">10rem</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: greenyellow;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">html</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="13、颜色"><a href="#13、颜色" class="headerlink" title="13、颜色"></a>13、颜色</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>:<span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                颜色单位：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    在css中可以直接使用颜色名来设置各种颜色，如blue，red，green</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    但是在css中直接使用颜色名称是非常的不方便的</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    RGB值：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        -RGB通过三种原色的不同浓度来调出不同的配色</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        -R red，G green，B，Blue</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        -每一种颜色的范围在0-255（0%-100%）之间</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        -语法：RGB(红色，绿色，蓝色)</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    RGBA:</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        在RGB的基础上增加了A，A用来设置透明效果</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        第四个值表示不透明度，1为完全不透明，0完全透明</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    十六进制的RGB值：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        -语法：#红色绿色蓝色</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        -颜色浓度：00-ff</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        -每种颜色用两位数字表示</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        -如果颜色两位两位重复，则可以进行简写</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            #aabbcc-&gt;#abc</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                     HSL值，HSLA值</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        H色相（0-360）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        S饱和度，颜色的浓度(0%-100%)</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        L亮度,颜色的亮度(0%-100%)</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        A透明度</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">trgb</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#0037ff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">hsl</span>(<span class="number">80</span>, <span class="number">100%</span>, <span class="number">50%</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="三、layout"><a href="#三、layout" class="headerlink" title="三、layout"></a>三、layout</h2><h3 id="1、文档流"><a href="#1、文档流" class="headerlink" title="1、文档流"></a>1、文档流</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: aqua;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#span1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="language-css">            </span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#span2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        文档流（normal flow）</span></span><br><span class="line"><span class="comment">            -网页时一个多层的结构，一层摞着一层</span></span><br><span class="line"><span class="comment">            -通过css可以分别为每一层来设置样式</span></span><br><span class="line"><span class="comment">            -作为用户来讲只能看到最顶上的一层</span></span><br><span class="line"><span class="comment">            -这些层中，最底下的一层称为 文档流 ，文档流是网页的基础</span></span><br><span class="line"><span class="comment">                我们所创建的元素默认都是在文档流中进行排列的</span></span><br><span class="line"><span class="comment">            -对我们来说元素主要有两个状态</span></span><br><span class="line"><span class="comment">                在文档流中</span></span><br><span class="line"><span class="comment">                不在文档流中（脱离文档流）</span></span><br><span class="line"><span class="comment">            -元素在文档流中有什么特点：</span></span><br><span class="line"><span class="comment">                -块元素</span></span><br><span class="line"><span class="comment">                    -块元素在页面中独占一行（自上向下垂直排列）</span></span><br><span class="line"><span class="comment">                    -块元素默认宽度是父元素的全部（会把父元素撑满）</span></span><br><span class="line"><span class="comment">                    -默认高度是被内容撑开（子元素）</span></span><br><span class="line"><span class="comment">                    -注意独占一行不受其他影响</span></span><br><span class="line"><span class="comment">                -行内元素</span></span><br><span class="line"><span class="comment">                    -行内元素不会独占页面一行，只占自身的大小</span></span><br><span class="line"><span class="comment">                    -行内元素在页面中左向右水平排列，如果一行中不能容纳所有的行内元素</span></span><br><span class="line"><span class="comment">                        则会换到第二行继续自左向右排列（书写习惯一致）</span></span><br><span class="line"><span class="comment">                    -默认宽度和高度都是被内容撑开</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span>我是div1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span>我是div2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;span1&quot;</span>&gt;</span>我是span1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;span2&quot;</span>&gt;</span>我是span2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2、盒模型-简介"><a href="#2、盒模型-简介" class="headerlink" title="2、盒模型-简介"></a>2、盒模型-简介</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                内容区（content），元素中的所有子元素和文本内容都在内容区中排列</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                内容区的大小由width和height两个属性来设置</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    width设置内容区的宽度</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    height设置内容区的高度</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            	默认情况下设置的是内容区的大小，可以使用box-sizing=&quot;border-box&quot;;设置为边框盒子</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: aquamarine;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                边框（border），边框属性盒子边缘，边缘里边属性盒子内部，出了边框都是盒子外部</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    边框的大小会影响整个盒子的大小</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                设置边框，至少要设置三个样式</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    边框的宽度border-width</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    边框的颜色border-color</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    边框的样式border-style</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            		solid实线</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            		</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-width</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-color</span>: red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-style</span>: solid;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        盒模型、盒子模型、框模型（box model）</span></span><br><span class="line"><span class="comment">            -css将页面中的所有元素都设置为了一个矩形的盒子</span></span><br><span class="line"><span class="comment">            -将元素设置为矩形的盒子后，对页面的布局就是将不同的盒子摆放到不同的位置</span></span><br><span class="line"><span class="comment">            -每一个盒子都由以下几个部分组成</span></span><br><span class="line"><span class="comment">                -内容区（content）</span></span><br><span class="line"><span class="comment">                -内边距（padding）</span></span><br><span class="line"><span class="comment">                -边框（border）</span></span><br><span class="line"><span class="comment">                外边距(margin)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="3、盒子模型-边框"><a href="#3、盒子模型-边框" class="headerlink" title="3、盒子模型-边框"></a>3、盒子模型-边框</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                边框</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    边框宽度</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    边框颜色</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    边框的样式</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            border-width: 10px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                默认值：一般是3个像素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                可以指定四个方向的边框宽度</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    值的情况：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        四个值：上 右 下 左</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        三个值：上 左右 下</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        两个值：上下 左右</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        一个值：上下左右   </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                除了border-width还有border-x-width</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    x可以是top，right，bottom，left </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                颜色风格也是如此</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border-top-width: 10px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border-width: 10px 20px 30px 40px; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                border-color用来指定边框的颜色，同样可以分别指定四个边框的颜色</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                也可以省略不写，省略了自动使用color的颜色值</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border-color: orange; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                border-style指定边框的样式</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    solid实线</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    dotted点状虚线</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    dashed虚线</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    double双线</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    默认值是none：没有边框</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border-style: solid; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                border简写属性：可以同时设置边框所有样式，没有顺序要求</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                除了border以外还有四个border-xx</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    border-top</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    border-right</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    border-bottom</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    border-left</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            </span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: solid <span class="number">10px</span> orange;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="4、盒子模型-内边距"><a href="#4、盒子模型-内边距" class="headerlink" title="4、盒子模型-内边距"></a>4、盒子模型-内边距</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: aquamarine;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">10px</span> orange solid;</span></span><br><span class="line"><span class="language-css">       </span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            内边距（padding）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                -内容区和边框之间的距离是内边距</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                -一共有四个方向的内边距</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    padding-top</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    padding-right</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    padding-bottom</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    padding-left</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                -内边距的设置会影响盒子的大小</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                -背景颜色会延申到内边距上</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                -盒子的可见框的大小，由内容区和边框和内边距共同决定</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    所以在计算盒子大小时，需要将这三个区域加一起计算</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                </span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* padding-top: 100px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        padding-left: 100px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        padding-right: 100px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        padding-bottom: 100px; */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span> <span class="number">40px</span> ;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">    </span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.inner</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="5、盒子模型-外边距"><a href="#5、盒子模型-外边距" class="headerlink" title="5、盒子模型-外边距"></a>5、盒子模型-外边距</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: aquamarine ;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">10px</span> red solid;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                外边距（margin）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -外边距不会影响盒子可见性的大小</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -但是会影响盒子的位置</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -一共有四个方向的外边距</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        margin-top</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            上外边距，设置一个正值，元素向下移动</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        margin-right</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            默认情况下设置margin-right不会产生任何效果</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        margin-bottom</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            下外边距，设置一个正值，其下边的元素会向下移动</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        margin-left</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            左外边距，设置一个正值，元素会向右移动</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -元素在页面中是按照自左向右的顺序排列的</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        所以默认情况下如果我们设置的左和上外边距就会移动自身元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        而设置下和右外边距会移动其他元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -margin也可以设置负值，如果是负值则元素会向相反的方向移动</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -margin的简写</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        margin可以同时设置四个方向的外边距，用法都一样</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    ！！！！margin会影响盒子实际占用页面的大小</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* margin-top: 100px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            margin-left: 100px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* margin-bottom: 100px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* margin-right: 100px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* margin-bottom: 100px;*/</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* margin-top: -200px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            margin-left: -200px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* margin-bottom: -100px; */</span></span></span><br><span class="line"><span class="language-css">           </span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">280px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">280px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="6、盒子-水平布局"><a href="#6、盒子-水平布局" class="headerlink" title="6、盒子-水平布局"></a>6、盒子-水平布局</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.outer</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: orange <span class="number">10px</span> solid;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.inner</span>&#123;</span></span><br><span class="line"><span class="language-css">           <span class="attribute">width</span>:<span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">           <span class="attribute">height</span>: <span class="number">200px</span>; </span></span><br><span class="line"><span class="language-css">           <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">           <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                元素的水平方向的布局：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    元素在器父元素中水平方向的位置由以下几个属性共同决定：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        margin-left</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        border-left</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        padding-left</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        width</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        padding-right</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        border-right</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        margin-right</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                一个元素在其父元素中，水平布局必须要满足以下的等式</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            margin-left+border-left+padding0-left+width+margin-right+border-right+padding-right=其父元素内容区的宽度（必须满足）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            0+0+0+200+0+0+0 = 800？</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            以上等式必须满足，如果相加结果使等式不满足，则称为过度约束，则等式会自动调整</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                -调整的情况：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -如果这七个值中没有为auto的情况，则浏览器会自动调整margin-right的值以使等式满足</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -这7个值钟有三个值可以设置为auto</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        width</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        margin-left</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        margin-right</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        -如果某个值为auto，则会调整auto那个值以使等式满足</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            -例子：width为auto，其他不设置，则width为被调整为800</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        width默认为auto</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        -如果将一个宽度和一个外边距设置为auto，则宽度会调整到最大，设置为auto的外边距会自动为0</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        -如果将三个值都设置为auto，则外边距都是0，宽度设置为最大</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        -如果将两个外边距设置为auto，width为固定值，则会外边距平分</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            所以我们经常利用这个特点来使一个元素在其父元素中水平居中</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            示例：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                width：xxpx;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                margin:0 auto;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                             </span></span></span><br><span class="line"><span class="comment"><span class="language-css">           */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;outer&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="7、盒子-垂直方向布局"><a href="#7、盒子-垂直方向布局" class="headerlink" title="7、盒子-垂直方向布局"></a>7、盒子-垂直方向布局</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.outer</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">600px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                默认情况下父元素的高度被内容撑开</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.inner</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>:<span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                子元素在父元素的内容区中排列的</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                如果子元素的大小超过了父元素，则子元素会从父元素中溢出</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                使用overflow属性来设置父元素如何处理溢出的子元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                可选项</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    visible：默认值，子元素会从父元素溢出，在父元素外的位置显示</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    hidden：溢出内容会被裁剪不会显示</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    scroll：生成两个滚动条，通过滚动条来查看完整的内容</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    auto：根据需要生成滚动条</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                overflow-x</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                overflow-y</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;div class=&quot;outer&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="comment">        &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="comment">    &lt;/div&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="8、外边距的折叠"><a href="#8、外边距的折叠" class="headerlink" title="8、外边距的折叠"></a>8、外边距的折叠</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>,<span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置一个下外边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            垂直外边距的重叠（折叠）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                -相邻的垂直方向外边距会发生重叠现象</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                -兄弟元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -兄弟元素间的相邻的垂直外边距会取两者之间的较大值（两者都是正值）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -特殊情况：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        如果相邻的外边距一正一负，则取两者的和</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        如果相邻的外边距都是负值，则取绝对值较大的</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -兄弟元素之间的外边距的重叠，对于开发时有利的，所以我们不需要处理</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                -父子元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -父子元素间相邻的外边距，子元素会传递给父元素（上外边距）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -父子外边距的折叠会影响到页面的布局，必须要进行处理</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置一个上外边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box3</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;<span class="comment">/*199px*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* padding-top: 100px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border: top 1px #bfa solid ; */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box4</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;<span class="comment">/*99px*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* margin-top: 100px; */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;div class=&quot;box1&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="comment">    &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="9、行内元素的盒模型"><a href="#9、行内元素的盒模型" class="headerlink" title="9、行内元素的盒模型"></a>9、行内元素的盒模型</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.s1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                行内元素的盒模型</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -行内元素不支持设置宽度和高度</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -行内元素可以设置padding。但是垂直方向不会影响页面的布局（会覆盖）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -行内元素可以设置border，垂直方向不会影响页面布局</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -行内元素可以设置margin，垂直方向不会影响页面布局</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* width: 100px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            height: 100px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* padding: 100px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border: 100px solid red; */</span></span></span><br><span class="line"><span class="language-css">            </span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                display用来设置元素的显示类型</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    可选值：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        inline将元素设置为行内元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        block将元素设置为块元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        inlin-block 将元素设置为行内块元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            行内块元素，既可以设置宽度和高度又不会独占一行</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        table 将元素设置为一个表格</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        none元素不在页面中显示。隐藏且不占据位置</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                visbility用来设置元素的显示状态</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    可选择：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        visible默认值，元素在页面中正常显示</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        hidden元素在页面中隐藏不显示，但依然会占据页面的位置</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* display: block; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>超链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;s1&quot;</span>&gt;</span>我是span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="10、浏览器的默认样式"><a href="#10、浏览器的默认样式" class="headerlink" title="10、浏览器的默认样式"></a>10、浏览器的默认样式</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./css/normalize.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;link rel=&quot;stylesheet&quot; href=&quot;./css/reset.css&quot;&gt; --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        重置样式表,专门用来对浏览器的样式进行重置的</span></span><br><span class="line"><span class="comment">            reset.css直接去除了浏览器的默认样式</span></span><br><span class="line"><span class="comment">            normalize.css对默认样式进行统一</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            默认样式：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                -通常情况下，浏览器都会为元素设置一些默认样式</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                -默认样式的存在会影响页面的布局，</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    通常情况下我们在编写网页时要去除浏览器的默认样式（pc端网页）</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css">       <span class="comment">/* body&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            margin: 0px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        p&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            margin: 0px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* ul&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            margin: 0px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            padding: 0px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            /* 去除项目符号 * /</span></span></span><br><span class="line"><span class="comment"><span class="language-css">           list-style: none; </span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* *&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            margin: 0px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            padding: 0px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="11、盒子的尺寸"><a href="#11、盒子的尺寸" class="headerlink" title="11、盒子的尺寸"></a>11、盒子的尺寸</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">10px</span> red solid;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                默认情况下，盒子的可见框的大小由内容区，内边距和边框共同决定 </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    box-sizing，用来设置盒子尺寸的计算方式（设置width和height的作用）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        可选值：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            content-box默认值，宽度和高度用来设置内容区的大小</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            border-box 宽度和高度用来设置整个盒子的可见框的大小</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                width和height指的是内容区和内边距和边框的总大小</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-sizing</span>: content-box;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="12、轮廓阴影和圆角"><a href="#12、轮廓阴影和圆角" class="headerlink" title="12、轮廓阴影和圆角"></a>12、轮廓阴影和圆角</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border: 10px red solid; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                outline用来设置元素的轮廓线。用法和border一样</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    轮廓和边框不同的点，就是轮廓不会影响到可见框的大小</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                box-shadow用来设置元素的阴影效果，不会影响页面的布局</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    第一个值：水平偏移量 设置阴影的水平位置 正值向右移动，负值向左移动</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    第二个值：垂直偏移量 设置阴影额垂直位置 正值向下移动，负值向上移动</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    第三个值：阴影的模糊半径</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    第四个值：阴影的颜色</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span> gray;</span></span><br><span class="line"><span class="language-css">            </span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* .box1:hover&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            outline: 10px red solid;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                border-radius: ;设置圆角</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                还有另外四个方向的样式</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                左上 右上 左下 右下</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 可以指定两个值，第一个x方向的半径，第二个y方向的半径 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border-top-left-radius: 50px 80px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                可以分别指定四个角的值</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                四个值：左上 右上 右下 左下（顺时针）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                三个值：左上 右上/左下 右下</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                两个值：左上/右下 右上/左下</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                一个值：全部角</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 用/隔开指定两个值，变椭圆的两个半径 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border-radius: 30px / 70px;*/</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 将元素设置为一个圆形 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border-radius: 50%; */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;div class=&quot;box1&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="comment">    &lt;span&gt;hello&lt;/span&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="四、练习"><a href="#四、练习" class="headerlink" title="四、练习"></a>四、练习</h2><h3 id="1、图片列表"><a href="#1、图片列表" class="headerlink" title="1、图片列表"></a>1、图片列表</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>图片列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../layout/css/reset.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置body的背景颜色 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: antiquewhite;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置外部ul的样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.img-list</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置ul宽度 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>:<span class="number">190px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置ul高度 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">470px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 裁剪溢出的内容 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 使ul在页面中居中 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">244</span>, <span class="number">244</span>, <span class="number">244</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        </span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置li的位置 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.img-list</span> <span class="selector-tag">li</span><span class="selector-pseudo">:not</span>(last-child)&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">9px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置图片大小 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.img-list</span> <span class="selector-tag">img</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;div&gt;</span></span><br><span class="line"><span class="comment">        &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;&quot; alt=&quot;&quot;&gt;&lt;/a&gt;</span></span><br><span class="line"><span class="comment">        &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;&quot; alt=&quot;&quot;&gt;&lt;/a&gt;</span></span><br><span class="line"><span class="comment">        &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;&quot; alt=&quot;&quot;&gt;&lt;/a&gt;</span></span><br><span class="line"><span class="comment">    &lt;/div&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;img-list&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/01/1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/01/2.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/01/3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2、京东的左侧导航"><a href="#2、京东的左侧导航" class="headerlink" title="2、京东的左侧导航"></a>2、京东的左侧导航</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>京东侧边导航<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../layout/css/reset.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置body背景颜色 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置网页背景颜色方便查看 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置菜单外部容器 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.left-nav</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置宽度 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">190px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置高度 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">450px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置padding */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置背景颜色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置菜单内部item */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.left-nav</span> <span class="selector-class">.item</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 要让一个文字在其父元素中垂直居中，只需要将父元素的line-height设置为一个和父元素height一样的值 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* margin-left: 18px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置item的左内边距，将文字向右移动18px */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding-left</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 为item设置一个鼠标移入的状态 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.item</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#d9d9d9</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置超链接的颜色 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.item</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置字体大小 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置字体颜色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">9</span>, <span class="number">5</span>, <span class="number">5</span>);</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 去除下划线 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.item</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#c81623</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 创建一个外部的容器 nav(div) div(div) ul(li) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;left-nav&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>家用电器<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>手机<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>运营商<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>数码<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>电脑<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>办公<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>家居<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>家具<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>家装<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>厨具<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>男装<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>女装<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>童装<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>内衣<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>美妆<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>个护清洁<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>宠物<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>女鞋/</span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>箱包<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>钟表<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>珠宝<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>男鞋<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>运动<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>户外<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>房产<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>汽车<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>汽车用品<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>母婴<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>玩具乐器<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>食品<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>酒类<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>生鲜<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>特产<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>艺术<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>礼品鲜花<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>农资绿植<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>医药保健<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>计生情趣<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>图书<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>文娱<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>电子书<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>机票<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>酒店<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>旅游<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>生活<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>理财<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>众筹<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>白条<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>保险<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>安装<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>维修<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>清洗<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>二手<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>工业品<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="3、网易新闻导航"><a href="#3、网易新闻导航" class="headerlink" title="3、网易新闻导航"></a>3、网易新闻导航</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>网易新闻导航<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../layout/css/reset.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>:aqua ;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置容器的样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.news-wrapper</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置宽度 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置高度 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">357px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置居中 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>:<span class="number">50px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置背景颜色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置上边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置news-title */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.news-title</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 为了边框和文字宽度一致，需要将h2转换为行内块元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-top</span>: <span class="number">1px</span> solid red;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 通过margin-top将h2上移，盖住上边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: -<span class="number">1px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置title中的超链接 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.news-title</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 去除下划线 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置颜色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#40406B</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置文字的加粗效果 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="language-css">             <span class="comment">/* 统一去除下划线 */</span></span></span><br><span class="line"><span class="language-css">             <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置图片容器的高度 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.news-img</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置图片文字效果 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.news-img</span> <span class="selector-class">.img-title</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* font-size: 15px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 向上移动文字 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: -<span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置字体颜色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置加粗 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding-left</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置新闻列表 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.news-list</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置上外边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置左外边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* padding-left: 14px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置项目符号 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* list-style: square; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置li */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.news-list</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置下外边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">17px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置li中的文字 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.news-list</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置字体大小 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置字体颜色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#666</span>;</span></span><br><span class="line"><span class="language-css">            </span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置a标签鼠标移入效果 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.news-list</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 伪元素为每一个li添加项目符号 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.news-list</span> <span class="selector-tag">li</span><span class="selector-pseudo">::before</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">content</span>: <span class="string">&#x27;■&#x27;</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">218</span>, <span class="number">218</span>, <span class="number">218</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 创建新闻列表外层的容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;news-wrapper&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 创建一个标题标签 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;news-title&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>体育<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 创建图片容器 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;news-img&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/03/1.jpeg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;费德勒&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 创建图片标题 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;img-title&quot;</span>&gt;</span></span><br><span class="line">                    费德勒首负迪米 扶额摇头不满发挥</span><br><span class="line">                <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 新闻列表 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;news-list&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>乔治:我爱LA 喜欢和LBJ一起打球<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>格林:3年前降薪就在等KD 特别T恤嘲讽LBJ<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>塔克4000双鞋让保罗羡慕嫉妒 乔丹被震惊<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>CBA下季新赛制:常规赛4组循环 增至46轮<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="4、w3school导航条"><a href="#4、w3school导航条" class="headerlink" title="4、w3school导航条"></a>4、w3school导航条</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>w3school导航条<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../layout/css/reset.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav-wrapper</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: gainsboro;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>:<span class="number">1100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* padding-left: 32px; */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* width: 170px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* margin-right: 72px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">127</span>, <span class="number">127</span>, <span class="number">126</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">35px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#3F3F3F</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav-wrapper&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>HTML/CSS<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Browser Side<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Server Side<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Programming<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>XML<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Web Building<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Reference<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>导航条<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../layout/css/reset.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置宽度高度*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">48px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">1200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置背景颜色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: gainsboro;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置居中 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置nav中的li */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置li向左浮动，已使菜单横向排列 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置li高度和垂直居中 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">48px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* height: 48px; */</span></span></span><br><span class="line"><span class="language-css">            </span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 将a转换为块元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 去除下划线 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 字体颜色和大小 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#777777</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">39px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置鼠标移入效果 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#3F3F3F</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#E8E7E3</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 创建导航条的结构 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>HTML/CSS<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Browser Side<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Server Side<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Programming<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Xml<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Web Buliding<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Reference<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="5、京东轮播图（仅布局）"><a href="#5、京东轮播图（仅布局）" class="headerlink" title="5、京东轮播图（仅布局）"></a>5、京东轮播图（仅布局）</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>京东轮播图<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../layout/css/reset.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置图片的容器 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.img-list</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">590px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">470px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                为ul开启相对定位，目的是使ul中的pointer可以相对于ul定位而不是相对于初始包含块定位</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.img-list</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 通过修改元素的层级来显示指定的图片 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.img-list</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">4</span>)&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">z-index</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置导航点的样式 */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.pointer</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">z-index</span>: <span class="number">9999</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.pointer</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* display: block; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置元素向左浮动 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0px</span> <span class="number">2px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.6</span>);</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 将背景颜色只设置到内容区，边框和内边距不再有背景颜色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-clip</span>: content-box;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">2px</span> solid transparent;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.pointer</span> <span class="selector-tag">a</span><span class="selector-class">.active</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.pointer</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>:<span class="number">2px</span> solid <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.6</span>) ;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;img-list&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/05/1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/05/2.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/05/3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/05/4.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/05/5.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/05/6.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/05/7.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/05/8.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pointer&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">ul</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="6、京东顶栏导航条"><a href="#6、京东顶栏导航条" class="headerlink" title="6、京东顶栏导航条"></a>6、京东顶栏导航条</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>京东顶部导航条<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../layout/css/reset.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./fa/css/all.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置字体 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font</span>: <span class="number">12px</span>/<span class="number">1.5</span> Microsoft YaHei,HeTi SC,tahoma,arial;</span></span><br><span class="line"><span class="language-css">            </span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.clearfix</span><span class="selector-pseudo">::before</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: table;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">clear</span>: both;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置外部容器样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.top-bar-wrapper</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置宽度 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置背景颜色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#E3E4E5</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* height: 30px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: <span class="number">1px</span> <span class="number">#dddddd</span> solid;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置行高 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置内部容器样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.top-bar</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 固定宽度 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">1190px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置水平居中 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">         <span class="comment">/* 设置字体颜色样式 */</span></span></span><br><span class="line"><span class="language-css">         <span class="selector-class">.top-bar</span> <span class="selector-tag">a</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.top-bar</span> <span class="selector-tag">span</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.top-bar</span> <span class="selector-tag">i</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#999</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置鼠标移入效果 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.top-bar</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.top-bar</span> <span class="selector-tag">a</span><span class="selector-class">.highlight</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#f10215</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置location */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.location</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置location下的小图标 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.location</span> <span class="selector-class">.fas</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* font-size: 14px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#f10215</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置城市列表效果 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.location</span> <span class="selector-class">.city-list</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">436px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgb</span>(<span class="number">204</span>, <span class="number">204</span>, <span class="number">204</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置绝对定位，使其不占据页面的位置 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">31px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">z-index</span>: <span class="number">999</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">2px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 当鼠标移入到location时，让city-list显示 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.location</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.city-list</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.current-city</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-color: white;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            border: 1px solid rgb(204,204,204);</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            border-bottom: none; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid transparent;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">z-index</span>: <span class="number">9999</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置current-city的移入效果 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.location</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.current-city</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgb</span>(<span class="number">204</span>,<span class="number">204</span>,<span class="number">204</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding-bottom</span>: <span class="number">1px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置shortcut */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.shortcut</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置分割线 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.shortcut</span> <span class="selector-class">.line</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">1px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">204</span>, <span class="number">202</span>, <span class="number">202</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">12px</span> <span class="number">12px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置li */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.shortcut</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">       </span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 创建外围容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;top-bar-wrapper clearfix&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 创建内层容器 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;top-bar&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 左侧位置菜单 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;location&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;current-city&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-map-marker-alt&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">&lt;!-- 放置城市列表 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;city-list&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 右侧快捷菜单 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;shortcut clearfix&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>你好,请登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;highlight&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>免费注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 分割线 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>我的订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>我的京东<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-angle-down&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>京东会员<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;highlight&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>企业采购<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-angle-down&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>客户服务<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-angle-down&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>网站导航<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-angle-down&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>手机京东<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="7、背景练习1——背景重复"><a href="#7、背景练习1——背景重复" class="headerlink" title="7、背景练习1——背景重复"></a>7、背景练习1——背景重复</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">990px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">32px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-image: url(&quot;./img/07/bg.png&quot;);</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            background-repeat: repeat-x; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;./img/07/bg.png&quot;</span>) repeat-x;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="8、按钮练习1-0"><a href="#8、按钮练习1-0" class="headerlink" title="8、按钮练习1.0"></a>8、按钮练习1.0</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:link</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">93px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">29px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;./img/08/link.png&quot;</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;./img/08/hover.png&quot;</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;./img/08/active.png&quot;</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            图片属于网页中的外部资源，外部资源都需要浏览器单独发送请求加载</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                浏览器加载外部资源是按需加载的，用则加载，不用则不需要加载</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                像我们上边的练习link会首先加载，而hover和active会在指定状态触发时才会加载</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="9、按钮练习2-0"><a href="#9、按钮练习2-0" class="headerlink" title="9、按钮练习2.0"></a>9、按钮练习2.0</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:link</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">93px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">29px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;./img/09/btn.png&quot;</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-position</span>: -<span class="number">93px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-position</span>: -<span class="number">186px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            解决图片闪烁的问题</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                可以将多个小图片保存到一个大图片中，然后通过调整background-position来显示图片的部分</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                这样图片会同时加载到网页中，就可以有效的避免出现闪烁的问题</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                这个技术在网页中应用很广泛，被称为css-Sprite，这种图被称为雪碧图</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            雪碧图的使用步骤：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                1、先确定要使用的图标</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                2、测量图标的大小</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                3、根据测量结果来创建一个元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                4、将雪碧图设置为元素的背景图片</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                5、设置偏移量以显示正确的图标</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            雪碧图的特点：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                一次性将多个图片加载进页面，降低请求的次数，加快访问速度，提升用户体验</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">           <span class="attribute">width</span>: <span class="number">128px</span>; </span></span><br><span class="line"><span class="language-css">           <span class="attribute">height</span>: <span class="number">46px</span>;</span></span><br><span class="line"><span class="language-css">           <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">./img/09/amazon-sprite_.png</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">42px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;./img/09/amazon-sprite_.png&quot;</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-position</span>: -<span class="number">58px</span> -<span class="number">338px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="10、电影卡片"><a href="#10、电影卡片" class="headerlink" title="10、电影卡片"></a>10、电影卡片</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../layout/css/reset.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./fa/css/all.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.outer</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">240px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置阴影 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">3</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置图片 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.img-wrapper</span> <span class="selector-tag">img</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">vertical-align</span>: bottom;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.info</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#acaaaa</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置标题 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.info</span> <span class="selector-class">.title</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#717171</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">13px</span> <span class="number">0</span> <span class="number">15px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* .info .category&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            font-size: 14px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            color: #acaaaa;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.info</span> <span class="selector-class">.category</span> <span class="selector-tag">i</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">7px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置简介的样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.info</span> <span class="selector-class">.intro</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置评价样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.star-wrapper</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">46px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">46px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="number">#e9e9e9</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#ddd</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置星星样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.star</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.star-wrapper</span> <span class="selector-class">.light</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#b9cb41</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置微博 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.star-wrapper</span> <span class="selector-class">.weibo</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 创建一个外层容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;outer&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 创建图片容器 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;img-wrapper&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/10/1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 创建内容区容器 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span><br><span class="line">                熊出没之拯救公主</span><br><span class="line">            <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;category&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-map-marker-alt&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                动画</span><br><span class="line">            <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;intro&quot;</span>&gt;</span></span><br><span class="line">                熊大和熊二经历九九八十一难成功救下了美丽的公主!</span><br><span class="line">            <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 创建评分的容器 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;star-wrapper&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 创建星星 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;star&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-star light&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-star light&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-star light&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-star&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 创建微博图标 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;weibo&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;fab fa-weibo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="11、米兔的动画"><a href="#11、米兔的动画" class="headerlink" title="11、米兔的动画"></a>11、米兔的动画</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">271px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">132px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;./img/11/bigtap-mitu-queue-big.png&quot;</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: all <span class="number">1s</span> <span class="built_in">steps</span>(<span class="number">3</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-position</span>: -<span class="number">396px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="12、奔跑的少年"><a href="#12、奔跑的少年" class="headerlink" title="12、奔跑的少年"></a>12、奔跑的少年</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">256px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">256px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>,auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;./img/12/bg2.png&quot;</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation</span>: run <span class="number">1s</span> <span class="built_in">steps</span>(<span class="number">6</span>) infinite;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 创建关键帧 */</span></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@keyframes</span> run&#123;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">form</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">to</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-position</span>: -<span class="number">1536px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="13、鸭子表"><a href="#13、鸭子表" class="headerlink" title="13、鸭子表"></a>13、鸭子表</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        *&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.clock-wrapper</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-color: #bfa; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border:10px solid black; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">./img/13/bg3.jpg</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-size</span>: cover;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.clock-wrapper</span>&gt;<span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置时针 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.hour-wrapper</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">70%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">70%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-color: #bfa; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation</span>: run <span class="number">86400</span> linear infinite;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.hour</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">6px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置分针 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.min-wrapper</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">80%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">80%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-color: #bfa; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation</span>: run <span class="number">3600s</span> <span class="built_in">steps</span>(<span class="number">3600</span>) infinite;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.min</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置秒针 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.sec-wrapper</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">95%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">95%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation</span>: run <span class="number">60s</span> <span class="built_in">steps</span>(<span class="number">60</span>) infinite;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.sec</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">2px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#f00</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* .sec-wrapper&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            width: 500px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            height: 500px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            background-color: #bfa;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            border-radius: 50%;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            animation: run 60s;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* .sec&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            height: 250px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            width: 4px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            background-color: red;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            margin: 0 auto;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            animation: run 60s;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 旋转的关键帧 */</span></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@keyframes</span> run &#123;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">from</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">to</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;div class=&quot;sec-wrapper&quot;&gt;&lt;div class=&quot;sec&quot;&gt;&lt;/div&gt;&lt;/div&gt; --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 创建表的容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;clock-wrapper&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 创建时针 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;hour-wrapper&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;hour&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 创建分针 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;min-wrapper&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;min&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 创建秒针 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sec-wrapper&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sec&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="14、复仇者联盟"><a href="#14、复仇者联盟" class="headerlink" title="14、复仇者联盟"></a>14、复仇者联盟</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">html</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">perspective</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.cube</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-color: #bfa; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置3d变形效果 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: rotateX(45deg) rotateZ(45deg); */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation</span>: rotate <span class="number">20s</span> infinite linear;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform:rotateY(45deg) scaleZ(2); */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.cube</span>&gt;<span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 为元素设置透明效果 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">opacity</span>: <span class="number">0.7</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">vertical-align</span>: top;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box3</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box4</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box5</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>:<span class="built_in">rotateY</span>(<span class="number">180deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box6</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">0deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@keyframes</span> rotate &#123;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">form</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>:<span class="built_in">rotateX</span>(<span class="number">0</span>) <span class="built_in">rotateZ</span>(<span class="number">0</span>)</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">to</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>:<span class="built_in">rotateX</span>(<span class="number">1turn</span>) <span class="built_in">rotateZ</span>(<span class="number">1turn</span>)</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 创建一个外部的容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cube&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 引入图片 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/14/1.jpg&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/14/2.jpg&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/14/3.jpg&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/14/4.jpg&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box5&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/14/5.jpg&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box6&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/14/6.jpg&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="15、弹性的w3导航条"><a href="#15、弹性的w3导航条" class="headerlink" title="15、弹性的w3导航条"></a>15、弹性的w3导航条</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../layout/css/reset.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">1210px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">48px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">48px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#E8E7E3</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置增长系数 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-grow</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#808080</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#636363</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>HTML/CSS<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Browser Side<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Server Side<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Programming<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>XML<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Web Building<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Reference<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="16、淘宝导航条——弹性"><a href="#16、淘宝导航条——弹性" class="headerlink" title="16、淘宝导航条——弹性"></a>16、淘宝导航条——弹性</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        *&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置外层容器 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置每一行的容器 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav-inner</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置为弹性容器 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置主轴的空白分布 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: space-around;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.item</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">18%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-color: #bfa; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* flex: auto; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.item</span> <span class="selector-tag">img</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置图片宽度和父元素宽度一样 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.item</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 创建一个外层的容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav-inner&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/16/1.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>天猫<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/16/2.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>聚划算<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/16/3.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>天猫国际<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/16/4.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>外卖<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/16/5.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>天猫超市<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav-inner&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/16/6.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>充值中心<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/16/7.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>飞猪旅行<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/16/8.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>领金币<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/16/9.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>拍卖<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/16/10.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>分类<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="17、移动端网页"><a href="#17、移动端网页" class="headerlink" title="17、移动端网页"></a>17、移动端网页</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>学习<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./css/style.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./fa/css/all.min.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 创建头部容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;top-bar&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;menu-btn&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-stream&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;logo&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                爱学习</span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;search-btn&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-search&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- banner --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;banner&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/17/banner.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;menu&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;course&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-book&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            我的课程</span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;star&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-cut&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            明星讲师</span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;sub&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-envelope&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            我的订阅</span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;download&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-globe&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            我的下载</span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 课程列表 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;course-list&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 列表标题 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>最新课程<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;more&quot;</span>&gt;</span>更多+<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item-list&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 封面 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cover&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/17/cover.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 小标题 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;course-title&quot;</span>&gt;</span></span><br><span class="line">                    摄影课程</span><br><span class="line">                <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 用户信息 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;user-info&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;avatar&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/17/avatar.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nickname&quot;</span>&gt;</span></span><br><span class="line">                        令狐冲</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 封面 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cover&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/17/cover.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 小标题 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;course-title&quot;</span>&gt;</span></span><br><span class="line">                    摄影课程</span><br><span class="line">                <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 用户信息 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;user-info&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;avatar&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/17/avatar.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nickname&quot;</span>&gt;</span></span><br><span class="line">                        令狐冲</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 封面 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cover&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/17/cover.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 小标题 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;course-title&quot;</span>&gt;</span></span><br><span class="line">                    摄影课程</span><br><span class="line">                <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 用户信息 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;user-info&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;avatar&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/17/avatar.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nickname&quot;</span>&gt;</span></span><br><span class="line">                        令狐冲</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 封面 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cover&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/17/cover.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 小标题 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;course-title&quot;</span>&gt;</span></span><br><span class="line">                    摄影课程</span><br><span class="line">                <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 用户信息 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;user-info&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;avatar&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/17/avatar.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nickname&quot;</span>&gt;</span></span><br><span class="line">                        令狐冲</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;course-list&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 列表标题 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>最新课程<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;more&quot;</span>&gt;</span>更多+<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item-list&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 封面 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cover&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/17/cover.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 小标题 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;course-title&quot;</span>&gt;</span></span><br><span class="line">                    摄影课程</span><br><span class="line">                <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 用户信息 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;user-info&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;avatar&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/17/avatar.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nickname&quot;</span>&gt;</span></span><br><span class="line">                        令狐冲</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 封面 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cover&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/17/cover.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 小标题 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;course-title&quot;</span>&gt;</span></span><br><span class="line">                    摄影课程</span><br><span class="line">                <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 用户信息 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;user-info&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;avatar&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/17/avatar.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nickname&quot;</span>&gt;</span></span><br><span class="line">                        令狐冲</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 封面 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cover&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/17/cover.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 小标题 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;course-title&quot;</span>&gt;</span></span><br><span class="line">                    摄影课程</span><br><span class="line">                <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 用户信息 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;user-info&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;avatar&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/17/avatar.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nickname&quot;</span>&gt;</span></span><br><span class="line">                        令狐冲</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 封面 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cover&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/17/cover.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 小标题 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;course-title&quot;</span>&gt;</span></span><br><span class="line">                    摄影课程</span><br><span class="line">                <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 用户信息 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;user-info&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;avatar&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/17/avatar.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nickname&quot;</span>&gt;</span></span><br><span class="line">                        令狐冲</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>less</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">@total-width:</span> <span class="number">750</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.w</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: (<span class="number">693</span>/<span class="number">40rem</span>);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置根元素</span></span><br><span class="line"><span class="selector-tag">html</span>&#123;</span><br><span class="line">    <span class="comment">// 设置rem比值</span></span><br><span class="line">    <span class="attribute">font-size</span>: (<span class="number">100vw</span>/<span class="variable">@total-width</span>) * <span class="number">40</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#eff0f4</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置头部header</span></span><br><span class="line"><span class="selector-class">.top-bar</span>:<span class="selector-tag">extend</span>(.w)&#123;</span><br><span class="line">    <span class="comment">// 设置弹性容器</span></span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="comment">// 设置高度</span></span><br><span class="line">    <span class="attribute">height</span>: (<span class="number">175</span>/<span class="number">40rem</span>);</span><br><span class="line">    <span class="comment">// 设置对齐方式</span></span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">    <span class="comment">//设置辅轴对齐方式</span></span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">line-height</span>: (<span class="number">175</span>/<span class="number">40rem</span>);</span><br><span class="line">    <span class="selector-tag">a</span>&#123;</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#24253d</span>;</span><br><span class="line">        <span class="attribute">font-size</span>: (<span class="number">50</span>/<span class="number">40rem</span>) ;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">i</span>&#123;</span><br><span class="line">            <span class="attribute">color</span>: <span class="number">#999</span>;</span><br><span class="line">            <span class="attribute">font-size</span>: (<span class="number">40</span>/<span class="number">40rem</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置banner</span></span><br><span class="line"><span class="selector-class">.banner</span>:<span class="selector-tag">extend</span>(.w)&#123;</span><br><span class="line">    <span class="selector-tag">img</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置中间菜单</span></span><br><span class="line"><span class="selector-class">.menu</span>:<span class="selector-tag">extend</span>(.w)&#123;</span><br><span class="line">    <span class="comment">// 确定元素的高度</span></span><br><span class="line">    <span class="attribute">height</span>: (<span class="number">329</span>/<span class="number">40rem</span>);</span><br><span class="line">    <span class="comment">// 设置弹性元素</span></span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="comment">// 设置换行</span></span><br><span class="line">    <span class="attribute">flex-flow</span>: row wrap;</span><br><span class="line">    <span class="comment">// 设置对齐方式</span></span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">    <span class="comment">// 设置辅轴方向的对齐方式</span></span><br><span class="line">    <span class="attribute">align-content</span>: space-evenly ;</span><br><span class="line">    <span class="comment">// 设置框的大小</span></span><br><span class="line">    <span class="selector-tag">a</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: (<span class="number">327</span>/<span class="number">40rem</span>);</span><br><span class="line">        <span class="attribute">height</span>: (<span class="number">104</span>/<span class="number">40rem</span>);</span><br><span class="line">        <span class="attribute">line-height</span>: (<span class="number">104</span>/<span class="number">40rem</span>);</span><br><span class="line">        <span class="attribute">color</span>: white;</span><br><span class="line">        <span class="attribute">border-radius</span>: (<span class="number">10</span>/<span class="number">40rem</span>);</span><br><span class="line">        <span class="selector-tag">i</span>&#123;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span> (<span class="number">20</span>/<span class="number">40rem</span>) <span class="number">0</span> (<span class="number">38</span>/<span class="number">40rem</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.course</span>&#123;</span><br><span class="line">        <span class="attribute">background-color</span>:<span class="number">#f97053</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.star</span>&#123;</span><br><span class="line">        <span class="attribute">background-color</span>:<span class="number">#cd6efe</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.sub</span>&#123;</span><br><span class="line">        <span class="attribute">background-color</span>:<span class="number">#fe4479</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.download</span>&#123;</span><br><span class="line">        <span class="attribute">background-color</span>:<span class="number">#1bc4fb</span>; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置课程列表</span></span><br><span class="line"><span class="selector-class">.course-list</span>:<span class="selector-tag">extend</span>(.w)&#123;</span><br><span class="line">    <span class="attribute">height</span>: (<span class="number">394</span>/<span class="number">40rem</span>);</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: (<span class="number">46</span>/<span class="number">40rem</span>);</span><br><span class="line">    <span class="selector-class">.title</span>&#123;</span><br><span class="line">        <span class="attribute">display</span>: flex;</span><br><span class="line">        <span class="comment">// 主轴空间</span></span><br><span class="line">        <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">        <span class="comment">// 辅轴对齐方式</span></span><br><span class="line">        <span class="attribute">align-items</span>: center;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">h2</span>&#123;</span><br><span class="line">            <span class="attribute">font-size</span>: (<span class="number">33</span>/<span class="number">40rem</span>);</span><br><span class="line">            <span class="attribute">color</span>:<span class="number">#24253d</span>;</span><br><span class="line">            <span class="attribute">border-left</span>: <span class="number">2px</span> solid <span class="number">#3a84ff</span>;</span><br><span class="line">            <span class="attribute">padding-left</span>: <span class="number">5px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">a</span>&#123;</span><br><span class="line">            <span class="attribute">font-size</span>: (<span class="number">28</span>/<span class="number">40rem</span>);</span><br><span class="line">            <span class="attribute">color</span>: <span class="number">#656565</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置课程列表</span></span><br><span class="line"><span class="selector-class">.item-list</span>&#123;</span><br><span class="line">    <span class="attribute">overflow</span>: auto;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="comment">// flex-flow: wrap;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.item</span>&#123;</span><br><span class="line">    <span class="attribute">flex</span>: none;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">    <span class="attribute">width</span>: (<span class="number">320</span>/<span class="number">40rem</span>);</span><br><span class="line">    <span class="attribute">height</span>: (<span class="number">324</span>/<span class="number">40rem</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> (<span class="number">10</span>/<span class="number">40rem</span>) <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">3</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: (<span class="number">10</span>/<span class="number">40rem</span>);</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>  (<span class="number">22</span>/<span class="number">40rem</span>);</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-evenly;</span><br><span class="line">    <span class="attribute">margin-right</span>: (<span class="number">45</span>/<span class="number">40rem</span>);</span><br><span class="line">    <span class="comment">// 设置图片宽度</span></span><br><span class="line">    <span class="selector-tag">img</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">vertical-align</span>: top;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 课程标题</span></span><br><span class="line">    <span class="selector-class">.course-title</span>&#123;</span><br><span class="line">        <span class="attribute">font-size</span>: (<span class="number">32</span>/<span class="number">40rem</span>);</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#24253d</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置用户信息容器</span></span><br><span class="line">    <span class="selector-class">.user-info</span>&#123;</span><br><span class="line">        <span class="attribute">display</span>: flex;</span><br><span class="line">        <span class="attribute">align-items</span>: center;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 头像</span></span><br><span class="line">    <span class="selector-class">.avatar</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: (<span class="number">42</span>/<span class="number">40rem</span>);</span><br><span class="line">        <span class="attribute">height</span>: (<span class="number">42</span>/<span class="number">40rem</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 昵称</span></span><br><span class="line">    <span class="selector-class">.nickname</span>&#123;</span><br><span class="line">        <span class="attribute">font-size</span>:(<span class="number">24</span>/<span class="number">40rem</span>);</span><br><span class="line">        <span class="attribute">color</span>:<span class="number">#969393</span>;</span><br><span class="line">        <span class="attribute">margin-left</span>: (<span class="number">8</span>/<span class="number">40rem</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="18、美图"><a href="#18、美图" class="headerlink" title="18、美图"></a>18、美图</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../layout/css/reset.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./meitu/style.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./fa/css/all.min.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        响应式设计的网页</span></span><br><span class="line"><span class="comment">            -移动端优先</span></span><br><span class="line"><span class="comment">            -渐进增强</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;top-bar-wrapper&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 顶部容器 --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;top-bar&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 左侧菜单 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left-menu&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 创建菜单图标 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;menu-icon&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 创建菜单 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>手机<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>美容仪器<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>配件<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>服务支持<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>企业网站<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-search&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>搜索Meitu.com<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- logo --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;logo&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/&quot;</span>&gt;</span>美图手机<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 用户信息 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;user-info&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-user&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>less</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">        <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">197</span>,<span class="number">196</span>,<span class="number">196</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.top-bar-wrapper</span>&#123;</span><br><span class="line">    <span class="comment">// width: 100%;</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导航条的外部容器</span></span><br><span class="line"><span class="selector-class">.top-bar</span>&#123;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">1200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">48px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置左侧导航图标</span></span><br><span class="line"><span class="selector-class">.left-menu</span>&#123;</span><br><span class="line">    <span class="selector-tag">&amp;</span><span class="selector-pseudo">:active</span>&#123;</span><br><span class="line">         <span class="comment">// 显示隐藏菜单</span></span><br><span class="line">         <span class="selector-class">.nav</span>&#123;</span><br><span class="line">            <span class="attribute">display</span>: block;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置菜单</span></span><br><span class="line">    <span class="selector-class">.nav</span>&#123;</span><br><span class="line">        <span class="attribute">display</span>: none;</span><br><span class="line">        <span class="attribute">position</span>: absolute;</span><br><span class="line">        <span class="attribute">top</span>: <span class="number">48px</span>;</span><br><span class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#000</span>;</span><br><span class="line">        <span class="attribute">padding-top</span>: <span class="number">60px</span>;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">li</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">80%</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">            <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#757474</span>;</span><br><span class="line">            <span class="selector-tag">a</span>&#123;</span><br><span class="line">                <span class="attribute">display</span>: block;</span><br><span class="line">                <span class="attribute">line-height</span>: <span class="number">44px</span>;</span><br><span class="line">                <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="selector-tag">&amp;</span><span class="selector-pseudo">:last-child</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">                <span class="attribute">display</span>: inline-block;</span><br><span class="line">                <span class="attribute">margin-right</span>: <span class="number">6px</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="selector-tag">span</span>&#123;</span><br><span class="line">                <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">                <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 图标</span></span><br><span class="line">    <span class="selector-class">.menu-icon</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">18px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">48px</span>;</span><br><span class="line">        <span class="comment">// background-color: #bfa;</span></span><br><span class="line">        <span class="attribute">position</span>: relative;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">        <span class="comment">// 导航线</span></span><br><span class="line">        <span class="selector-tag">li</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">18px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">1px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置旋转原点</span></span><br><span class="line">            <span class="attribute">transform-origin</span>: left center;</span><br><span class="line">            <span class="attribute">transition</span>: <span class="number">0.5s</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">18px</span>;</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">24px</span>;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>)&#123;</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">30px</span>;</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 鼠标移入效果，正常项目使用js</span></span><br><span class="line">        <span class="selector-tag">&amp;</span><span class="selector-pseudo">:active</span>&#123;</span><br><span class="line"></span><br><span class="line">           </span><br><span class="line"></span><br><span class="line">            <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>)&#123;</span><br><span class="line">         </span><br><span class="line">                <span class="comment">// 向下旋转</span></span><br><span class="line">                <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(<span class="number">40deg</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)&#123;</span><br><span class="line">            </span><br><span class="line">                <span class="comment">// 隐藏</span></span><br><span class="line">                <span class="comment">// visibility: hidden;</span></span><br><span class="line">                <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>)&#123;</span><br><span class="line">       </span><br><span class="line">    </span><br><span class="line">                <span class="comment">// 向上旋转</span></span><br><span class="line">                <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(-<span class="number">40deg</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置logo</span></span><br><span class="line"><span class="selector-class">.logo</span>&#123;</span><br><span class="line">    <span class="selector-tag">a</span>&#123;</span><br><span class="line">        <span class="attribute">text-indent</span>: -<span class="number">9999px</span>;</span><br><span class="line">        <span class="attribute">display</span>: block;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">122px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">32px</span>;</span><br><span class="line">        <span class="attribute">background-image</span>: url(<span class="string">&quot;../img/18/dff63979.sprites-index@2x.png&quot;</span>);</span><br><span class="line">        <span class="attribute">background-size</span>: <span class="number">400px</span> <span class="number">400px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置媒体查询</span></span><br><span class="line"><span class="comment">// 设置断点768px</span></span><br><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen &#123;</span><br><span class="line">    <span class="comment">// 断点768px</span></span><br><span class="line">    <span class="keyword">@media</span> (<span class="attribute">min-width</span>:<span class="number">768px</span>)&#123;</span><br><span class="line">        <span class="selector-class">.left-menu</span>&#123;</span><br><span class="line">            <span class="attribute">order</span>: <span class="number">2</span>;</span><br><span class="line">            <span class="attribute">flex</span>: auto;</span><br><span class="line">            <span class="comment">// 显示菜单</span></span><br><span class="line">            <span class="selector-class">.nav</span>&#123;</span><br><span class="line">                <span class="attribute">display</span>: flex;</span><br><span class="line">                <span class="attribute">position</span>: static;</span><br><span class="line">                <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">                <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">                <span class="selector-tag">li</span>&#123;</span><br><span class="line">                    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">                    <span class="attribute">width</span>: auto;</span><br><span class="line">                    <span class="attribute">border-bottom</span>: none;</span><br><span class="line">                    <span class="selector-tag">a</span>&#123;</span><br><span class="line">                        <span class="attribute">line-height</span>: <span class="number">48px</span>;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="selector-tag">span</span>&#123;</span><br><span class="line">                        <span class="attribute">display</span>: none;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 隐藏菜单图标</span></span><br><span class="line">            <span class="selector-class">.menu-icon</span>&#123;</span><br><span class="line">                <span class="attribute">display</span>: none;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.logo</span>&#123;</span><br><span class="line">            <span class="attribute">order</span>: <span class="number">1</span>;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.user-info</span>&#123;</span><br><span class="line">            <span class="attribute">order</span>: <span class="number">3</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="五、float"><a href="#五、float" class="headerlink" title="五、float"></a>五、float</h2><h3 id="1、浮动的简介"><a href="#1、浮动的简介" class="headerlink" title="1、浮动的简介"></a>1、浮动的简介</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                通过浮动可以使一个元素在其父元素的左侧或右侧移动</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    使用float属性来设置元素的浮动</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        可选值：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            none：默认值，元素不浮动</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            left：元素向左浮动</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            right：元素向右浮动</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    注意：元素设置为浮动以后，水平布局的等式不需要强制成立了</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        元素设置完浮动以后，会完全从文档流中脱离，不在占用文档流的位置</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        所以元素下边的还在文档流中的元素会向上移动 </span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    浮动的特点：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        1、浮动元素会完全脱离文档流，不再占用文档流的位置</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        2、设置浮动后，元素会向父元素的左侧或右侧移动</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        3、浮动元素默认不会从父元素中溢出</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        4、浮动元素向左或向右移动时，不会超过前边的其他浮动元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        5、如果浮动元素上边是没有浮动的元素，则浮动元素无法上移</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        6、浮动元素不会超过上边的浮动的兄弟元素，最多最多只能是和它一样高</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    简单总结：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        浮动目前来讲他的主要作用就是让页面元素可以水平排列</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            通过浮动可以制作一些水平方向的布局</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box3</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2、浮动其他的特点"><a href="#2、浮动其他的特点" class="headerlink" title="2、浮动其他的特点"></a>2、浮动其他的特点</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">           <span class="attribute">width</span>: <span class="number">100px</span>; </span></span><br><span class="line"><span class="language-css">           <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">           <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">           <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">              浮动元素不会盖住文字，文字会自动环绕元素的周围</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                所以我们可以利用浮动来设置文字环绕图片的效果</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        </span></span></span><br><span class="line"><span class="comment"><span class="language-css">           */</span></span></span><br><span class="line"><span class="language-css">           <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        *&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: yellowgreen;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                元素设置浮动后，将会从文档流中脱离，脱离后，元素的一些特点也会发生改变</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                脱离文档流的特点：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    块元素：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        1、块元素不再独占页面的一行</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        2、脱离文档流后，块元素的宽度和高度由内容撑开决定</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    行内元素：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        行内元素脱离文档流后会变成块元素，特点和块元素一样</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    脱离文档流后，不再区分块和行内元素了</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box3</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.s1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;div class=&quot;box1&quot;&gt;&lt;/div&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- &lt;p&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        去年冬天，我回到了故乡下柴市。</span></span><br><span class="line"><span class="comment">傍晚，我一个人坐在门前的晒谷场上。</span></span><br><span class="line"><span class="comment">柔和的光亮盘桓在村庄上空。白昼将去未去、夜晚将来未来，那暝色很好看很清新，散溢着泥土的芬芳，干净得没一点渣子。它把田埂掩盖，把小桥托在空中，把树木藏进风里，把狗叫声拉长，把鸡撵进笼里，把旷野清理得干干净净。</span></span><br><span class="line"><span class="comment">往天上瞅，褐色的天空里间杂着白色，云在风里羊群样蠕动。</span></span><br><span class="line"><span class="comment">那时候，水稻已经归仓，黄豆收进了院落，树叶都落光了，所有多余的粉饰都拿掉了；原野洗尽了风尘，褪尽了铅华，恢复了它天然无雕饰的纯真素颜与本来模样；万物毫不戒备地显露出最根本的坦荡。大地像生过婴儿的母亲，幸福地舒展在开阔的天空下，躺着。</span></span><br><span class="line"><span class="comment">暗黑，从远处漫过来。最先漫过大湖，然后漫过大堤，来到村庄，来到晒谷场上，最后漫过心田。黄昏，终于阖上眼睑。一切都安安静静、舒舒服服地浸在里面。</span></span><br><span class="line"><span class="comment">我坐在暮色里，没有开灯。</span></span><br><span class="line"><span class="comment">没有灯的时候看黑，黑色很美。它不是黑洞洞的旋涡似的、深井似的吓人，它透着微微的亮光，安宁而纯粹，单纯而透明，像母亲的怀抱。</span></span><br><span class="line"><span class="comment">乡村的夜色真是好看，尽是起起伏伏的黑。</span></span><br><span class="line"><span class="comment">看着看着，人清澈得什么似的，渐渐地松软下来，像要飞一样。</span></span><br><span class="line"><span class="comment">我突然想一个人走走，在村庄内和田野里，像石头一样滚动。</span></span><br><span class="line"><span class="comment">暗黑的夜空中，有一些大雁在悠闲地旅行。蝙蝠在我头上忽东忽西毫无规则地飞翔。无言的黑影，让夜变得富有、神秘和亲近。</span></span><br><span class="line"><span class="comment">树枝上零星的夜露懒懒地向下滑落，滴在下面的野草上，像是小孩子滑滑梯似的，很是调皮。灌木、竹林、棉花杆，安静温和，没一点芒剌，和我一同站在夜色里。我和它们离得很近，仿佛手拉手的兄弟。白天看它们，它们就凌厉，一副眼珠子朝上拒绝人的样子。唉！万物不设防的状态真好，不设防才能彼此亲近。</span></span><br><span class="line"><span class="comment">童年里的北斗星就在这时候出现，母亲讲述的牛郎星织女星也在这时候出现。北斗星、牛郎星织女星也都没有偏离原来的位置，它们好像是在等我回来，好一下子在星群里找到它们。多少年了，我没有寻觅过它们，没有看过这样的满天星星。我现在的居住地广州，也是可以看到星星的，在我家阳台上就能够看到它们，但我已经很久没有在阳台上看星星了。一个个夜晚，我耽搁于手机里的花边新闻，耽搁于对文字的自我围困，也耽搁于对一些不可得的感情的纠缠……</span></span><br><span class="line"><span class="comment">我看见了月光，纯粹的月光，没有一点点灯光参进来。朦朦胧胧的，如薄雾，如出水的香芋苗，如刚刚绽放开来的荷花，又如清晨含着露珠的丝瓜花，纯洁得让我不敢呼吸，丰满得让我心生喜爱。天空，从南到北，一眼能望那么远，那么高，那么一大片，从东到西也一样的宽广无边……我几乎屏住了呼吸——我的一次呼吸就像是一次破坏。如果这个时候我说一句话，那几乎是不可思议的事情，也幸亏我身边没有可以说话的人。</span></span><br><span class="line"><span class="comment">明月给周围的一切披上银装。大湖银星万点，小溪银波微漾，浸过露水的枯草，也闪着银色的光芒。月光穿过树枝间的缝隙，在小道上，印上一道道纵横交错的影子。这些已经落叶的树，白天一派萧瑟之气，夜间掩在林间的月光，把它们映照得流光溢彩，好像提早回到勃勃的春天了。</span></span><br><span class="line"><span class="comment">     我背着手，抬头望着天空那轮明月，几颗星星点缀在两旁，仿佛我们兄弟几个依偎在母亲的身旁听那些古老的民间故事。唉！那时候，母亲说话的声音年轻得一跳一跳的，柔和的脸上总是带着笑容，眼睛特别的亮。可如今，那个给我们讲故事的母亲，那个将我从乡村送进城市的母亲己经作古。而头上这轮照过古人也照过今人的明月，依然奔波于天地之间，依然像那些流逝的过往岁月，正缓缓拂过我的身体。</span></span><br><span class="line"><span class="comment">今夜，我走在故乡的土地上，内心饱满得如同盛夏的果实，一切都如我所愿，一切都如我所想。在这满月的清辉之下，从树木的底下往上端详的那一轮月亮，把错综着生长的树木变成一幅木刻版画，那样的黑白分明，那样的似曾相识。</span></span><br><span class="line"><span class="comment">在这个没有灯光、没有车龙马水的夜晚。我独行在故乡的田间小道上，可以横着走，竖着走，踏着圈走，倒着走，想怎么走就怎么走。月光像水银般从高天流泻下来，小路上的漫步便成了我的独舞，迷蒙中，我感觉有类似二胡协奏的音律在耳边萦回，有千万只燕子在空中飞翔，渐渐的，我脱去了人造的面具，氤氲出一份不错的心情，喜爱的氛围激荡在我的心胸，内心充满了对乡村、对故乡乃至新生活的想象和渴望。</span></span><br><span class="line"><span class="comment">我喜欢故乡的夜！</span></span><br><span class="line"><span class="comment">    &lt;/p&gt; --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;div class=&quot;box2&quot;&gt;hello1&lt;/div&gt;</span></span><br><span class="line"><span class="comment">    &lt;div class=&quot;box3&quot;&gt;hello2&lt;/div&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;s1&quot;</span>&gt;</span>我是一个span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>导航条练习</p>
<h3 id="3、网页的布局"><a href="#3、网页的布局" class="headerlink" title="3、网页的布局"></a>3、网页的布局</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">header</span>,<span class="selector-tag">main</span>,<span class="selector-tag">footer</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">1000px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;        </span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置头部 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">header</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: silver;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置主体 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">main</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">30px</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">nav</span>,<span class="selector-tag">article</span>,<span class="selector-tag">aside</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置左侧导航 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">main</span> <span class="selector-tag">nav</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">170px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置中间内容 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">main</span> <span class="selector-tag">article</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">600px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: aqua;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置右侧边栏 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">main</span> <span class="selector-tag">aside</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">170px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">       </span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">footer</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: tomato;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 创建头部 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 创建网页主题 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 左侧导航 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nav</span>&gt;</span><span class="tag">&lt;/<span class="name">nav</span>&gt;</span>   </span><br><span class="line">        <span class="comment">&lt;!-- 中间内容 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">article</span>&gt;</span><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 右边的边栏 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aside</span>&gt;</span><span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 网页的底部 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="4、高度塌陷问题"><a href="#4、高度塌陷问题" class="headerlink" title="4、高度塌陷问题"></a>4、高度塌陷问题</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.outer</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">10px</span> red solid;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* height: 100px; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                BFC(Block Formatting Context)块级格式化环境</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -BFC是一个CSS中隐含的熟悉，可以为一个元素开启BFC</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        开启BFC该元素会变成一个独立的布局区域</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -元素开启BFC后的特点</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        1、开启BFC的元素不会被浮动元素所覆盖</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        2、开启BFC的元素子元素和父元素外边距不会重叠</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        3、开启BFC的元素可以包含浮动的子元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -可以通过特殊方式开启BFC：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        1、设置元素的浮动</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        2、将元素设置为行内块元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        3、将元素的overflow设置为一个非visible的值</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            -常用的方式：为元素设置overflow:hidden 开启BFC（以使其可以包含浮动元素）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                           </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span>              </span></span><br><span class="line"><span class="language-css">            <span class="comment">/* float: left; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* display: inline-block; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.inner</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                高度塌陷的问题：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    在浮动布局中，父元素的高度默认使被子元素撑开的</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        当子元素浮动后，其会完全脱离文档流，子元素从文档流中脱离</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        将会无法撑起父元素的高度，导致父元素的高度丢失</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    父元素高度丢失后，其下的元素会自动上移，导致页面的布局混乱</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    所以高度塌陷是浮动布局中比较常见的一个问题，这个问题我们必须要进行处理！</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        -写死高度（不满足实际需求）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        -</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;outer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="5、BFC"><a href="#5、BFC" class="headerlink" title="5、BFC"></a>5、BFC</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* float: left; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border: 1px red solid; */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box3</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            </span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* padding-top: 100px; */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- &lt;div class=&quot;box2&quot;&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &lt;/div&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="6、clear"><a href="#6、clear" class="headerlink" title="6、clear"></a>6、clear</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#ff0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box3</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                由于box1的浮动，导致box3的位置上移</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    也就是box3受到了box1的影响，位置发生了改变</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                如果我们不希望某个元素因为其他浮动元素的影响而改变位置，</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                可以通过clear属性来清除浮动元素对当前元素所产生的影响</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                clear</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    作用：清除浮动元素对当前元素所产生的影响</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    可选值：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        left：清除左侧浮动元素对当前元素的影响</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        right：清除右侧浮动元素对当前元素的影响</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        both：清除两侧较大影响的那侧</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    原理：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        设置清除浮动以后，浏览器会自动为元素添加一个外边距，</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            以使其位置不受其他元素的影响</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* clear: left; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">clear</span>: both;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="7、高度塌陷-最终解决方案"><a href="#7、高度塌陷-最终解决方案" class="headerlink" title="7、高度塌陷-最终解决方案"></a>7、高度塌陷-最终解决方案</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">10px</span> red solid;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* overflow: hidden; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box3</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">clear</span>: both;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 最佳解决方案 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span><span class="selector-pseudo">::after</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 伪元素默认是行内元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">clear</span>: both;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;div class=&quot;box3&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;/div&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="8、clearfix"><a href="#8、clearfix" class="headerlink" title="8、clearfix"></a>8、clearfix</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* .box1::before&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            content: &#x27;&#x27;;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            display: table;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* clearfix可以同时解决高度塌陷和外边距重叠的问题，当你遇到这些问题的时候，直接使用clearfix这个类即可 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.clearfix</span><span class="selector-pseudo">::before</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: table;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">clear</span>: both;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1 clearfix&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="六、position"><a href="#六、position" class="headerlink" title="六、position"></a>六、position</h2><h3 id="1、定位的简介-相对定位"><a href="#1、定位的简介-相对定位" class="headerlink" title="1、定位的简介-相对定位"></a>1、定位的简介-相对定位</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* margin-left: 200px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            margin-top: -200px; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                定位（position）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -定位是一种更加高级的布局手段</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -通过定位可以将元素摆放到页面的任意位置</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -使用position属性来设置定位</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        -可选值</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            -static 默认值，元素是静止的没有开启定位</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            -relative 开启元素相对定位</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            -absolute 开启元素绝对定位</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            -fixed 开启元素的固定定位</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            -sticky 开启元素的粘滞定位</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        -相对定位</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            -当元素的position属性值设置为relative时则开启了元素的相对定位</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            -相对定位的特点：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                1、元素开启相对定位后，如果不设置偏移量元素不会发生任何变化</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                2、相对定位是参照于元素在文档流中的位置！！！</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                3、相对定位会提升元素的层级</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                4、相对定位不会使元素脱离文档流</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                5、相对定位不会改变元素的性质，块还是块，行内还是行内</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            -偏移量（offset）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                -当元素开启定位后，可以通过偏移量来设置元素的位置</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                    top</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                        -定位元素和定位位置上边的距离</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                    bottom</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                        -定位元素和定位位置下边的距离</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                        -定位元素垂直方向的位置由top和bottom两个属性来控制</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                            通常情况下我们只会使用其中之一</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                        -top值越大，越向下</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                        -bottom越大，越向上</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                    left</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                        -定位元素和定位位置的左侧距离</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                    right</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                        -定位元素和定位位置的右侧距离</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                        --定位元素水平方向的位置由left和right两个属性来控制</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                            通常情况下我们只会使用其中之一</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                        -left值越大，越向右</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                        -right越大，越向左</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            注意：一定要开启定位后才生效</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span>                          </span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* top: 100px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">bottom</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box3</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* margin-top: 200px; */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        </span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2、绝对定位"><a href="#2、绝对定位" class="headerlink" title="2、绝对定位"></a>2、绝对定位</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                绝对定位</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -当元素的position属性值设置为absolute时，则开启了元素的绝对定位</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -绝对定位的特点：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        1、开启绝对定位后，如果不设置偏移量，则元素的位置不会发生变化</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        2、开启绝对定位后，元素会从文档流中脱离</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        3、绝对定位会改变元素的性质，行内变成块，块的宽度被内容撑开</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        4、绝对定位会使元素提升一个层级</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        5、绝对定位元素是相对于包含块进行定位的</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        包含块（containing block）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            -正常情况下</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                包含块就是离当前元素最近的祖先块元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                &lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                &lt;div&gt;&lt;span&gt;&lt;em&gt;&lt;/em&gt;&lt;/span&gt;&lt;/div&gt;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            -开启绝对定位的包含块：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                包含块就是理他最近的开启了定位的祖先元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                                    如果所有的祖先元素都没有开启定位，则根元素就是它的包含块</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            -html（根元素、初始包含块）</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span>                    </span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            </span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box3</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box4</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: tomato;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box5</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: aliceblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box4&quot;</span>&gt;</span></span><br><span class="line">        4</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box5&quot;</span>&gt;</span></span><br><span class="line">            5</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="3、固定定位"><a href="#3、固定定位" class="headerlink" title="3、固定定位"></a>3、固定定位</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">2000px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                固定定位：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -将元素的position属性值设置为fixed则开启了固定定位</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -固定定位也是一种绝对定位，所以固定定位的大部分特点跟绝对定位一样</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        唯一不同的是，固定定位永远参考于浏览器的视口进行定位</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        固定定位的元素不会随网页的滚动条滚动</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            </span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box3</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box4</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: tomato;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box5</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: aliceblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box4&quot;</span>&gt;</span></span><br><span class="line">        4</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box5&quot;</span>&gt;</span></span><br><span class="line">            5</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="4、粘滞定位"><a href="#4、粘滞定位" class="headerlink" title="4、粘滞定位"></a>4、粘滞定位</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>导航条<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../layout/css/reset.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">2500px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置宽度高度*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">48px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">1200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置背景颜色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: gainsboro;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置居中 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                粘滞定位</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -当元素的position属性值设置为sticky时则开启了元素的粘滞定位</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -粘滞定位和相对定位的特点基本一致</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    不同的是粘滞定位可以在元素到达某个位置时将其固定</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: sticky;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置nav中的li */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置li向左浮动，已使菜单横向排列 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置li高度和垂直居中 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">48px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* height: 48px; */</span></span></span><br><span class="line"><span class="language-css">            </span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 将a转换为块元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 去除下划线 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 字体颜色和大小 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#777777</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">39px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置鼠标移入效果 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#3F3F3F</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#E8E7E3</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 创建导航条的结构 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>HTML/CSS<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Browser Side<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Server Side<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Programming<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Xml<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Web Buliding<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Reference<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="5、绝对定位元素的布局"><a href="#5、绝对定位元素的布局" class="headerlink" title="5、绝对定位元素的布局"></a>5、绝对定位元素的布局</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                开启绝对定位后，要满足以下等式</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                水平布局</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                  left + margin-left + border-left + padding-left + width +padding-right + border-right + margin-right + right = 包含块元素的宽度</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                -当我们开启了绝对定位后：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                水平方向的布局等式就需要添加left和right两个值</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    此时规则和之前只是多了两个值：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        当发生过度约束：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            如果9个值中没有auto，则自动调整right值以使等式满足</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            如果要auto，自动调整auto的值以使等式满足</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        -可设置auto的值</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            margin width left right</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                垂直方向布局的等式也必须要满足</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                top + margin-top/bottom + padding-top/bottom + height +bottom</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: auto;</span></span><br><span class="line"><span class="language-css">            </span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="6、元素的层级"><a href="#6、元素的层级" class="headerlink" title="6、元素的层级"></a>6、元素的层级</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                对于开启了定位的元素，可以通过z-index属性来指定元素的层级</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                z-index需要一个整数作为参数，值越大元素的层级越高</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                元素的层级越高越优先显示</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                如果层级一样，则优先显示靠下的元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                祖先元素的层级再高也不会盖住后代元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">z-index</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>:<span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">z-index</span>: <span class="number">2</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box3</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>:<span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">z-index</span>: <span class="number">3</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box4</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span>3</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box4&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="七、font-amp-background"><a href="#七、font-amp-background" class="headerlink" title="七、font&amp;background"></a>七、font&amp;background</h2><h3 id="1、字体-gt-font-family"><a href="#1、字体-gt-font-family" class="headerlink" title="1、字体-&gt;font-family"></a>1、字体-&gt;font-family</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        </span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            font-face可以将服务器中的字体直接提供给用户去使用</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            问题：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                1、加载速度慢</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                2、版权</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                3、字体格式（兼容问题），可以指定多个url</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                </span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@font-face</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 指定字体的名字 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>:<span class="string">&#x27;myfont&#x27;</span> ;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">./font/ZCOOLKuaiLe-Regular.ttf</span>) <span class="built_in">format</span>(<span class="string">&quot;truetype&quot;</span>),</span></span><br><span class="line"><span class="language-css">            <span class="built_in">url</span>(<span class="string">./font/ZCOOLXiaoWei-Regular.ttf</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-css">             字体相关样式</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                color 前景色，通常用来设置字体颜色</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                font-size 字体的大小</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                   font-size相关单位</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                   em相当于当前元素的一个font-size</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                   rem 相当于根元素的一个font-size</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                font-family 字体族(字体的格式)</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    可选值：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        serif 衬线字体</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        sans-serif 非衬线字体</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        monospace 等宽字体</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            -指定字体的类别，浏览器会自动使用该类别下的字体</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -font-family可以同时指定多个字体。字体之间用空格隔开</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    字体生效时优先使用第一个，如果第一个无法使用则使用第二个，以此类推</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* font-family: &#x27;Courier New&#x27;, Courier, monospace ; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: <span class="string">&#x27;myfont&#x27;</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        今天天气真不错，Hello, Boy！</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2、图标字体1-0"><a href="#2、图标字体1-0" class="headerlink" title="2、图标字体1.0"></a>2、图标字体1.0</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./fa/css/all.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        图标字体（iconfont）</span></span><br><span class="line"><span class="comment">            -在网页中经常需要使用一些图标，可以通过图片来引入图标</span></span><br><span class="line"><span class="comment">                但是图片本身大小比较大，并且非常不灵活</span></span><br><span class="line"><span class="comment">            -所以在使用图标时，我们可以将图标设置为字体</span></span><br><span class="line"><span class="comment">                然后通过font-face的形式来对字体进行引入</span></span><br><span class="line"><span class="comment">            -这样我们就可以通过使用字体的样式来使用图标</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">            fontawesome使用步骤：</span></span><br><span class="line"><span class="comment">                1、下载链接https://fontawesome.com/</span></span><br><span class="line"><span class="comment">                2、解压</span></span><br><span class="line"><span class="comment">                3、将css和webfonts移动到项目中</span></span><br><span class="line"><span class="comment">                4、将all.css引入网页中</span></span><br><span class="line"><span class="comment">                5、使用图标字体</span></span><br><span class="line"><span class="comment">                    -直接通过类名来使用图标字体</span></span><br><span class="line"><span class="comment">                    class=&quot;fas fa-bell&quot; fas或fab固定，空格后使用图标名</span></span><br><span class="line"><span class="comment">                    class=&quot;fab fa-accessible-icon&quot;</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-bell&quot;</span> <span class="attr">style</span>=<span class="string">&quot;font-size: 80px ;color:red;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-bell-slash&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fab fa-accessible-icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="3、图标字体2-0"><a href="#3、图标字体2-0" class="headerlink" title="3、图标字体2.0"></a>3、图标字体2.0</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./fa/css/all.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span><span class="selector-pseudo">::before</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                通过伪元素来设置图标字体</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    1、找到要设置图标的元素通过before或after选中</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    2、在content中设置编码</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    3、设置字体的样式</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        fab:</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        font-family: &#x27;Font Awesome 5 Brands&#x27;;</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        fas:</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        font-family: &#x27;Font Awesome 5 Free&#x27;;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        font-weight:900;</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">content</span>: <span class="string">&#x27;\f1b0&#x27;</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: <span class="string">&#x27;Font Awesome 5 Free&#x27;</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">900</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;i class=&quot;fas fa-cat&quot;&gt;&lt;/i&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>锄禾日当午<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>汗滴禾下土<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>谁知盘中餐<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>粒粒皆辛苦<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        通过实体来使用图标字体：</span></span><br><span class="line"><span class="comment">            &amp;#x图标的编码;</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spa</span> <span class="attr">class</span>=<span class="string">&quot;fas&quot;</span>&gt;</span><span class="symbol">&amp;#xf0f3;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="4、阿里的图标字体库-html"><a href="#4、阿里的图标字体库-html" class="headerlink" title="4、阿里的图标字体库.html"></a>4、阿里的图标字体库.html</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./iconfont/iconfont.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">i</span><span class="selector-class">.iconfont</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span><span class="selector-pseudo">::before</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">content</span>: <span class="string">&#x27;\e6f2&#x27;</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: <span class="string">&#x27;iconfont&#x27;</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont&quot;</span>&gt;</span><span class="symbol">&amp;#xe6ef;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-auto&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="5、行高"><a href="#5、行高" class="headerlink" title="5、行高"></a>5、行高</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 可以将行高设置为和高度一样的值，使单行文字在一个元素中垂直居中  */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                行高（line height）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -行高指的是文字占用的实际高度</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -可以通过直接指定一个大小（px em）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    也可以直接为行高设置一个整数</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        如果是一个整数的话，行高会是字体的指定整数的倍数</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    默认是1.33</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                行高经常还用来设置文字的行间距</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    行间距=行高-字体大小</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                字体框</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -字体框就是字体存在的格子，设置font-size实际上就是在设置字体框的高度</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                行高会在字体框的上下平均分配</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* line-height: 200px; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            </span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>今天天气真不错呀！Boy！今天天气真不错呀！Boy！今天天气真不错呀！Boy！<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="6、字体的简写属性"><a href="#6、字体的简写属性" class="headerlink" title="6、字体的简写属性"></a>6、字体的简写属性</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* line-height: 2; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                font可以设置字体相关的所有属性</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    语法：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        font:字体大小/行高 字体族</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        行高 可以省略不写 如果不写使用默认值</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* font-size: 50px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            font-family: &#x27;Time New Roman&#x27;,Times,serif; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font</span>: bold italic <span class="number">50px</span>/<span class="number">2</span> 微软雅黑, <span class="string">&#x27;Time New Roman&#x27;</span>,Times,serif;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* font: normal normal 50px/2 微软雅黑, &#x27;Time New Roman&#x27;,Times,serif; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* line-height: 2; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                font-weight 字重 字体的加粗效果</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    可选值</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        normal默认值，不加粗</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        bold加粗</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        100-900 九个级别（没什么用）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        取决于是否都有9个级别的字体</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                font-style 字体的风格</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    可选值</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        normal正常</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        italic斜体</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* font-weight: bold; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* font-weight: normal;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            font-style: italic; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>今天天气真不错！Hello Boy！<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="7、文本的样式1-0"><a href="#7、文本的样式1-0" class="headerlink" title="7、文本的样式1.0"></a>7、文本的样式1.0</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                text-align 文本的水平对齐</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    可选值：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        left 左对齐</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        right 右对齐</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        center 居中对齐</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        justify 两端对齐</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* text-align: center; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">span</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid blue;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                设置元素垂直对齐的方式</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    可选值：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        baseline 默认值，基线对齐</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        top 顶部对齐</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        bottom 底部对齐</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        middle 居中对齐</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        也可直接指定值</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">vertical-align</span>: baseline ;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css">           <span class="attribute">border</span>: <span class="number">1px</span> red solid; </span></span><br><span class="line"><span class="language-css">           </span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">img</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">vertical-align</span>: top;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>今天天气 Boy x<span class="tag">&lt;<span class="name">span</span>&gt;</span>真不错！Boy<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- &lt;div&gt;</span></span><br><span class="line"><span class="comment">        Lorem, ipsum dolor sit amet consectetur adipisicing elit. Vitae quod aliquam sint similique deleniti fugit et sit aspernatur, nulla, eum eos facere! Eligendi nemo ut modi, laboriosam magni assumenda neque.</span></span><br><span class="line"><span class="comment">    &lt;/div&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../Html/img/城堡.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="8、文本的样式2-0"><a href="#8、文本的样式2-0" class="headerlink" title="8、文本的样式2.0"></a>8、文本的样式2.0</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                text-decoration设置文本修饰</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    可选值：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        none默认值，什么都没有</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        underline 下划线</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        line-through 删除线</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        overline 上划线</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* text-decoration: underline; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* text-decoration: underline red dotted; */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                用来设置网页如何处理空白</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    可选值：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        normal正常</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        nowrap 不换行</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        pre 保留空白（代码什么样，页面什么样）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                以下三个组合使用</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">white-space</span>: nowrap ;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-overflow</span>: ellipsis;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">        今天天气很不错！</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span></span><br><span class="line">        Lorem ipsum dolor sit amet consectetur adipisicing elit. Aperiam vitae veniam dolores temporibus pariatur ipsum reiciendis omnis eius suscipit impedit. Praesentium assumenda quae eaque magnam adipisci minus explicabo repudiandae aliquam.</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="9、背景1-0"><a href="#9、背景1-0" class="headerlink" title="9、背景1.0"></a>9、背景1.0</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">1000px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">1000px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                background-color设置背景颜色</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                background-image: ;设置背景图片</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -可以同时设置背景图片和背景颜色，这样背景颜色会成为图片的背景色</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -如果背景图片小于元素，则背景图片会自动在元素中平铺将元素铺满</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -如果背景图片大于元素，将会有一部分背景无法完全显示</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -如果背景图片和元素一样大，则直接正常显示</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;./img/default.jpg&quot;</span>);</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                background-repeat: ;设置背景的重复方式</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    可选值：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        repeat默认值，背景沿着x轴和y轴方向重复</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        repeat-x沿着x方向重复</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        repeat-y沿着y方向重复</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        no-repeat不重复</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-repeat</span>: no-repeat;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                background-position 用来设置图片的位置</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    设置方式：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        通过top left right bottom center几个表示方位的词来设置背景图片的位置</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            使用方位时必须同时指定两个值，如果只有一个值，默认第二个值为center</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        通过偏移量指定背景图片的位置</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            水平方向的偏移量 垂直方向的偏移量</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-position: top center; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-position</span>: <span class="number">100px</span> <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="10、背景2-0"><a href="#10、背景2-0" class="headerlink" title="10、背景2.0"></a>10、背景2.0</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: auto;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                background-color设置背景颜色</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;./img/mm.jpg&quot;</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-repeat</span>: no-repeat;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-position: 100px 100px; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                设置背景的范围</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    background-clip</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        可选值：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            border-box默认值，背景出现在边框的下边</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            padding-box 背景不会出现在边框下，只出现在内边距和内容区下</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            content-box 背景只会出现在内容区</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    background-origin背景图片的偏移量计算的原点</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        padding-box 默认值，background-position从内边距处开始计算</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        content-box 背景图片的偏移量从内容区开始计算</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        border-box 背景图片的偏移量从边框开始计算</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-origin</span>: border-box ;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-clip</span>: content-box;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                background-size:设置背景图片的尺寸 ;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    第一个值表示宽度</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    第二个值表示高度</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -如果只写一个值，则第二个值默认是auto</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    cover图片的比例不变，将元素铺满</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    contain图片比例不变，将图片在元素中完整显示</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-size: 100% auto; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-size: cover; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-size</span>: contain;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border: 10px red double; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                background-color</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                background-image</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                background-repeat</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                background-position</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                background-size</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                background-origin</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                background-clip</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                background-attachment</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                -background 背景相关的简写属性，所有背景相关的样式都可以通过该样式来设置</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                并且该样式没有顺序要求，也没有哪个属性是必须要写的</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                注意：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    background-size必须写在background-position的后边，并且使用/隔开</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        background-position/background-size</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    background-origin background-clip两个样式，origin必须在clip前面</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">1000px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-color: orange; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;./img/1.png&quot;</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-repeat</span>: no-repeat;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                background-attachment</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    背景图片是否跟随元素移动</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        可选值：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            scroll 默认值，背景图片会跟随元素移动</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            fixed 背景图片固定在页面中，不会随元素移动</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-attachment</span>: fixed;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box3</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">10px</span> red double;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="number">#bfa</span> <span class="built_in">url</span>(<span class="string">./img/2.jpg</span>) center center/contain border-box content-box no-repeat ;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;div class=&quot;box1&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;div class=&quot;box2&quot;&gt;</span></span><br><span class="line"><span class="comment">            Lorem ipsum dolor sit amet consectetur adipisicing elit. Facilis earum incidunt consequatur modi beatae voluptatem debitis ipsum nesciunt at quam impedit voluptas animi repellat nostrum minus, iusto aliquam sequi possimus.</span></span><br><span class="line"><span class="comment">        &lt;/div&gt;</span></span><br><span class="line"><span class="comment">    &lt;/div&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="11、渐变-线性"><a href="#11、渐变-线性" class="headerlink" title="11、渐变-线性"></a>11、渐变-线性</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-color: #bfa; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                通过渐变可以设置一些复杂的背景颜色，可以实现从一个颜色向其他颜色过度的效果</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                ！！！渐变是图片，需要通过background-image来设置</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                线性渐变，颜色沿着一条直线发生变化</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    linnear-gradient()</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    linear-gradient(red,yellow)红色开头，黄色结尾，中间是过渡区域</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    可以指定渐变的方向</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        to left </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        to right</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        to bottom</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        to top 这些属性值可以组合</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        默认是向下</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        deg表示度数 0度是向上</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        turn表示圈数</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                -渐变可以同时指定多个颜色，多个颜色默认情况平均分配</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    也可以手动指定渐变的分布情况</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                repeating-linear-gradient()可以平铺的线性渐变</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-image: linear-gradient(to right, red,yellow,#bfa,orange); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-image: linear-gradient(red 50px,yellow 100px,green 150px,orange 200px); */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">repeating-linear-gradient</span>(red ,yellow <span class="number">50px</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-repeat</span>: no-repeat;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="12、径向渐变"><a href="#12、径向渐变" class="headerlink" title="12、径向渐变"></a>12、径向渐变</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                 radial-gradient()径向渐变（放射性的效果）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                 默认情况下径向渐变的形状根据元素的形状来计算的</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                 正方形：圆形</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                 长方形：椭圆形</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                 我们也可以手动指定径向渐变的大小 100px 100px</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                 circle</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                 ellipse</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                 也可以指定渐变的位置</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    top left right bottom center</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    0 0 </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    语法：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        radial-gradient(大小 at 位置,颜色 位置,颜色 位置)</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        大小：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                             circle 圆形</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                             ellipse 椭圆</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                             closest-side 近边</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                             closest-corner 近角</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                             farthest-side 远边</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                             farthest-corner 远角</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        位置：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            top left right bottom center</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                           </span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-image: radial-gradient(100px 200px,red,yellow); */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">radial-gradient</span>(circle at <span class="number">0</span> <span class="number">0</span>,red,greenyellow);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="八、HTML—-gt-补充"><a href="#八、HTML—-gt-补充" class="headerlink" title="八、HTML—-&gt;补充"></a>八、HTML—-&gt;补充</h2><h3 id="1、表格—-gt-简介"><a href="#1、表格—-gt-简介" class="headerlink" title="1、表格—&gt;简介"></a>1、表格—&gt;简介</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        在现实生活中，我们经常需要使用表格来表示一些格式化的数据</span></span><br><span class="line"><span class="comment">            课程表、人名单、成绩单。。</span></span><br><span class="line"><span class="comment">        同样在网页我们也需要使用表格，我们通过table标签来参加一个表格</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">width</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 在table中使用tr表示表格中的一行，有几个tr就有几行 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 在tr中使用td表示一个单元格，有几个td就有几个单元格 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>A1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>B1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>C1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>D1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>A2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>B2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>C2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">                rowspan纵向的合并单元格</span></span><br><span class="line"><span class="comment">             --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>D2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>A3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>B3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>C3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- &lt;td&gt;D3&lt;/td&gt; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>A4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>B4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">                colspan横向的合并单元格</span></span><br><span class="line"><span class="comment">             --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>C4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- &lt;td&gt;D4&lt;/td&gt; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2、长表格"><a href="#2、长表格" class="headerlink" title="2、长表格"></a>2、长表格</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">width</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">            可以将一个表格分为三部分</span></span><br><span class="line"><span class="comment">                头部thead</span></span><br><span class="line"><span class="comment">                主体tbody</span></span><br><span class="line"><span class="comment">                底部tfoot</span></span><br><span class="line"><span class="comment">                三个位置顺序不定</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                th表示头部的单元格</span></span><br><span class="line"><span class="comment">         --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>日期<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>收入<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>支出<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>合计<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>2000.1.1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>500<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>300<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>200<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>2000.1.1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>500<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>300<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>200<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>2000.1.1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>500<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>300<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>200<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>2000.1.1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>500<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>300<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>200<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>2000.1.1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>500<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>300<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>200<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tfoot</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>合计<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>1000<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="3、表格的样式"><a href="#3、表格的样式" class="headerlink" title="3、表格的样式"></a>3、表格的样式</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">table</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border-spacing:指定边框之间的距离 ; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border-spacing: 0; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border-collapse: collapse; 设置边框的合并*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-collapse</span>: collapse;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">td</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                默认情况下元素是垂直居中的，可以通过vertical-align属性设置</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">vertical-align</span>: middle;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            如果表格中没有使用tbody而是直接使用tr</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                那么浏览器会自动创建一个tbody，并且将tr全部放到tbody中</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                str不是table的子元素</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            </span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">tbody</span> &gt; <span class="selector-tag">tr</span><span class="selector-pseudo">:nth-child</span>(odd)&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 将元素设置为单元格 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: table-cell;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">vertical-align</span>: middle;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>学号<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>地址<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>男<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>500<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>花果山<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>唐僧<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>男<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>20<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>东土大唐<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>猪八戒<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>男<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>300<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>高老庄<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>沙僧<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>男<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>400<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>流沙河<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="4、表单"><a href="#4、表单" class="headerlink" title="4、表单"></a>4、表单</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        表单</span></span><br><span class="line"><span class="comment">            -在现实生活中用于提交数据</span></span><br><span class="line"><span class="comment">            -网页中使用表单。网页中的表单用于将本地的数据交给远程的服务器</span></span><br><span class="line"><span class="comment">            -使用form标签来创建一个表单</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        form的属性</span></span><br><span class="line"><span class="comment">            action 表单要提交的服务器的地址</span></span><br><span class="line"><span class="comment">      --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;target.html&quot;</span> <span class="attr">method</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">            文本框text</span></span><br><span class="line"><span class="comment">            注意：数据要提交给服务器中，必须要为元素指定一个name属性</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        账号:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;userno&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        密码:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">            单选按钮radio,name属性值要一样才是一组的</span></span><br><span class="line"><span class="comment">            像这种选择框，必须指定一个value属性，value属性值才会被服务器接收到</span></span><br><span class="line"><span class="comment">            checked可以将单选按钮设置为默认选中</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        性别:</span><br><span class="line">        男<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;man&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">checked</span>&gt;</span></span><br><span class="line">        女<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;woman&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 多选框checkbox --&gt;</span></span><br><span class="line">        技能:</span><br><span class="line">        Java<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;skills&quot;</span> <span class="attr">value</span>=<span class="string">&quot;java&quot;</span> <span class="attr">checked</span>&gt;</span></span><br><span class="line">        C语言<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;skills&quot;</span> <span class="attr">value</span>=<span class="string">&quot;c&quot;</span>&gt;</span></span><br><span class="line">        Python<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;skills&quot;</span> <span class="attr">value</span>=<span class="string">&quot;python&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">            下拉列表select标签</span></span><br><span class="line"><span class="comment">         --&gt;</span></span><br><span class="line">         期望工资:</span><br><span class="line">         <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;monkey&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;5k&quot;</span>&gt;</span>5000<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1w&quot;</span> <span class="attr">selected</span>&gt;</span>10000<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1.5w&quot;</span>&gt;</span>15000<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">            提交按钮submit</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="5、表单2-0"><a href="#5、表单2-0" class="headerlink" title="5、表单2.0"></a>5、表单2.0</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;target.html&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">            placeholder设置文本框提示信息</span></span><br><span class="line"><span class="comment">         --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请填写用户名&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 普通按钮 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;按钮&quot;</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!-- 提交按钮 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 重置按钮 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 双标签里面还可以放其他标签，扩展性高 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- &lt;input type=&quot;color&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;br&gt;&lt;br&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 邮箱&lt;input type=&quot;email&quot;&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            autocomplete=&quot;off&quot; 关闭自动补全</span></span><br><span class="line"><span class="comment">            readonly将表单项设置为只读,数据会提交</span></span><br><span class="line"><span class="comment">            disabled将表单项设置为禁用，数据不会提交</span></span><br><span class="line"><span class="comment">            autofocus设置表单项自动获取焦点</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> <span class="attr">value</span>=<span class="string">&quot;xiaolin&quot;</span> <span class="attr">readonly</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;b&quot;</span> <span class="attr">value</span>=<span class="string">&quot;bbb&quot;</span> <span class="attr">disabled</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;c&quot;</span> <span class="attr">autofocus</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="九、小米官网项目"><a href="#九、小米官网项目" class="headerlink" title="九、小米官网项目"></a>九、小米官网项目</h2><h3 id="1、html"><a href="#1、html" class="headerlink" title="1、html"></a>1、html</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>小米商城<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入重置样式表 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../layout/css/reset.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入图标字体库 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./fa/css/all.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入当前页面的css样式表 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./css/index.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入公共样式表 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./css/base.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 设置网站图标（标题栏和收藏栏） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./favicon.ico&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 顶部导航条 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 顶部导航条外层容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;topbar-wrapper&quot;</span> <span class="attr">id</span>=<span class="string">&quot;top&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 内部容器 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;topbar w clearfix&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 左侧导航条 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;service&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>小米商城<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>MIUI<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>loT<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>云服务<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>金融<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>有品<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>小爱开放平台<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>企业团购<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>资质证照<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>协议规则<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;app-wrapper&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span></span><br><span class="line">                        下载app</span><br><span class="line">                        <span class="comment">&lt;!-- 添加一个弹出层 --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;qrcode&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/download.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span>&gt;</span>小米商城APP<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>Select Location<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 购物车 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;shop-cart&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;cart&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-shopping-cart&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                        购物车(0)</span><br><span class="line">                        <span class="comment">&lt;!-- 添加一个弹出层 --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cart-msg&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span>&gt;</span>购物车中还没有商品,赶快选购吧！<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 用户信息 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;user-info&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>消息通知<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 创建一个头部的外部容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header-wrapper&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header w clearfix&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 创建一个logo --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;logo&quot;</span> <span class="attr">title</span>=<span class="string">&quot;小米&quot;</span>&gt;</span></span><br><span class="line">                小米官网</span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;home&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;mi&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 创建中间导航条的容器 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav-wrapper&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 创建导航条 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav clearfix&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;all-goods-wrapper&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;all-goods&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>全部商品分类<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- 创建一个左侧导航菜单 --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;left-menu&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>手机 电话卡<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-angle-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>电视盒子<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-angle-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>笔记本 平板<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-angle-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>家电 插线板<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-angle-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>出行 穿戴<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-angle-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>智能 路由器<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-angle-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>电源 配件<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-angle-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>健康 儿童<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-angle-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>耳机 音箱<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-angle-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>生活 箱包<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-angle-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;show-goods&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>小米手机<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;show-goods&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Redmi 红米<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;show-goods&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>电视<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;show-goods&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>笔记本<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;show-goods&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>家电<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;show-goods&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>路由器<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;show-goods&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>智能硬件<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>服务<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>社区<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- 创建弹出层 --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;goods-info&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 创建一个搜索款容器 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;search-wrapper&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;search&quot;</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;search-inp&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;search-btn&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-search&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 创建banner的容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;banner-wrapper&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;banner w&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;img-list&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/banner1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/banner2.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/banner3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/banner4.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/banner5.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pointer&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;prev-next&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;prev&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;next&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 设置固定定位工具条 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;back-top&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#top&quot;</span>&gt;</span>点击回到顶部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 创建广告容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ad w&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;shortcut&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-clock&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                    小米秒杀</span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-building&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                    企业团购</span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-frog&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                    F码通道</span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-keyboard&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                    米粉卡</span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-robot&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                    以旧换新</span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-sim-card&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                    话费充值</span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;ad-img&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/2.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2、base-css"><a href="#2、base-css" class="headerlink" title="2、base.css"></a>2、base.css</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 公共样式 */</span></span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">display</span>: table;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 去除a的下划线 */</span></span><br><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">font</span>:<span class="number">14px</span>/<span class="number">1.5</span> Helvetica Neue,Helvetica,Arial,Microsoft Yahei,Hiragino Sans GB,Heiti SC,WenQuanYi Micro Hei,sans-serif;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="comment">/* 防止body太小溢出 */</span></span><br><span class="line">    <span class="attribute">min-width</span>: <span class="number">1226px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置一个类，用来表示中间容器的宽度 */</span></span><br><span class="line"><span class="selector-class">.w</span>&#123;</span><br><span class="line">    <span class="comment">/* 固定容器的宽度 */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1226px</span>;</span><br><span class="line">    <span class="comment">/* 设置容器居中 */</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3、index-css"><a href="#3、index-css" class="headerlink" title="3、index.css"></a>3、index.css</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 主页index.html的样式表 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 顶部导航条的容器 */</span></span><br><span class="line"><span class="selector-class">.topbar-wrapper</span>&#123;</span><br><span class="line">    <span class="comment">/* 设置全屏宽度 */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="comment">/* 设置高度和行高 */</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="comment">/* 设置背景颜色 */</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置超链接的字体大小和颜色 */</span></span><br><span class="line"><span class="selector-class">.topbar</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#b0b0b0</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置超链接移入效果 */</span></span><br><span class="line"><span class="selector-class">.topbar</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置中间分割线样式 */</span></span><br><span class="line"><span class="selector-class">.topbar</span> <span class="selector-class">.line</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#424242</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置左侧导航条左浮动 */</span></span><br><span class="line"><span class="selector-class">.service</span>,<span class="selector-class">.topbar</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.app</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置app下的小三角 */</span></span><br><span class="line"><span class="comment">/* .app-wrapper:hover&gt;.app::after&#123; */</span></span><br><span class="line">    <span class="selector-class">.app</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="comment">/* 设置绝对定位 */</span></span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">bottom</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* display: block; */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="comment">/* 设置四个方向的边框 */</span></span><br><span class="line">    <span class="attribute">border</span>: <span class="number">8px</span> solid transparent;</span><br><span class="line">    <span class="comment">/* 去除上边框 */</span></span><br><span class="line">    <span class="attribute">border-top</span>: none;</span><br><span class="line">    <span class="comment">/* 单独设置下边框的颜色 */</span></span><br><span class="line">    <span class="attribute">border-bottom-color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* .app-wrapper:hover&gt;.app .qrcode&#123;</span></span><br><span class="line"><span class="comment">    display: block;</span></span><br><span class="line"><span class="comment">&#125; */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.app</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.qrcode</span>,</span><br><span class="line"><span class="selector-class">.app</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">148px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置下载app的下拉框 */</span></span><br><span class="line"><span class="selector-class">.app</span> <span class="selector-class">.qrcode</span>&#123;</span><br><span class="line">    <span class="comment">/* display: none; */</span></span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="comment">/* left: 22px; */</span></span><br><span class="line">    <span class="attribute">left</span>: -<span class="number">40px</span>;</span><br><span class="line">    <span class="comment">/* margin-left: -62px; */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">124px</span>;</span><br><span class="line">    <span class="comment">/* height: 148px; */</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">3</span>);</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">999</span>;</span><br><span class="line">    <span class="comment">/* transition: ;用于为样式设置过渡效果 */</span></span><br><span class="line">    <span class="attribute">transition</span>: height <span class="number">0.3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置二维码图片 */</span></span><br><span class="line"><span class="selector-class">.app</span> <span class="selector-class">.qrcode</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">90px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">17px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置二维码文字 */</span></span><br><span class="line"><span class="selector-class">.app</span> <span class="selector-class">.qrcode</span> <span class="selector-tag">span</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置右侧导航栏右浮动 */</span></span><br><span class="line"><span class="selector-class">.shop-cart</span>,<span class="selector-class">.user-info</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置购物车样式 */</span></span><br><span class="line"><span class="selector-class">.shop-cart</span>&#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">26px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置购物车的样式 */</span></span><br><span class="line"><span class="selector-class">.shop-cart</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">120px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#424242</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.shop-cart</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff6700</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.shop-cart</span> <span class="selector-tag">i</span>&#123;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cart</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.shop-cart</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.cart-msg</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#b0b0b0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cart-msg</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: -<span class="number">180px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="comment">/* text-align: center; */</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="comment">/* box-shadow: 0 0 10px rgba(0, 0, 0, .3); */</span></span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">1</span>);</span><br><span class="line">    <span class="attribute">border-top</span>: none;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">9999</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cart-msg</span> <span class="selector-tag">span</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">43px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header-wrapper</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置中间的header */</span></span><br><span class="line"><span class="selector-class">.header</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="comment">/* background-color: #bfa; */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置logo的h1 */</span></span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-class">.logo</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">22px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">55px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">55px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="comment">/* 隐藏logo中的字 */</span></span><br><span class="line">    <span class="attribute">text-indent</span>: -<span class="number">9999px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 统一设置logo的超链接 */</span></span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-class">.logo</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="comment">/* display: block; */</span></span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">55px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">55px</span>;</span><br><span class="line">    <span class="comment">/* background-image: url(&quot;../img/mi-logo.png&quot;); */</span></span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;../img/logo-mi2.png&quot;</span>);</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">55px</span> <span class="number">55px</span>;</span><br><span class="line">    <span class="attribute">background-position</span>: center;</span><br><span class="line">    <span class="attribute">transition</span>: left <span class="number">0.3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置home图标 */</span></span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-class">.logo</span> <span class="selector-class">.home</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ff6700</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;../img/mi-home.png&quot;</span>);</span><br><span class="line">    <span class="attribute">left</span>: -<span class="number">55px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置鼠标移入后改变图标的效果 */</span></span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-class">.logo</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.mi</span>&#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">55px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-class">.logo</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.home</span>&#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置中间的导航条 */</span></span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-class">.nav-wrapper</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">7px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">850px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置导航条 */</span></span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-class">.nav</span>&#123;</span><br><span class="line">    <span class="comment">/* width: 792px; */</span></span><br><span class="line">    <span class="comment">/* background-color: #bfa; */</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="comment">/* margin-left: 58px; */</span></span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">58px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置导航条中的li */</span></span><br><span class="line"><span class="selector-class">.nav</span> &gt; <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.all-goods-wrapper</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="comment">/* background-color: red; */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置左侧导航条样式 */</span></span><br><span class="line"><span class="selector-class">.left-menu</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">234px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">420px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">6</span>);</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">999</span>;</span><br><span class="line">    <span class="attribute">left</span>: -<span class="number">120px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-class">.left-menu</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">42px</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">42px</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-class">.left-menu</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ff6700</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.left-menu</span> <span class="selector-tag">a</span> <span class="selector-tag">i</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">42px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav-wrapper</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav-wrapper</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff6700</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 隐藏全部商品 */</span></span><br><span class="line"><span class="selector-class">.all-goods</span>&#123;</span><br><span class="line">    <span class="attribute">visibility</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*  */</span></span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-class">.goods-info</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">transition</span>: height <span class="number">0.5s</span>;</span><br><span class="line">    <span class="comment">/* height: 228px; */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="comment">/* border-top: 1px solid rgb(224, 224, 224); */</span></span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">9999</span>;</span><br><span class="line">    <span class="comment">/* box-shadow: 0 5px 3px rgba(0, 0, 0, .2); */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*  */</span></span><br><span class="line"><span class="comment">/* .nav li:not(:first-of-type):not(:last-of-type):not(:nth-child(9)):hover ~ .goods-info, */</span></span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-class">.show-goods</span><span class="selector-pseudo">:hover</span> ~ <span class="selector-class">.goods-info</span>,</span><br><span class="line"><span class="selector-class">.goods-info</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">228px</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="built_in">rgb</span>(<span class="number">224</span>, <span class="number">224</span>, <span class="number">224</span>);</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">5px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置搜索框容器 */</span></span><br><span class="line"><span class="selector-class">.search-wrapper</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">296px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">25px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.search-wrapper</span> <span class="selector-class">.search-inp</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">244px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgb</span>(<span class="number">224</span>, <span class="number">224</span>, <span class="number">224</span>);</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置input获取焦点后的样式 */</span></span><br><span class="line"><span class="selector-class">.search-wrapper</span> <span class="selector-class">.search-inp</span><span class="selector-pseudo">:focus</span>,</span><br><span class="line"><span class="selector-class">.search-wrapper</span> <span class="selector-class">.search-inp</span><span class="selector-pseudo">:focus</span> + <span class="selector-tag">button</span>&#123;</span><br><span class="line">    <span class="comment">/* outline: 1px solid #ff6700; */</span></span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#ff6700</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.search-wrapper</span> <span class="selector-class">.search-btn</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">52px</span>;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#616161</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid  <span class="built_in">rgb</span>(<span class="number">224</span>, <span class="number">224</span>, <span class="number">224</span>);</span><br><span class="line">    <span class="attribute">border-left</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.search-wrapper</span> <span class="selector-class">.search-btn</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ff6700</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置banner */</span></span><br><span class="line"><span class="selector-class">.banner</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">460px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.banner</span> <span class="selector-class">.img-list</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.banner</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">vertical-align</span>: top;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置五个导航点 */</span></span><br><span class="line"><span class="selector-class">.pointer</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">22px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">35px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pointer</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">4</span>) solid;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">4</span>);</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">6px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pointer</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.pointer</span> <span class="selector-tag">a</span><span class="selector-class">.active</span>&#123;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">4</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置两个箭头 */</span></span><br><span class="line"><span class="selector-class">.prev-next</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">41px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">69px</span>;</span><br><span class="line">    <span class="comment">/* background-color: red; */</span></span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;../img/icon-slides.png&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.prev-next</span> <span class="selector-class">.prev</span>&#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">234px</span>;</span><br><span class="line">    <span class="attribute">background-position</span>: -<span class="number">84px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.prev-next</span> <span class="selector-class">.prev</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.prev-next</span> <span class="selector-class">.next</span>&#123;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background-position</span>: -<span class="number">125px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.prev-next</span> <span class="selector-class">.next</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">background-position</span>: -<span class="number">42px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置回到顶部的元素 */</span></span><br><span class="line"><span class="selector-class">.back-top</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">26px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">160px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: orange;</span><br><span class="line">    <span class="comment">/* 开启固定定位 */</span></span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">margin-right</span>: -<span class="number">639px</span>;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">40px</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">        布局的等式</span></span><br><span class="line"><span class="comment">            left + margin-left + width + margin-right + right=视口宽度</span></span><br><span class="line"><span class="comment">            auto + 0 + 26 + 0 + 60 = 视口宽度</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            auto + 0 + 26 +0 + 50% = 视口宽度</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置底部广告栏 */</span></span><br><span class="line"><span class="selector-tag">body</span> <span class="selector-class">.ad</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">170px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="comment">/* background-color: red; */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ad</span> <span class="selector-class">.shortcut</span>,</span><br><span class="line"><span class="selector-class">.ad</span> <span class="selector-class">.ad-img</span>,</span><br><span class="line"><span class="selector-class">.ad</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置左侧快捷方式 */</span></span><br><span class="line"><span class="selector-class">.ad</span> <span class="selector-class">.shortcut</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">228px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">168px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#5f5750</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">6px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ad</span> <span class="selector-class">.shortcut</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置上边框 */</span></span><br><span class="line"><span class="selector-class">.ad</span> <span class="selector-class">.shortcut</span> <span class="selector-tag">li</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">64px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#665e57</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置左边框 */</span></span><br><span class="line"><span class="selector-class">.ad</span> <span class="selector-class">.shortcut</span> <span class="selector-tag">li</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">70px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#665e57</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>:  auto <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置快捷方式中的超链接 */</span></span><br><span class="line"><span class="selector-class">.ad</span> <span class="selector-class">.shortcut</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#cfccca</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">76px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">84px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ad</span> <span class="selector-class">.shortcut</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置ad的图标字体 */</span></span><br><span class="line"><span class="selector-class">.ad</span> <span class="selector-class">.shortcut</span> <span class="selector-tag">i</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置右侧图片 */</span></span><br><span class="line"><span class="selector-class">.ad</span> <span class="selector-class">.ad-img</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">316px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ad</span> <span class="selector-class">.ad-img</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ad</span> <span class="selector-class">.ad-img</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">vertical-align</span>: top;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4、reset-css"><a href="#4、reset-css" class="headerlink" title="4、reset.css"></a>4、reset.css</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* v2.0 | 20110126</span></span><br><span class="line"><span class="comment">  http://meyerweb.com/eric/tools/css/reset/ </span></span><br><span class="line"><span class="comment">  License: none (public domain)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-tag">html</span>, <span class="selector-tag">body</span>, <span class="selector-tag">div</span>, <span class="selector-tag">span</span>, applet, <span class="selector-tag">object</span>, <span class="selector-tag">iframe</span>,</span><br><span class="line"><span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>, <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, <span class="selector-tag">h6</span>, <span class="selector-tag">p</span>, <span class="selector-tag">blockquote</span>, pre,</span><br><span class="line"><span class="selector-tag">a</span>, <span class="selector-tag">abbr</span>, acronym, <span class="selector-tag">address</span>, big, <span class="selector-tag">cite</span>, <span class="selector-tag">code</span>,</span><br><span class="line"><span class="selector-tag">del</span>, <span class="selector-tag">dfn</span>, <span class="selector-tag">em</span>, <span class="selector-tag">img</span>, <span class="selector-tag">ins</span>, <span class="selector-tag">kbd</span>, <span class="selector-tag">q</span>, s, <span class="selector-tag">samp</span>,</span><br><span class="line">small, strike, <span class="selector-tag">strong</span>, sub, <span class="selector-tag">sup</span>, tt, <span class="selector-tag">var</span>,</span><br><span class="line"><span class="selector-tag">b</span>, u, <span class="selector-tag">i</span>, center,</span><br><span class="line"><span class="selector-tag">dl</span>, <span class="selector-tag">dt</span>, <span class="selector-tag">dd</span>, <span class="selector-tag">ol</span>, <span class="selector-tag">ul</span>, <span class="selector-tag">li</span>,</span><br><span class="line"><span class="selector-tag">fieldset</span>, <span class="selector-tag">form</span>, <span class="selector-tag">label</span>, <span class="selector-tag">legend</span>,</span><br><span class="line"><span class="selector-tag">table</span>, <span class="selector-tag">caption</span>, <span class="selector-tag">tbody</span>, <span class="selector-tag">tfoot</span>, <span class="selector-tag">thead</span>, <span class="selector-tag">tr</span>, <span class="selector-tag">th</span>, <span class="selector-tag">td</span>,</span><br><span class="line"><span class="selector-tag">article</span>, <span class="selector-tag">aside</span>, <span class="selector-tag">canvas</span>, <span class="selector-tag">details</span>, embed, </span><br><span class="line"><span class="selector-tag">figure</span>, <span class="selector-tag">figcaption</span>, <span class="selector-tag">footer</span>, <span class="selector-tag">header</span>, <span class="selector-tag">hgroup</span>, </span><br><span class="line"><span class="selector-tag">menu</span>, <span class="selector-tag">nav</span>, output, ruby, <span class="selector-tag">section</span>, <span class="selector-tag">summary</span>,</span><br><span class="line"><span class="selector-tag">time</span>, <span class="selector-tag">mark</span>, <span class="selector-tag">audio</span>, <span class="selector-tag">video</span> &#123;</span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">font-size</span>: <span class="number">100%</span>;</span><br><span class="line">	<span class="attribute">font</span>: inherit;</span><br><span class="line">	<span class="attribute">vertical-align</span>: baseline;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* HTML5 display-role reset for older browsers */</span></span><br><span class="line"><span class="selector-tag">article</span>, <span class="selector-tag">aside</span>, <span class="selector-tag">details</span>, <span class="selector-tag">figcaption</span>, <span class="selector-tag">figure</span>, </span><br><span class="line"><span class="selector-tag">footer</span>, <span class="selector-tag">header</span>, <span class="selector-tag">hgroup</span>, <span class="selector-tag">menu</span>, <span class="selector-tag">nav</span>, <span class="selector-tag">section</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">	<span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ol</span>, <span class="selector-tag">ul</span> &#123;</span><br><span class="line">	<span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">blockquote</span>, <span class="selector-tag">q</span> &#123;</span><br><span class="line">	<span class="attribute">quotes</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">blockquote</span><span class="selector-pseudo">:before</span>, <span class="selector-tag">blockquote</span><span class="selector-pseudo">:after</span>,</span><br><span class="line"><span class="selector-tag">q</span><span class="selector-pseudo">:before</span>, <span class="selector-tag">q</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">	<span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">	<span class="attribute">content</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">	<span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">	<span class="attribute">border-spacing</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="十、animation（动画）"><a href="#十、animation（动画）" class="headerlink" title="十、animation（动画）"></a>十、animation（动画）</h2><h3 id="1、过渡"><a href="#1、过渡" class="headerlink" title="1、过渡"></a>1、过渡</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        *&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: silver;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span> <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: <span class="number">700px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                过渡transition</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    通过过渡可以指定一个属性发生变化时的切换方式</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    通过过渡可以创建一些非常好的效果，提升用户的体验</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transition: all 2s; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                transition-property: ; 指定要执行过渡的属性</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                多个属性用逗号,隔开，全部属性用all</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                大部分属性都支持过渡效果</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transition-property: all; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                transition-duration:指定过渡效果要持续的时间  </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                时间单位s和ms</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                也可以分别指定时间，用逗号隔开</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transition-duration: 5s; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                transition-timing-function: ;过渡的时序函数 </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                指定动画过渡执行的方式</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                可选值：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    ease默认值，慢速开始，先加速，再减速</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    linear 匀速运动</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    ease-in 加速运动</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    ease-out 减速运动</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    ease-in-out 先加速后减速</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    cubic-bezier()来指定时序函数</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        https://cubic-bezier.com</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    steps()分布执行过渡效果</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        可以设置第二个值</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            end默认值，在时间段结束时执行过渡</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                            start在时间段开始时执行过渡</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transition-timing-function: cubic-bezier(.32,1.64,.43,-1.23); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transition-timing-function: steps(5,start); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transition-delay: ;过渡效果的延迟，等待一段时间后执行过渡 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transition-delay: 2s; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* tansition可以同时设置过渡相关的所有属性，只有一个要求，如果要写延迟，则两个时间中第一个是持续时间，第二个是延迟时间 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: margin-left <span class="number">2s</span> <span class="number">2s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* width: 200px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            height: 200px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            background-color: blue; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box3</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: <span class="number">700px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transition-property:all ; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transition-duration: 5s; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transition-timing-function: ease; */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>练习</p>
<h3 id="2、动画"><a href="#2、动画" class="headerlink" title="2、动画"></a>2、动画</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        *&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: silver;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span> <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transition: 2s; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置box2的动画 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* animation-name 要对当前元素生效关键帧的名字 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-name</span>: test;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* animation-duration动画的执行时间 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-duration</span>: <span class="number">2s</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 动画延迟 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-delay</span>: <span class="number">2s</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 函数 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-timing-function</span>: ease-in-out;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                animation-iteration-count:动画执行的次数 ; </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    可选值：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        整数</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        infinite 无限执行</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-iteration-count</span>:<span class="number">3</span> ;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                animation-direction: ; </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                指定动画运行的方向</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    可选值</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    默认值normal 从from到to运行，每次都这样</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    reverse从to到from运行，每次都是这样</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    alternate 从from到to运行，重复执行动画时折返</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    alternate-reverse从to到from运行，重复执行动画时折返</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-direction</span>: normal;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                animation-play-state: 设置动画的执行状态; </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                可选值：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    running默认值，动画执行</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    paused动画暂停</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-play-state</span>: running;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                animation-fill-mode:动画的填充模式 ; </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                可选值：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    none默认值 动画执行完回到元素原来的位置</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    forwards动画执行完停到结束的位置</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    backwards动画延迟等待时，元素就会处于开始位置</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    both结合了forwards和backwards</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-fill-mode</span>: backwards;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* animation简写属性 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation</span>: test <span class="number">2s</span> <span class="number">3</span> <span class="number">1s</span> alternate;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-play-state</span>: paused;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* .box1:hover div&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            margin-left: 700px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            动画和过渡类似，都是可以实现一些动态的效果</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                不同的是过渡需要在某个属性发生变化时才会触发</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                动画可以自动触发动态效果</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            设置动画效果，必须先设置一个关键帧，关键帧设置了动画执行的每一个步骤</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@keyframes</span> test &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* to表示动画开始的位置 也可以使用百分率表示%*/</span></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">from</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin-left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* to表示动画结束的位置 */</span></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">to</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin-left</span>: <span class="number">700px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="3、动画"><a href="#3、动画" class="headerlink" title="3、动画"></a>3、动画</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.outer</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: <span class="number">10px</span> black solid;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.outer</span> <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation</span>: ball <span class="number">0.5s</span> forwards linear infinite alternate;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.outer</span> <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-delay</span>: <span class="number">0.1s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.outer</span> <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: bisque;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-delay</span>: <span class="number">0.2s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.outer</span> <span class="selector-class">.box3</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-delay</span>: <span class="number">0.3s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.outer</span> <span class="selector-class">.box4</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-delay</span>: <span class="number">0.4s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.outer</span> <span class="selector-class">.box5</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-delay</span>: <span class="number">0.5s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.outer</span> <span class="selector-class">.box6</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: purple;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-delay</span>: <span class="number">0.6s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.outer</span> <span class="selector-class">.box7</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-delay</span>: <span class="number">0.7s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.outer</span> <span class="selector-class">.box8</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-delay</span>: <span class="number">0.8s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 创建小球下落的动画 */</span></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@keyframes</span> ball &#123;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">from</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin-top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">to</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin-top</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 20%,60%,to&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                margin-top: 400px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                animation-timing-function: ease-out;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            40%&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                margin-top: 100px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            80%&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                margin-top: 200px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            &#125; */</span></span></span><br><span class="line"><span class="language-css">            </span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;outer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box6&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box7&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="4、变形——X、Y轴"><a href="#4、变形——X、Y轴" class="headerlink" title="4、变形——X、Y轴"></a>4、变形——X、Y轴</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">238</span>, <span class="number">235</span>, <span class="number">229</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                变形就是通过css来改变元素的形状或位置</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    变形不会影响页面的布局</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                transform用来设置元素的变形效果</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -平移：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        translateX()沿着x轴方向平移</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        translateY()沿着Y轴方向平移</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        translateZ()沿着Z轴方向平移</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        平移元素的百分比是相对于自身计算的 </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: translateY(-100px); */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">100%</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* .box2&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            width: 200px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            height: 200px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            background-color: orange;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            margin: 0px auto;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box3</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* width: 100px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            height: 100px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            这种方式只适用于元素的大小确定的</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            left: 0;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            right: 0;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            bottom: 0;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            top: 0;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            margin: auto; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">50%</span>) <span class="built_in">translateY</span>(-<span class="number">50%</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box4</span>,<span class="selector-class">.box5</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">220px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: all .<span class="number">3s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box4</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">4px</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">3</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;div class=&quot;box3&quot;&gt;</span></span><br><span class="line"><span class="comment">        aaa</span></span><br><span class="line"><span class="comment">    &lt;/div&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="5、Z轴平移"><a href="#5、Z轴平移" class="headerlink" title="5、Z轴平移"></a>5、Z轴平移</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置当前网页的视距为800px 人眼距离网页的距离 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">perspective</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">474px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">355px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-color: #bfa; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">./OIP-C.jpg</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-size</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">200px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                z轴平移，调整元素在z轴的位置，正常情况下是调整元素和人眼之间的距离</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    距离越大，离人越近</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                z轴平移属性立体效果（近大远小），默认情况下网页是不支持透视的</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    如果需要看到效果，必须设置网页的视距</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>:all <span class="number">2s</span> ;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(<span class="number">780px</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span>点我一下<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="6、旋转"><a href="#6、旋转" class="headerlink" title="6、旋转"></a>6、旋转</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置当前网页的视距为800px 人眼距离网页的距离 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">perspective</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">200px</span> auto;</span></span><br><span class="line"><span class="language-css">       </span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>:all <span class="number">2s</span> ;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                通过旋转可以使元素沿着x，y或z旋转指定的角度</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                rotateX()</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                rotateY()</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                rotateZ()</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                deg</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                turn</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: rotateZ(360deg); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: rotateX(360deg); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: rotateY(360deg); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: rotateY(180deg) translateZ(400px); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform:translateZ(400px) rotateY(180deg) ; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">180deg</span>);</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置是否显示元素的背面 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">backface-visibility</span>: hidden;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">       </span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./OIP-C.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="7、缩放"><a href="#7、缩放" class="headerlink" title="7、缩放"></a>7、缩放</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">html</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">perspective</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: <span class="number">2s</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 变形原点 默认值center */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform-origin</span>: <span class="number">0</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                对元素进行缩放的函数</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                scaleX()水平方向</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                scaleY()垂直方向</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                scale双方向缩放</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">2</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.img-wrapper</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">img</span>&#123;</span></span><br><span class="line"><span class="language-css">           </span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: <span class="number">2s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.img-wrapper</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">img</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.2</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;img-wrapper&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;an.jpg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="十一、less"><a href="#十一、less" class="headerlink" title="十一、less"></a>十一、less</h2><h3 id="1、less的简介"><a href="#1、less的简介" class="headerlink" title="1、less的简介"></a>1、less的简介</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">html</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* css原生也支持变量的设置 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attr">--color</span>:orange;</span></span><br><span class="line"><span class="language-css">            <span class="attr">--lenght</span>:<span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* calc()计算函数 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">1000px</span>/<span class="number">10</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="built_in">var</span>(--lenght);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">var</span>(--color);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="built_in">var</span>(--lenght);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="built_in">var</span>(--lenght);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">var</span>(--color);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box3</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>:<span class="built_in">var</span>(--lenght);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="built_in">var</span>(--lenght);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">10px</span> solid <span class="built_in">var</span>(--color);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        less是一门css的预处理语言</span></span><br><span class="line"><span class="comment">            -less是一个css的增强版，通过less可以编写更少的代码实现更强大的样式</span></span><br><span class="line"><span class="comment">            -在less中添加了许多新特性，像对变量的支持，对mixin的支持.....</span></span><br><span class="line"><span class="comment">            -less的语法大致和css语法是一致的，但是less中增添了许多css的扩展</span></span><br><span class="line"><span class="comment">                所以浏览器无法直接执行less代码，要执行必须要将less转换为css，再由浏览器执行</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- .box$*3 --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span>aaaa<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span>aaaa<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span>aaaa<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2、less的语法"><a href="#2、less的语法" class="headerlink" title="2、less的语法"></a>2、less的语法</h3><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="comment">//less中的单行注释，注释内容不会被解析到css中</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    css中的注释，内容会被解析到css文件中</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-class">.box1</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span><br><span class="line">    <span class="selector-class">.box2</span>&#123;</span><br><span class="line">        <span class="attribute">background-color</span>: orange;</span><br><span class="line">        <span class="selector-class">.box4</span>&#123;</span><br><span class="line">            <span class="attribute">background-color</span>: red;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.box3</span>&#123;</span><br><span class="line">        <span class="attribute">background-color</span>: green;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 变量，在变量可以存储一个任意的值</span></span><br><span class="line"><span class="comment">//并且我们可以在需要时，任意的修改变量中的值</span></span><br><span class="line"><span class="comment">//变量的语法，@变量名</span></span><br><span class="line"><span class="variable">@a:</span><span class="number">100px</span>;</span><br><span class="line"><span class="variable">@b:</span><span class="number">#bfa</span>;</span><br><span class="line"><span class="variable">@c:</span>box6;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box5</span>&#123;</span><br><span class="line">    <span class="comment">// 使用变量时，如果是直接使用则以 @变量名 的形式使用</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="variable">@a</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">@b</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 作为类名时，或者一部分值使用时必须以 @&#123;变量名&#125; 的形式使用</span></span><br><span class="line"><span class="selector-class">.@&#123;c&#125;</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="variable">@a</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: url(<span class="string">&quot;@&#123;c&#125;/1.jpg&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">@d:</span><span class="number">300px</span>;</span><br><span class="line"><span class="variable">@d:</span><span class="number">400px</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="comment">// 变量发生重名时，晚赋值的会覆盖前面的</span></span><br><span class="line">    <span class="variable">@d:</span><span class="number">1000px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="variable">@d</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="variable">@e</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以在变量声明前就使用变量</span></span><br><span class="line"><span class="variable">@e:</span><span class="number">335px</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">height</span>: $width;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box1</span>&#123;</span><br><span class="line">    <span class="selector-class">.box2</span>&#123;</span><br><span class="line">        <span class="attribute">color</span>: red;</span><br><span class="line">    &#125;</span><br><span class="line">    &gt;<span class="selector-class">.box3</span>&#123;</span><br><span class="line">        <span class="attribute">color</span>: red;</span><br><span class="line">        <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">            <span class="attribute">color</span>: blue;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 为box1设置一个hover</span></span><br><span class="line">    <span class="comment">// &amp;表示外层的父元素</span></span><br><span class="line">    <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">        <span class="attribute">color</span>: orange;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">div</span> <span class="selector-tag">&amp;</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p1</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// .p2&#123;</span></span><br><span class="line"><span class="comment">//     width: 100px;</span></span><br><span class="line"><span class="comment">//     height: 100px;</span></span><br><span class="line"><span class="comment">//     color: orange;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// :extend()对当前选择器扩展指定选择器的样式（选择器分组）</span></span><br><span class="line"><span class="selector-class">.p2</span>:<span class="selector-tag">extend</span>(.p1)&#123;</span><br><span class="line">    <span class="attribute">color</span>: orange;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p3</span>&#123;</span><br><span class="line">    <span class="comment">//直接对指定的样式进行引用，这里相对于将p1的样式在这里进行了复制</span></span><br><span class="line">    <span class="selector-class">.p1</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用类选择器时可以在选择器后边加一个括号，这时，我们实际上就创建了一个mixins</span></span><br><span class="line"><span class="comment">// 自己不存在，但是别人可以引用</span></span><br><span class="line"><span class="selector-class">.p4</span>()&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p5</span>&#123;</span><br><span class="line">    <span class="selector-class">.p4</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 混合函数,在混合函数中可以直接设置变量</span></span><br><span class="line"><span class="selector-class">.test</span>(<span class="variable">@w</span>:<span class="number">100px</span>,<span class="variable">@h</span>:<span class="number">200px</span>,<span class="variable">@bg-color</span>:red)&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="variable">@w</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="variable">@h</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="variable">@bg-color</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="comment">//调用混合函数，按顺序传递参数</span></span><br><span class="line">    <span class="comment">// .test(200px,300px,#bfa);</span></span><br><span class="line">    <span class="comment">//也可以直接指定对应值</span></span><br><span class="line">    <span class="comment">// .test(@bg-color:red,@w:300px,@h:200px);</span></span><br><span class="line">    <span class="comment">// 指定了默认值，参数数量可以小于总参数数量</span></span><br><span class="line">    <span class="selector-class">.test</span>(<span class="number">300px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">span</span>&#123;</span><br><span class="line">    <span class="comment">// 取颜色的平均值</span></span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">average</span>(red,yellow);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="comment">// darken加深颜色</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">darken</span>(<span class="number">#bfa</span>,<span class="number">20%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3、less的补充"><a href="#3、less的补充" class="headerlink" title="3、less的补充"></a>3、less的补充</h3><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以通过import直接导入其他less文件到此文件</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;syntax2.less&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box1</span>&#123;</span><br><span class="line">    <span class="comment">//在less中所有的数值可以直接进行运算</span></span><br><span class="line">    <span class="comment">// + - * /</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span> * <span class="number">10</span>;</span><br><span class="line">    <span class="comment">// 除法需要括号</span></span><br><span class="line">    <span class="attribute">height</span>: (<span class="number">100px</span>/<span class="number">2</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在设置的扩展中，修改json文件，添加从插件处复制的一段代码，全部设置为true</p>
<p>方便浏览器查找样式位置</p>
<h2 id="十二、flex"><a href="#十二、flex" class="headerlink" title="十二、flex"></a>十二、flex</h2><h3 id="1、弹性盒"><a href="#1、弹性盒" class="headerlink" title="1、弹性盒"></a>1、弹性盒</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        *&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>:<span class="number">10px</span> solid red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                flex-direction指定容器中弹性元素的排列方式</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                可选值：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    row默认值，弹性元素在容器中水平排列（左向右）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        主轴：自左向右</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    row-reverse，弹性元素在容器中水平排列（右向左）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        主轴：自右向左</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    column 弹性元纵向排列（自上向下）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    column-reverse 弹性元素方向纵向排列（自下向上）</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                主轴：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    弹性元素排列的方向称为主轴</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                侧轴：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    与主轴垂直的方向称为侧轴</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-direction</span>: row;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* float: left;会高度塌陷 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                弹性元素的属性：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    flex-grow:指定弹性元的伸展系数</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -当父元素有多余的空间时，子元素如何伸展</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -父元素的剩余空间，会按照给定的系数换算的比例进行分配</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    flex-shrink:指定弹性元素的收缩系数 ;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -当父元素的空间不足以容纳所有子元素时，如何对子元素进行收缩</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -0不收缩</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* flex-grow: 0; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-shrink</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* flex-grow: 1; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-shrink</span>:<span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* flex-grow: 2; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-shrink</span>: <span class="number">2</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>)&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* flex-grow: 3; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-shrink</span>: <span class="number">3</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        flex弹性盒、伸缩盒</span></span><br><span class="line"><span class="comment">            -是css中的又一种布局手段，他主要用来代替浮动来完成页面的布局</span></span><br><span class="line"><span class="comment">        兼容选浮动，未来选flex</span></span><br><span class="line"><span class="comment">            -flex可以使元素具有弹性，让元素可以跟随页面的大小的改变而改变</span></span><br><span class="line"><span class="comment">            -弹性容器</span></span><br><span class="line"><span class="comment">                -要使用弹性盒，必须将一个元素设置为一个弹性容器</span></span><br><span class="line"><span class="comment">                -我们通过display来设置弹性容器</span></span><br><span class="line"><span class="comment">                    display:flex 设置为块级弹性容器</span></span><br><span class="line"><span class="comment">                    display:inline-flex 设置为行内的弹性容器</span></span><br><span class="line"><span class="comment">            </span></span><br><span class="line"><span class="comment">            -弹性元素</span></span><br><span class="line"><span class="comment">                -弹性容器的直接子元素是弹性元素（弹性项）</span></span><br><span class="line"><span class="comment">                -注意是直接！！！</span></span><br><span class="line"><span class="comment">                -一个元素可以同时是弹性容器和弹性元素</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2、弹性容器的样式"><a href="#2、弹性容器的样式" class="headerlink" title="2、弹性容器的样式"></a>2、弹性容器的样式</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        *&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>:<span class="number">10px</span> solid red;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置ul为弹性容器 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* flex-direction: column; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                flex-wrap: ; </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    设置弹性元素是否在弹性容器中自动换行</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    可选值：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        nowrap 默认值，不自动换行</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        wrap 元素沿着辅轴方向自动换行</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        wrap-reverse元素沿着辅轴反方向换行</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* flex-wrap: nowrap; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* flex-flow: wrap 和direction的简写属性 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* flex-flow: row wrap; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                justify-content</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    如何分配主轴上的空白空间（主轴上的元素如何排列）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    可选值;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        flex-start:元素沿着主轴的起边排列</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        flex-end:元素沿着主轴的终边排列</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        center:元素居中排列</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        space-around 空白分布到元素两侧</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        space-evenly 空白分布到元素的单侧</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        space-between 空白均匀分布到元素间</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* justify-content: flex-start; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-shrink</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="language-css">           </span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">          </span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>)&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">           </span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="3、弹性容器的样式"><a href="#3、弹性容器的样式" class="headerlink" title="3、弹性容器的样式"></a>3、弹性容器的样式</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        *&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">600px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>:<span class="number">10px</span> solid red;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置ul为弹性容器 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* flex-direction: column; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                flex-wrap: ; </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    设置弹性元素是否在弹性容器中自动换行</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    可选值：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        nowrap 默认值，不自动换行</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        wrap 元素沿着辅轴方向自动换行</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        wrap-reverse元素沿着辅轴反方向换行</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* flex-wrap: nowrap; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* flex-flow: wrap 和direction的简写属性 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-flow</span>: row wrap;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                justify-content</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    如何分配主轴上的空白空间（主轴上的元素如何排列）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    可选值;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        flex-start:元素沿着主轴的起边排列</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        flex-end:元素沿着主轴的终边排列</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        center:元素居中排列</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        space-around 空白分布到元素两侧</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        space-evenly 空白分布到元素的单侧</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        space-between 空白均匀分布到元素间</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* justify-content: flex-start; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                align-items: 元素在辅轴上如何对齐; </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    元素间的操作</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    可选值：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        stretch 默认值。将元素的高度设置为相同的值（行与行）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        flex-start 元素不会拉伸，沿着辅轴的起边对齐</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        flex-end 沿着辅轴的终边对齐</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        center 居中对齐</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        baseline 基线对齐</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            </span></span><br><span class="line"><span class="language-css">            <span class="comment">/* align-items: stretch; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                align-content: 辅轴空白空间的分布;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                可选值与justify-content一样</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* align-content: center; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* height: 100px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-shrink</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* align-self: ;用来覆盖当前弹性元素上的align-items */</span></span></span><br><span class="line"><span class="language-css">           </span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">          </span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>)&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">           </span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">4</span>)&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">          </span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">5</span>)&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="language-css">           </span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>2</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>3</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>2</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="4、弹性元素的样式"><a href="#4、弹性元素的样式" class="headerlink" title="4、弹性元素的样式"></a>4、弹性元素的样式</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        *&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>:<span class="number">10px</span> solid red;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置ul为弹性容器 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">          </span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                flex-grow</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                弹性的增长系数</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* flex-grow: 1; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                弹性系数缩减系数</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -缩减系数的计算方式比较复杂</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -缩减多少是根据 缩减系数和元素大小来计算的</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* flex-shrink: 1; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                元素的基础长度</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                flex-basic 指定的是元素在主轴上的基础长度</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    如果主轴是横向的，则该值确定的就是元素的宽度</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    如果主轴是纵向的，则该值确定的就是元素的高度</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -默认值是auto，表示参考元素自身的高度或宽度</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    -如果传递了一个具体的数值，则以该值为准</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* flex-basis: auto; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                flex可以设置弹性元素所有的三个样式</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    flex 增长 缩减 基础（按照顺序）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                      initial: 0 1 auto</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                      auto: 1 1 auto</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                      none: 0 0 auto 弹性元素没有弹性</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex</span>: initial;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="language-css">           <span class="comment">/* order 指定弹性元素的排列顺序 */</span></span></span><br><span class="line"><span class="language-css">           <span class="attribute">order</span>: <span class="number">2</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">order</span>: <span class="number">3</span>;</span></span><br><span class="line"><span class="language-css">          </span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>)&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">           <span class="attribute">order</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="5、像素"><a href="#5、像素" class="headerlink" title="5、像素"></a>5、像素</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        像素：</span></span><br><span class="line"><span class="comment">            -屏幕是由一个一个发光的小点构成的，这一个个的小点就是像素</span></span><br><span class="line"><span class="comment">            -分辨率。1920x1080 说的就是屏幕中的像素数量</span></span><br><span class="line"><span class="comment">            -在前端开发中像素要分成两种情况讨论，css像素和物理像素</span></span><br><span class="line"><span class="comment">            -物理像素，上述所说的小点就属于物理像素</span></span><br><span class="line"><span class="comment">            -css像素，编写网页时，我们所用像素都是css像素</span></span><br><span class="line"><span class="comment">                -浏览器在显示网页时，需要将css像素转换为物理像素然后再呈现</span></span><br><span class="line"><span class="comment">                -一个css像素最终由几个物理像素显示，由浏览器决定</span></span><br><span class="line"><span class="comment">                    默认情况下在pc端，一个css像素，一个物理像素</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">        视口（viewport）</span></span><br><span class="line"><span class="comment">            -视口就是屏幕中用来显示网页的区域</span></span><br><span class="line"><span class="comment">            -我们可以通过查看视口的大小，来计算css像素和物理像素的比值</span></span><br><span class="line"><span class="comment">            -默认情况下</span></span><br><span class="line"><span class="comment">                视口宽度 1920px（css像素）</span></span><br><span class="line"><span class="comment">                        1920px（物理像素）</span></span><br><span class="line"><span class="comment">                        -此时，css像素和物理像素的比是1:1</span></span><br><span class="line"><span class="comment">                        </span></span><br><span class="line"><span class="comment">                放大两倍的情况：</span></span><br><span class="line"><span class="comment">                    视口宽度960px（css像素0</span></span><br><span class="line"><span class="comment">                            1920px(物理像素)</span></span><br><span class="line"><span class="comment">                            -此时，cs像素和物理像素的比是1:2</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                我们可以通过改变视口的大小，来改变css像素和物理像素的比值</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="6、移动端"><a href="#6、移动端" class="headerlink" title="6、移动端"></a>6、移动端</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span></span><br><span class="line"><span class="comment">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">900px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        在不同的屏幕。单位像素的大小是不同的，像素越小越清晰</span></span><br><span class="line"><span class="comment">            24寸 1920x1080</span></span><br><span class="line"><span class="comment">            iphone6 4.7寸 750x1334</span></span><br><span class="line"><span class="comment">            智能手机的像素点 远远小于计算机的像素点</span></span><br><span class="line"><span class="comment">            问题：一个宽度为900px的网页在iPhone6中如何显示</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            默认情况下，移动端的网页都会将视口设置为980像素(css像素)</span></span><br><span class="line"><span class="comment">                以确保pc端的网页可以在移动端正常访问，但是如果网页的宽度超过了980，移动端的浏览器会自动缩放以显示完整的网页</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            https://material.io/resources/devices/</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            所以基本大部分的pc端网站都可以在移动端中正常浏览，但是往往不会有一个好的体验</span></span><br><span class="line"><span class="comment">                为了解决这个问题，大部分网站都会单独为移动端设计一个网页</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="7、移动端的页面-html"><a href="#7、移动端的页面-html" class="headerlink" title="7、移动端的页面.html"></a>7、移动端的页面.html</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 设置视口大小 device-width表示设置的宽度（完美视口）--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        *&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        移动端默认的视口是980px（css像素）</span></span><br><span class="line"><span class="comment">            默认情况下，移动端的像素比就是 980/移动端的宽度</span></span><br><span class="line"><span class="comment">            如果直接在网页中编写移动端代码，这样在980视口下，像素比是非常不好的</span></span><br><span class="line"><span class="comment">                导致网页中的内容非常的小</span></span><br><span class="line"><span class="comment">            编写移动端页面时，必须要确保有一个比较合理的像素比</span></span><br><span class="line"><span class="comment">                1css像素 对应两个物理像素</span></span><br><span class="line"><span class="comment">                1css像素 对应3个物理像素</span></span><br><span class="line"><span class="comment">            </span></span><br><span class="line"><span class="comment">            我们可以通过meta标签来设置视口大小</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            -每一款移动设备设计时，都会有一个最佳的像素比，</span></span><br><span class="line"><span class="comment">                一般我们只需要将像素比设置为该值即可得到一个最佳效果</span></span><br><span class="line"><span class="comment">                将像素比设置为最佳像素比的视口大小，我们称其为完美视口</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    将网页的视口设置为完美视口</span></span><br><span class="line"><span class="comment">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    结论：以后写移动端的页面，就把上边这个玩意先写上</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="8、视口"><a href="#8、视口" class="headerlink" title="8、视口"></a>8、视口</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        *&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100vw</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        不同的设备完美的视口大小是不一样的</span></span><br><span class="line"><span class="comment">            iphone 6 --375</span></span><br><span class="line"><span class="comment">            iphone6p --414</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        由于不同设置视口和像素比不同，所以同样375像素在不同的设备下意义是不一样的</span></span><br><span class="line"><span class="comment">            比如在iphone6中，375就是全屏，但到了plus中375就会缺一块</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        所以在移动端开发时，就不能在使用px来进行布局了</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        vw表示的是视口的宽度（viewport width）</span></span><br><span class="line"><span class="comment">            100vw = 一个视口的宽度</span></span><br><span class="line"><span class="comment">            -1vw = 百分之一视口宽度</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            vw这个单位永远相当于视口宽度进行计算</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            设计图的宽度</span></span><br><span class="line"><span class="comment">                750px X 1125px</span></span><br><span class="line"><span class="comment">            </span></span><br><span class="line"><span class="comment">            设计图</span></span><br><span class="line"><span class="comment">                750px</span></span><br><span class="line"><span class="comment">            </span></span><br><span class="line"><span class="comment">            使用vm作为单位</span></span><br><span class="line"><span class="comment">                100vw</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            创建一个48px x 35px大小的元素</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            100vw = 750px（设计图）</span></span><br><span class="line"><span class="comment">            6.4vw = 48px</span></span><br><span class="line"><span class="comment">            4.667vw =35px</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="9、vw的适配方案"><a href="#9、vw的适配方案" class="headerlink" title="9、vw的适配方案"></a>9、vw的适配方案</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        *&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">html</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                网页中字体的大小是12px，不能设置一个比12px像素还小的字体</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    如果我们设置了设置了一个小于12px的字体，则字体自动设置为12px</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                0.1333333vw = 1px</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                5.3333vw = 40px</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">5.3333vw</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                em</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    - 1rem = 1 html的字体大小</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    1rem = 40px（设计图）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">1.2rem</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">0.875rem</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        48px x 35px</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="10、响应式布局"><a href="#10、响应式布局" class="headerlink" title="10、响应式布局"></a>10、响应式布局</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            使用媒体查询 </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                语法：@media 查询规则&#123;&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    媒体类型：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        all 所有设备</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        print 打印设备</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        screen 带屏幕的设备</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        speech 屏幕阅读器</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        可以使用,连接多个媒体类型，这样他们之间就是一个或的关系</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                    可以在媒体类型前添加一个only表示只有</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                        only的使用主要是为了兼容一些老版本的浏览器</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* @media print,screen &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            body&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                background-color: #bfa;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@media</span> <span class="keyword">only</span> screen &#123;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        响应式布局</span></span><br><span class="line"><span class="comment">            -网页可以根据不同的设备或窗口大小呈现出不同的效果</span></span><br><span class="line"><span class="comment">            -使用响应式布局，可以使一个网页使用于所有设备</span></span><br><span class="line"><span class="comment">            -响应布局的关键就是媒体查询</span></span><br><span class="line"><span class="comment">            -通过媒体查询，可以为不同的设备，或设备不同状态来分别设置样式</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="11、媒体查询"><a href="#11、媒体查询" class="headerlink" title="11、媒体查询"></a>11、媒体查询</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">                媒体类型：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                width：视口的宽度</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                height：视口的高度</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                要刚刚好=500px才会生效</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">                min-width 视口的最小宽度（大于等于宽度时生效）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                max-width 视口的最大宽度（小于等于宽度时生效）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* @media (min-width: 500px)&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            body&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                background-color: #bfa;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            样式的切换的分界点，我们称其为断点，也就是页面的样式会在这个点是发生变化</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            一般常用的断点</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">            小于768 超小屏幕 max-width=768px</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            大于768 小屏幕 min-width=768px</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            大于992 中型屏幕 min-width=992px</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            大于1200 大屏幕 min-width=1200px</span></span></span><br><span class="line"><span class="comment"><span class="language-css"></span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">500px</span> ) <span class="keyword">and</span> (<span class="attribute">max-width</span>:<span class="number">800px</span>)&#123;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">     </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端学习笔记</category>
      </categories>
  </entry>
  <entry>
    <title>Linux</title>
    <url>/posts/3d4b.html</url>
    <content><![CDATA[<p><meta name="referrer" content="no-referrer" /></p>
<h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><p>[TOC]</p>
<h1 id="一、基础"><a href="#一、基础" class="headerlink" title="一、基础"></a>一、基础</h1><h2 id="一、入门"><a href="#一、入门" class="headerlink" title="一、入门"></a>一、入门</h2><h3 id="1、介绍"><a href="#1、介绍" class="headerlink" title="1、介绍"></a>1、介绍</h3><h4 id="1、Linux主要发行版"><a href="#1、Linux主要发行版" class="headerlink" title="1、Linux主要发行版"></a>1、Linux主要发行版</h4><p>Ubuntu乌班图、RedHat红帽、CentOS、Debain蝶变、Fedora、SuSE、OpenSUSE示意图</p>
<h4 id="2、安装vm和Centos"><a href="#2、安装vm和Centos" class="headerlink" title="2、安装vm和Centos"></a>2、安装vm和Centos</h4><p>1、先安装vm</p>
<p>官方网址：<a href="https://www.vmware.com/cn.html">https://www.vmware.com/cn.html</a></p>
<p>其他地址：<a href="https://www.novmd.com/windows/740.html">https://www.novmd.com/windows/740.html</a></p>
<p>2、再安装Linux（CentOS7.6/CentOS8.1）</p>
<p>7.6网址（现在主流）：<a href="https://vault.centos.org/7.6.1810/isos/x86_64/">https://vault.centos.org/7.6.1810/isos/x86_64/</a></p>
<p> <a href="http://mirrors.aliyun.com/centos/7/isos/x86_64/CentOS-7-x86_64-DVD-2009.iso">http://mirrors.aliyun.com/centos/7/isos/x86_64/CentOS-7-x86_64-DVD-2009.iso</a></p>
<p>8.1网址（未来主流）：<a href="http://mirrors.aliyun.com/centos/8.1.1911/isos/x86_64/CentOS-8.1.1911-x86_64-dvd1.iso">http://mirrors.aliyun.com/centos/8.1.1911/isos/x86_64/CentOS-8.1.1911-x86_64-dvd1.iso</a></p>
<p>全部版本：<a href="https://mirrors.163.com/centos/">https://mirrors.163.com/centos/</a></p>
<p>3、vm和Linux的关系</p>
<p><img src="http://ri6otqj3z.hn-bkt.clouddn.com/img/202209141630075.png" alt="image-20220913171013192"></p>
<p>4、开始安装centos</p>
<h4 id="3、网络连接的三种模式"><a href="#3、网络连接的三种模式" class="headerlink" title="3、网络连接的三种模式"></a>3、网络连接的三种模式</h4><p><img src="http://ri6otqj3z.hn-bkt.clouddn.com/img/202209141630076.png" alt="image-20220913220218808"></p>
<h4 id="4、虚拟机克隆"><a href="#4、虚拟机克隆" class="headerlink" title="4、虚拟机克隆"></a>4、虚拟机克隆</h4><p><img src="http://ri6otqj3z.hn-bkt.clouddn.com/img/202209141630077.png" alt="image-20220913221828058"></p>
<h4 id="5、虚拟机快照"><a href="#5、虚拟机快照" class="headerlink" title="5、虚拟机快照"></a>5、虚拟机快照</h4><p><img src="http://ri6otqj3z.hn-bkt.clouddn.com/img/202209141630078.png" alt="image-20220913222652007"></p>
<h4 id="6、虚拟机的迁移和删除"><a href="#6、虚拟机的迁移和删除" class="headerlink" title="6、虚拟机的迁移和删除"></a>6、虚拟机的迁移和删除</h4><p><img src="http://ri6otqj3z.hn-bkt.clouddn.com/img/202209141630079.png" alt="image-20220913224010473"></p>
<h4 id="7、安装vmtools"><a href="#7、安装vmtools" class="headerlink" title="7、安装vmtools"></a>7、安装vmtools</h4><p><img src="http://ri6otqj3z.hn-bkt.clouddn.com/img/202209141630080.png" alt="image-20220914090813437"></p>
<p><img src="http://ri6otqj3z.hn-bkt.clouddn.com/img/202209141630081.png" alt="image-20220914090830113"></p>
<p>注意要使用root账号进行登录</p>
<p>cd/opt进入到opt目录</p>
<p>tar -zxvf xxx.tar.gz 解压</p>
<p>cd vmware…进入到解压后的目录</p>
<h4 id="8、设置共享文件夹"><a href="#8、设置共享文件夹" class="headerlink" title="8、设置共享文件夹"></a>8、设置共享文件夹</h4><p><img src="http://ri6otqj3z.hn-bkt.clouddn.com/img/202209141630082.png" alt="image-20220914092713740"></p>
<h4 id="9、Linux目录结构"><a href="#9、Linux目录结构" class="headerlink" title="9、Linux目录结构"></a>9、Linux目录结构</h4><p><img src="http://ri6otqj3z.hn-bkt.clouddn.com/img/202209141630083.png" alt="image-20220914094037685"></p>
<p><img src="http://ri6otqj3z.hn-bkt.clouddn.com/img/202209141630084.png" alt="image-20220914122651237"></p>
<p><img src="http://ri6otqj3z.hn-bkt.clouddn.com/img/202209141630085.png" alt="image-20220914123117437"></p>
<p><img src="http://ri6otqj3z.hn-bkt.clouddn.com/img/202209141630086.png" alt="image-20220914123323184"></p>
<p><img src="http://ri6otqj3z.hn-bkt.clouddn.com/img/202209141630087.png" alt="image-20220914123715410"></p>
<h3 id="2、实操"><a href="#2、实操" class="headerlink" title="2、实操"></a>2、实操</h3><h4 id="1、远程登录到Linux服务器"><a href="#1、远程登录到Linux服务器" class="headerlink" title="1、远程登录到Linux服务器"></a>1、远程登录到Linux服务器</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209142009766.png" alt="image-20220914200939593"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209142010127.png" alt="image-20220914201000983"></p>
<h4 id="2、安装Xshell6-远程操作）和XFTP6（文件的上传和下载）"><a href="#2、安装Xshell6-远程操作）和XFTP6（文件的上传和下载）" class="headerlink" title="2、安装Xshell6(远程操作）和XFTP6（文件的上传和下载）"></a>2、安装Xshell6(远程操作）和XFTP6（文件的上传和下载）</h4><p>下载free-for-home-school版本</p>
<p>下载地址：<a href="https://www.netsarang.com/en/free-for-home-school/">https://www.netsarang.com/en/free-for-home-school/</a></p>
<p>目前官网7版本免费提供学生使用</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209142029786.png" alt=""></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209142040093.png" alt="image-20220914203959828"></p>
<p>左边为window（主机）的文件系统，右边为Linux系统</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209142049186.png" alt="image-20220914204908999"></p>
<h5 id="怎么解决xftp7中文乱码问题？"><a href="#怎么解决xftp7中文乱码问题？" class="headerlink" title="怎么解决xftp7中文乱码问题？"></a><strong>怎么解决xftp7中文乱码问题？</strong></h5><p>在文件-&gt;会话属性-&gt;选项-&gt;编码</p>
<p>选择utf-8即可</p>
<p>小tips：Xshell7中输入命令reboot，能够远程重启Linux系统</p>
<h4 id="3、Vi和Vim编辑器"><a href="#3、Vi和Vim编辑器" class="headerlink" title="3、Vi和Vim编辑器"></a>3、Vi和Vim编辑器</h4><p>Linux系统会内置vi文本编辑器</p>
<p>Vim具有程序编辑的能力，可以看作是vi的增强版本，可以主动的以字体颜色辨别语法的正确性，方便程序设计，代码补完，编译以及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209142059233.png" alt="image-20220914205905009"></p>
<p>使用vim编写一个Hello.java程序，保存，步骤说明和演示。</p>
<p><strong>退出编辑模式：按esc按键</strong></p>
<p><strong>进入命令行模式：输入冒号:即可</strong></p>
<p><strong>在命令行模式下输入wq：保存并退出（write and quit）</strong></p>
<p><strong>tab键有快速补全功能</strong></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209142112699.png" alt="image-20220914211202458"></p>
<p><strong>q！强制退出并且不保存</strong></p>
<p><strong>w是保存</strong></p>
<p><strong>q是退出，如果未保存就退出，会有提醒</strong></p>
<h4 id="4、vi和vim的快捷键"><a href="#4、vi和vim的快捷键" class="headerlink" title="4、vi和vim的快捷键"></a>4、vi和vim的快捷键</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209142140420.png" alt="image-20220914214021218"></p>
<p>粘贴输入P即可</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209142159945.png" alt="image-20220914215929806"></p>
<h4 id="5、开机、重启、和用户登录注销"><a href="#5、开机、重启、和用户登录注销" class="headerlink" title="5、开机、重启、和用户登录注销"></a>5、开机、重启、和用户登录注销</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209142231917.png" alt="image-20220914223135704"></p>
<p>只输入shotdown默认一分钟后关机</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209142237314.png" alt="image-20220914223712160"></p>
<p>如果在普通用户下切换到root时，输入logout会回退到普通用户</p>
<h4 id="6、用户管理"><a href="#6、用户管理" class="headerlink" title="6、用户管理"></a>6、用户管理</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209142244013.png" alt="image-20220914224431770"></p>
<p><strong>pwd显示当前在哪个目录</strong></p>
<p><strong>passwd 用户名：为用户设置密码</strong></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209142251619.png" alt="image-20220914225131359"></p>
<p>userdel 用户名  只删除用户，不删除用户家目录</p>
<p>userdel -r 用户名  删除用户以及其家目录</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209142256041.png" alt="image-20220914225633910"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209142257997.png" alt="image-20220914225750841"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209142300146.png" alt="image-20220914230019037"></p>
<p>只会显示第一次登录的用户</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209142301558.png" alt="image-20220914230112349"></p>
<p>用户组方便管理，可以统一附加权限</p>
<p>clear清屏</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209142314985.png" alt="image-20220914231458835"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209142316456.png" alt="image-20220914231651252"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209142320629.png" alt="image-20220914232012562"></p>
<p>bashell  tcshell  cshell</p>
<p>组内用户列表被隐藏起来了</p>
<h4 id="7、实用指令"><a href="#7、实用指令" class="headerlink" title="7、实用指令"></a>7、实用指令</h4><h5 id="运行级别"><a href="#运行级别" class="headerlink" title="运行级别"></a><strong>运行级别</strong></h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209150816742.png" alt="image-20220915081556507"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209150823398.png" alt="image-20220915082312043"></p>
<h5 id="找回root密码"><a href="#找回root密码" class="headerlink" title="找回root密码"></a><strong>找回root密码</strong></h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209150829431.png" alt="image-20220915082917259"></p>
<p>1、首先，启动系统，进入开机界面，在界面中按“e”进入编辑界面。如图</p>
<p>2、 进入编辑界面，使用键盘上的上下键把光标往下移动，找到以““Linux16”开头内容所在的行数”，在行的最后面输入：init=/bin/sh。如图</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209150837735.png" alt="image-20220915083754673"></p>
<p>3、 接着，输入完成后，直接按快捷键：Ctrl+x 进入<strong>单用户模式</strong>。</p>
<p>4、   接着，在光标闪烁的位置中输入：mount -o remount,rw /（注意：各个单词间有空格），完成后按键盘的回车键（Enter）。如图</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209150838903.png" alt="image-20220915083827865"></p>
<p>5、  在新的一行最后面输入：passwd， 完成后按键盘的回车键（Enter）。输入密码，<strong>然后再次确认密码即</strong>可(<strong>韩顺平提示:</strong> <strong>密码长度最好8**</strong>位以上,<strong>**但不是必须的</strong>), 密码修改成功后，会显示passwd…..的样式，说明密码修改成功</p>
<p>6、 接着，在鼠标闪烁的位置中（最后一行中）输入：touch /.autorelabel（注意：touch与 /之间有一个空格），完成后按键盘的回车键（Enter）</p>
<p>7、 继续在光标闪烁的位置中，输入：exec /sbin/init（注意：exec与 /后面有一个空格），完成后按键盘的回车键（Enter）,等待系统自动修改密码(<strong>韩顺平提示：这个过程时间可能有点长，耐心等待</strong>)，完成后，系统会自动重启, <strong>新的密码生效</strong>了</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209150839707.png" alt="image-20220915083946645"></p>
<h5 id="帮助指令"><a href="#帮助指令" class="headerlink" title="帮助指令"></a><strong>帮助指令</strong></h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209150843708.png" alt="image-20220915084336497"></p>
<p><strong>在linux下隐藏文件是以 . 开头的</strong></p>
<p><strong>查看所有文件，方式： ls -a</strong>     </p>
<p><strong>单列查看文件（详细）：ls -l 或ll</strong></p>
<p><strong>也可以组合起来用：如 ls -la  或 ls -al</strong></p>
<p><strong>后面还可以加文件路径进行定位查看   如： ls -la /home</strong></p>
<h5 id="文件目录类"><a href="#文件目录类" class="headerlink" title="文件目录类"></a><strong>文件目录类</strong></h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209150854834.png" alt="image-20220915085450625"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209150903562.png" alt="image-20220915090309369"></p>
<p>/ 是根目录，根目录下有root和home目录，root目录是root用户的家目录，home下还有其他用户的家目录</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209150908958.png" alt="image-20220915090834886"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209150909736.png" alt="image-20220915090905535"></p>
<p><strong>创建多级目录：mkdir -p  多级目录路径</strong></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209150912128.png" alt="image-20220915091221940"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209150914125.png" alt="image-20220915091454979"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209150915221.png" alt="image-20220915091547016"></p>
<p>cp hello.txt  /home/bbb</p>
<p>把cp换成\cp    —&gt;    强制不覆盖</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209150923268.png" alt="image-20220915092320047"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209151433081.png" alt="image-20220915143316824"></p>
<p>也可以移动并重命名</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209151454383.png" alt="image-20220915145448173"></p>
<p>管道命令：把前面的结果交给下一个指令</p>
<p>cat -n /etc/profile | more 【空格下一页，回车键下一行】</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209151458011.png" alt="image-20220915145831832"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209151500719.png" alt="image-20220915150059536"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209151504191.png" alt="image-20220915150446031"></p>
<p>输出环境变量：$PATH   $HOSTNAME  </p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209151510536.png" alt="image-20220915151025400"></p>
<p>ctrl+c退出监控</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209151520442.png" alt="image-20220915152043287"></p>
<p>如果指令后面的文件不存在，会自动创建</p>
<p>cal显示当前日历</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209151527432.png" alt="image-20220915152754228"></p>
<p>ln -s/root /home/myroot</p>
<p>删除跟删除文件操作一样</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209152019269.png" alt="image-20220915201928063"></p>
<p>history</p>
<p>history 10</p>
<p>！5</p>
<h5 id="时间日期类"><a href="#时间日期类" class="headerlink" title="时间日期类"></a><strong>时间日期类</strong></h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209152022264.png" alt="image-20220915202252081"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209152036526.png" alt="image-20220915203626306"></p>
<h5 id="搜素查找类"><a href="#搜素查找类" class="headerlink" title="搜素查找类"></a><strong>搜素查找类</strong></h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209152039195.png" alt="image-20220915203958020"></p>
<p> find /home -name  hello.txt</p>
<p>文件大小单位：kMG</p>
<p>find /opt -user nobody</p>
<p>find / size +200 </p>
<p>ls -lh:h能够显示文件大小</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209152121337.png" alt="image-20220915212130026"></p>
<p>which指令，可以查看某个指令在哪个目录下，比如ls指令在哪目录</p>
<p>which ls</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209152127852.png" alt="image-20220915212730660"></p>
<p>cat /home/hello.txt | grep -n  yes</p>
<p>grep -n  yes   /home/hello.txt </p>
<h5 id="压缩和解压类"><a href="#压缩和解压类" class="headerlink" title="压缩和解压类"></a><strong>压缩和解压类</strong></h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209152135267.png" alt="image-20220915213502075"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209152137822.png" alt="image-20220915213737614"></p>
<p>zip -r myhome.zip /home/</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209152145141.png" alt="image-20220915214549968"></p>
<p>tar -zcvf pc.tar.gz /home/pig.txt /home/cat.txt</p>
<p>tar -zcvf myhome.tar.gz /home/</p>
<p>tar -zxvf pc.tar.gz</p>
<p>tar -zxvf myhome.tar.gz -C /opt/tmp2/</p>
<p>-C指定位置</p>
<h5 id="Linux组管理和权限管理"><a href="#Linux组管理和权限管理" class="headerlink" title="Linux组管理和权限管理"></a><strong>Linux组管理和权限管理</strong></h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209161002926.png" alt=""></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209161007908.png" alt=""></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209161007736.png" alt=""></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209161012044.png" alt=""></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209161015260.png" alt=""></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209161018857.png" alt=""></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209161025851.png" alt=""></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209161036139.png" alt=""></p>
<p>特别说明：第二个命令，用户需要有进入到新目录的权限</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209161043003.png" alt=""></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209161048677.png" alt=""></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209161106528.png" alt=""></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209171655246.png" alt="image-20220917165512138"></p>
<p>赋值，添加，删除</p>
<p>文件为绿色代表为可执行文件，即有可执行的权限</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209171702984.png" alt="image-20220917170220879"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209171704679.png" alt="image-20220917170452572"></p>
<p>修改所在组</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209171708524.png" alt="image-20220917170858303"></p>
<p>递归带上参数：-R</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209180940490.png" alt="image-20220918093958276"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209180955104.png" alt="image-20220918095548916"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181021073.png" alt=""></p>
<p><strong>rwx作用于目录？</strong></p>
<p>r代表可以用ls查看目录下内容</p>
<p>x代表可以进入该目录</p>
<p>w代表可以在目录下创建文件/目录，或者删除文件/目录</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181033347.png" alt=""></p>
<h5 id="定时任务调度"><a href="#定时任务调度" class="headerlink" title="定时任务调度"></a><strong>定时任务调度</strong></h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181111238.png" alt="image-20220918111154098"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181114092.png" alt="image-20220918111414044"></p>
<p>每分钟执行一次 ： ls -l  /etc/ &gt; /tmp/to.txt</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181117014.png" alt="image-20220918111743875"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181123650.png" alt="image-20220918112317561"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181125737.png" alt="image-20220918112512648"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181508898.png" alt="image-20220918150839774"></p>
<p>案例2：</p>
<p>第一种：写两条命令</p>
<p>第二种：写一个脚本程序my.sh</p>
<p>内容如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">date &gt;&gt; /home/mycal</span><br><span class="line">cal &gt;&gt; /home/mycal</span><br></pre></td></tr></table></figure>
<p>要赋予所有者文件执行权限</p>
<p>chmod u+x my.sh</p>
<p>加入到crond调度</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181514933.png" alt="image-20220918151444876"></p>
<p>案例3：</p>
<p>crontab -e</p>
<p>0 2 <em> </em> * mysqldump -u root -p123456 testdb &gt; /home/db.bak</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181530768.png" alt="image-20220918153015636"></p>
<p>ps -ef | grep atd   过滤查看当前atd进程是否启动</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181536743.png" alt="image-20220918153636679"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181537828.png" alt="image-20220918153739723"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181538314.png" alt="image-20220918153827189"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181708945.png" alt="image-20220918170824829"></p>
<p>案例1:</p>
<p>at 5pm + 2 days</p>
<p>/bin/ls /home</p>
<p>案例2:</p>
<p>atq 查看没有执行的任务</p>
<p>案例3:</p>
<p>at 5pm + 1 days </p>
<p>date &gt; /root/date100.log</p>
<p>案例4:</p>
<p>at now + 2 minutes</p>
<p>date &gt; /root/date200.log</p>
<p>案例5:</p>
<p>atrm 编号，删除指定编号的任务</p>
<h5 id="Linux磁盘分区、挂载"><a href="#Linux磁盘分区、挂载" class="headerlink" title="Linux磁盘分区、挂载"></a><strong>Linux磁盘分区、挂载</strong></h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181903283.png" alt="image-20220918190340116"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181915879.png" alt="image-20220918191506784"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181915302.png" alt="image-20220918191524185"></p>
<p>lsblk可以查看硬盘分区挂载到目录的情况</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181918623.png" alt="image-20220918191821564"></p>
<p>带-f 参数</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181920863.png" alt="image-20220918192044805"></p>
<p>uuid：分区40位唯一标识符</p>
<p>MOUNtPOINT:挂载点</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181922789.png" alt="image-20220918192248658"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181924195.png" alt="image-20220918192410116"></p>
<p>添加硬盘</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181925865.png" alt="image-20220918192526733"></p>
<p>分区</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181928757.png" alt="image-20220918192853588"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181932763.png" alt="image-20220918193217682"></p>
<p>如果无法删除输入内容就按住CTRL再删除</p>
<p>格式化磁盘</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181933882.png" alt="image-20220918193340597"></p>
<p>挂载</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181938630.png" alt="image-20220918193809538"></p>
<p>设置自动永久挂载</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209181941649.png" alt="image-20220918194148535"></p>
<h5 id="磁盘使用情况"><a href="#磁盘使用情况" class="headerlink" title="磁盘使用情况"></a>磁盘使用情况</h5><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209182234853.png" alt="image-20220918223413735"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209182239720.png" alt="image-20220918223905624"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209182244838.png" alt="image-20220918224453733"></p>
<p>1、ls -l /opt | grep “^-“ | wc -l</p>
<p>2、ls -l /opt | grep “^d” | wc -l</p>
<p>3、ls -lR /opt | grep “^-“ | wc -l</p>
<p>4、ls -lR /opt | grep “^d” | wc -l</p>
<p>5、tree /home/</p>
<p>注意：如果没有tree，则使用yum install tree 安装</p>
<h4 id="8、网络配置"><a href="#8、网络配置" class="headerlink" title="8、网络配置"></a>8、网络配置</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209200842342.png" alt="image-20220920084200166"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209200842233.png" alt="image-20220920084239116"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209200845554.png" alt="image-20220920084506392"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209200849793.png" alt="image-20220920084901660"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209200849809.png" alt="image-20220920084923674"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209200850475.png" alt="image-20220920085048365"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209200852191.png" alt="image-20220920085242945"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209200907425.png" alt="image-20220920090713338"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209200907526.png" alt="image-20220920090729395"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209200909099.png" alt="image-20220920090923850"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209200917310.png" alt="image-20220920091709049"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209200918890.png" alt="image-20220920091848725"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209200923405.png" alt="image-20220920092337347"></p>
<h4 id="9、进程管理"><a href="#9、进程管理" class="headerlink" title="9、进程管理"></a>9、进程管理</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209200943314.png" alt="image-20220920094313207"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209200944384.png" alt="image-20220920094455273"></p>
<p>top指令</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209200947618.png" alt="image-20220920094753531"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209200949978.png" alt="image-20220920094915869"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209200953989.png" alt="image-20220920095345886"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209200954514.png" alt="image-20220920095400380"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209200956865.png" alt="image-20220920095658736"></p>
<p>查看sshd的父进程信息</p>
<p>ps -ef | grep sshd</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209201004337.png" alt="image-20220920100423177"></p>
<p>案例1：</p>
<p>先查看sshd下非法用户进程对应的进程编号</p>
<p>kill 进程编号</p>
<p>案例2：</p>
<p>查看sshd进程对应的进程编号</p>
<p>kill 进程编号</p>
<p>恢复：/bin/systemctl start sshd.service</p>
<p>案例3：</p>
<p>killall gedit</p>
<p>gedit 是文本编辑器</p>
<p>案例4：</p>
<p>ps -aux | grep bash 查看bash对应进程号</p>
<p>kill -9 进程编号</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209201018772.png" alt="image-20220920101841645"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209201022273.png" alt="image-20220920102231128"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209201026230.png" alt="image-20220920102613172"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209201031233.png" alt="image-20220920103143106"></p>
<p>空格修改星好，关闭自启动，tab键退出</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209201413982.png" alt="image-20220920141323854"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209201415978.png" alt="image-20220920141524787"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209201418728.png" alt="image-20220920141834604"></p>
<p>把network在3运行级别，关闭自启动</p>
<p>chkconfig —level 3 nerwork off</p>
<p>chkconfig —level 3 network on</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209201457089.png" alt="image-20220920145751949"></p>
<p>对3和5两个级别都生效</p>
<p>systemctl staus firewalld</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209201506017.png" alt="image-20220920150658941"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209201515847.png" alt="image-20220920151535709"></p>
<p>netstat 可以查看端口信息</p>
<h4 id="10、动态监控进程"><a href="#10、动态监控进程" class="headerlink" title="10、动态监控进程"></a>10、动态监控进程</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209201523785.png" alt="image-20220920152312662"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209201529686.png" alt="image-20220920152956579"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209201535251.png" alt="image-20220920153536082"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209201543242.png" alt="image-20220920154351169"></p>
<h4 id="11、RPM与YUM"><a href="#11、RPM与YUM" class="headerlink" title="11、RPM与YUM"></a>11、RPM与YUM</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209202158435.png" alt="image-20220920215821171"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209202158688.png" alt="image-20220920215856509"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209202201577.png" alt="image-20220920220133363"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209202204299.png" alt="image-20220920220454171"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209202206727.png" alt="image-20220920220654613"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209202210466.png" alt="image-20220920221014339"></p>
<h4 id="12、搭建JavaEE环境"><a href="#12、搭建JavaEE环境" class="headerlink" title="12、搭建JavaEE环境"></a>12、搭建JavaEE环境</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209202221032.png" alt="image-20220920222132787"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209202235116.png" alt="image-20220920223519999"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209202237675.png" alt="image-20220920223756583"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209202309521.png" alt="image-20220920230907217"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209202322753.png" alt="image-20220920232225676"></p>
<p>word文档</p>
<ol>
<li><p>新建文件夹/opt/mysql，并cd进去</p>
</li>
<li><p>运行wget <a href="http://dev.mysql.com/get/mysql-5.7.26-1.el7.x86_64.rpm-bundle.tar，下载mysql安装包">http://dev.mysql.com/get/mysql-5.7.26-1.el7.x86_64.rpm-bundle.tar，下载mysql安装包</a></p>
</li>
</ol>
<p>PS：centos7.6自带的类mysql数据库是mariadb，会跟mysql冲突，要先删除。</p>
<ol>
<li><p>运行tar -xvf mysql-5.7.26-1.el7.x86_64.rpm-bundle.tar </p>
</li>
<li><p>运行rpm -qa|grep mari，查询mariadb相关安装包</p>
</li>
<li><p>运行rpm -e —nodeps mariadb-libs，卸载</p>
</li>
<li><p>然后开始真正安装mysql，依次运行以下几条</p>
<p>rpm -ivh mysql-community-common-5.7.26-1.el7.x86_64.rpm</p>
<p>rpm -ivh mysql-community-libs-5.7.26-1.el7.x86_64.rpm</p>
<p>rpm -ivh mysql-community-client-5.7.26-1.el7.x86_64.rpm</p>
<p>rpm -ivh mysql-community-server-5.7.26-1.el7.x86_64.rpm</p>
<p>7.运行systemctl start mysqld.service，启动mysql</p>
<p>8.然后开始设置root用户密码</p>
<p>Mysql自动给root用户设置随机密码，运行grep “password” /var/log/mysqld.log可看到当前密码</p>
<p>9.运行mysql -u root -p，用root用户登录，提示输入密码可用上述的，可以成功登陆进入mysql命令行</p>
<p>10.设置root密码，对于个人开发环境，如果要设比较简单的密码（<strong>生产环境服务器要设复杂密码</strong>），可以运行</p>
<p>set global validate_password_policy=0; 提示密码设置策略</p>
<p>（validate_password_policy默认值1，）</p>
<p>11.set password for ‘root’@’localhost’ =password(‘hspedu100’);</p>
<p>12.运行flush privileges;使密码设置生效</p>
</li>
</ol>
<p><strong>大数据篇</strong></p>
<h4 id="13、Shell编程"><a href="#13、Shell编程" class="headerlink" title="13、Shell编程"></a>13、Shell编程</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209210926933.png" alt="image-20220921092625619"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209210931836.png" alt="image-20220921093108598"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209212010350.png" alt="image-20220921201039096"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209212031326.png" alt="image-20220921203115220"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209212033636.png" alt="image-20220921203347516"></p>
<p><strong>shell脚本的多行注释</strong></p>
<p><strong>:&lt;&lt;!</strong><br><strong>内容</strong><br><strong>!</strong></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209212041922.png" alt="image-20220921204137791"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209212045592.png" alt="image-20220921204530408"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209212050709.png" alt="image-20220921205039603"></p>
<p>如果希望希望将expr的结果赋予某个变量，使用``包含起来</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209212059055.png" alt="image-20220921205926946"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209212100795.png" alt="image-20220921210042661"></p>
<p>案例1：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">if [ &quot;ok&quot; = &quot;ok&quot; ]</span><br><span class="line">then </span><br><span class="line">   echo &quot;equal&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<p>案例2：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">if [ 23 -ge 22]</span><br><span class="line">then</span><br><span class="line">    echo &quot;大于&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<p>案例3：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">if [ -f /root/shcode/aaa.txt ]</span><br><span class="line">then </span><br><span class="line">    echo  &quot;存在&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209212113076.png" alt="image-20220921211321894"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">if [ $1 -ge 60 ]</span><br><span class="line">then </span><br><span class="line">    echo &quot;及格了&quot;</span><br><span class="line">elif [ $1 -lt 60 ]</span><br><span class="line">then</span><br><span class="line">    echo &quot;不及格&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209212125761.png" alt="image-20220921212530590"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">case $1 in</span><br><span class="line">&quot;1&quot;)</span><br><span class="line">echo &quot;周一&quot;</span><br><span class="line">;;</span><br><span class="line">&quot;2&quot;)</span><br><span class="line">echo &quot;周二&quot;</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">echo &quot;other...&quot;</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209212131105.png" alt="image-20220921213136956"></p>
<p>案例1：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">for i in &quot;$*&quot;</span><br><span class="line">do</span><br><span class="line">    echo &quot;num is $i&quot;</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">输出一次，因为$*把全部参数当作一个整体</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">for i in &quot;$@&quot;</span><br><span class="line">do</span><br><span class="line">    echo &quot;num is $i&quot;</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">输出多次，因为$@把全部参数分别对待</span><br></pre></td></tr></table></figure>
<p>案例1：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">SUM=0</span><br><span class="line">for (( i=1; i&lt;=100; i++ ))</span><br><span class="line">do</span><br><span class="line">	SUM=$[$SUM+$i]</span><br><span class="line">done</span><br><span class="line">	echo &quot;SUM=$SUM&quot;</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">SUM=0</span><br><span class="line">for (( i=1; i&lt;=$1; i++ ))</span><br><span class="line">do</span><br><span class="line">	SUM=$[$SUM+$i]</span><br><span class="line">done</span><br><span class="line">	echo &quot;SUM=$SUM&quot;</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209212142257.png" alt="image-20220921214207107"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">SUM=0</span><br><span class="line">i=1</span><br><span class="line">while [ $i -le $1 ]</span><br><span class="line">do</span><br><span class="line">	SUM=$[$SUM+$i]</span><br><span class="line">	i=$[$i+1]</span><br><span class="line">done</span><br><span class="line">	echo &quot;SUM=$SUM&quot;</span><br><span class="line">	</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209212149900.png" alt="image-20220921214954762"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209212157104.png" alt="image-20220921215725047"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209212156158.png" alt="image-20220921215657103"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209212200157.png" alt="image-20220921220026983"></p>
<p>basename /home/aaa/test.txt   .txt</p>
<p> 返回  test</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209212202770.png" alt="image-20220921220239617"></p>
<p>dirname /home/aaa/test.txt</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209212203864.png" alt="image-20220921220342744"></p>
<p>案例1：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">定义函数</span></span><br><span class="line">function getSum() &#123;</span><br><span class="line">	SUM=$[$n1+$n2]</span><br><span class="line">	echo &quot;和是：$SUM&quot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">输入两个数</span></span><br><span class="line">read -p &quot;请输入第一个数：&quot; n1</span><br><span class="line">read -p &quot;请输入第二个数；&quot; n2</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">调用函数</span></span><br><span class="line">getSum $n1 $n2</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209212210598.png" alt="image-20220921221007528"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209212210098.png" alt="image-20220921221023007"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209212236105.png" alt="image-20220921223635997"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209212306007.png" alt="image-20220921230632891"></p>
<h4 id="14、Ubuntu"><a href="#14、Ubuntu" class="headerlink" title="14、Ubuntu"></a>14、Ubuntu</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209221533485.png" alt="image-20220922153344103"></p>
<p>安装</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209222120292.png" alt="image-20220922212012672"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209222120455.png" alt="image-20220922212040216"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209222126195.png" alt="image-20220922212605027"></p>
<h4 id="15、APT软件管理和远程登录"><a href="#15、APT软件管理和远程登录" class="headerlink" title="15、APT软件管理和远程登录"></a>15、APT软件管理和远程登录</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209222129863.png" alt="image-20220922212946720"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209222139175.png" alt="image-20220922213943070"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209222140422.png" alt="image-20220922214055256"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209222141362.png" alt="image-20220922214121239"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209222144762.png" alt="image-20220922214416624"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209222144689.png" alt="image-20220922214432573"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209222146053.png" alt="image-20220922214611879"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"># 预发布软件源，不建议启用</span><br><span class="line"># deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209222153324.png" alt="image-20220922215329166"></p>
<p>sudo apt-get update</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209222155255.png" alt="image-20220922215559117"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209222158429.png" alt="image-20220922215824262"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209222203954.png" alt="image-20220922220349861"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209222208825.png" alt="image-20220922220827692"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209222208684.png" alt="image-20220922220844494"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209222214315.png" alt="image-20220922221427186"></p>
<h3 id="16、CentOS8-1的使用"><a href="#16、CentOS8-1的使用" class="headerlink" title="16、CentOS8.1的使用"></a>16、CentOS8.1的使用</h3><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209241629879.png" alt="image-20220924162951743"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209241629419.png" alt="image-20220924162934233"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209241653669.png" alt="image-20220924165327557"></p>
<h2 id=""><a href="#" class="headerlink" title=" "></a> </h2><h2 id="二、高级"><a href="#二、高级" class="headerlink" title="二、高级"></a>二、高级</h2><h3 id="1、日志管理"><a href="#1、日志管理" class="headerlink" title="1、日志管理"></a>1、日志管理</h3><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209241655396.png" alt="image-20220924165520294"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209241656309.png" alt="image-20220924165610174"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209241657567.png" alt="image-20220924165700426"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209241702370.png" alt="image-20220924170235273"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209241704366.png" alt="image-20220924170430208"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209241710282.png" alt="image-20220924171059068"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209241711143.png" alt="image-20220924171127974"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209241713319.png" alt="image-20220924171300138"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209242325950.png" alt="image-20220924232500700"></p>
<p>vim /etc/rsyslog.conf</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209242335235.png" alt="image-20220924233502077"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209242338992.png" alt="image-20220924233802854"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209242343156.png" alt="image-20220924234354872"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209242346005.png" alt="image-20220924234622749"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209242347530.png" alt="image-20220924234719331"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209242349294.png" alt="image-20220924234954145"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209242351991.png" alt="image-20220924235159801"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209242356833.png" alt="image-20220924235653731"></p>
<h3 id="2、定制自己的Linux系统"><a href="#2、定制自己的Linux系统" class="headerlink" title="2、定制自己的Linux系统"></a>2、定制自己的Linux系统</h3><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209251143756.png" alt="image-20220925114303539"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209251143718.png" alt="image-20220925114339456"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209251144890.png" alt="image-20220925114437586"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209251149472.png" alt="image-20220925114920341"></p>
<p>操作步骤：</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209251335976.png" alt="image-20220925133537856"></p>
<h3 id="3、Linux内核源码"><a href="#3、Linux内核源码" class="headerlink" title="3、Linux内核源码"></a>3、Linux内核源码</h3><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209251420641.png" alt="image-20220925142023360"></p>
<p><strong><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209251422453.png" alt="image-20220925142234296"></strong></p>
<p>地址：<a href="https://www.kernel.org/">https://www.kernel.org/</a></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209251509616.png" alt="image-20220925150952509"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209251535825.png" alt="image-20220925153526734"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209251535044.png" alt="image-20220925153550801"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209251536922.png" alt="image-20220925153625746"></p>
<p>地址：<a href="https://www.kernel.org/">https://www.kernel.org/</a></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209251542386.png" alt="image-20220925154242230"></p>
<p>yum info kernel -q //检测内核版本，显示可以升级的内核</p>
<p>查看当前内核：uname -a</p>
<p>yum update kernel //升级内核</p>
<p>yum list kernel -q 查看已安装的内核</p>
<h3 id="4、Linux系统备份与恢复"><a href="#4、Linux系统备份与恢复" class="headerlink" title="4、Linux系统备份与恢复"></a>4、Linux系统备份与恢复</h3><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209251559402.png" alt="image-20220925155951139"></p>
<p>安装dump:yum -y install dump</p>
<p>安装restore:yum -y install restore</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209251603224.png" alt="image-20220925160314985"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209251607631.png" alt="image-20220925160712515"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209251618491.png" alt="image-20220925161827233"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209251623508.png" alt="image-20220925162320335"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209251625441.png" alt="image-20220925162524269"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209251627170.png" alt="image-20220925162744897"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209251634936.png" alt="image-20220925163434679"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209251637631.png" alt="image-20220925163728328"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209251641395.png" alt="image-20220925164125253"></p>
<h3 id="5、Linux可视化管理——-webmin和bt运维工具"><a href="#5、Linux可视化管理——-webmin和bt运维工具" class="headerlink" title="5、Linux可视化管理——-webmin和bt运维工具"></a>5、Linux可视化管理——-webmin和bt运维工具</h3><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209252247105.png" alt="image-20220925224706879"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209252247471.png" alt="image-20220925224756226"></p>
<p>地址：<a href="http://download.webmin.com/download/yum/">http://download.webmin.com/download/yum/</a></p>
<p>命令：wget <a href="http://download.webmin.com/download/yum/webmin-1.700-1noarch.rpm">http://download.webmin.com/download/yum/webmin-1.700-1noarch.rpm</a></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209252304826.png" alt="image-20220925230413573"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209252313259.png" alt="image-20220925231313040"></p>
<p>还有任务调度，mysql等</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209252320967.png" alt="image-20220925232007694"></p>
<p>yum install -y wget安装wget指令</p>
<p>&amp;&amp;先执行前面的在执行后面的</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209252327119.png" alt="image-20220925232714030"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209252329737.png" alt="image-20220925232903556"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209252340133.png" alt="image-20220925234013973"></p>
<h3 id="6、Linux面试题—-（腾讯、美团、百度、滴滴）"><a href="#6、Linux面试题—-（腾讯、美团、百度、滴滴）" class="headerlink" title="6、Linux面试题—-（腾讯、美团、百度、滴滴）"></a>6、Linux面试题—-（腾讯、美团、百度、滴滴）</h3><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209262034094.png" alt="image-20220926203400775"></p>
<p>1、</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209262036202.png" alt=""></p>
<p>cut -d ‘/‘：以/为分隔符进行截取</p>
<p>sort 排序从小到大，加-nr ：排序从大到小</p>
<p>uniq -c 统计次数</p>
<p>2、</p>
<p>netstat -an | grep ESTABLISHED</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209262045747.png" alt="image-20220926204510647"></p>
<p>awk -F “ “ ‘{print $5}’:以空格为分割符，打印第五部分</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209262048521.png" alt="image-20220926204818405"></p>
<p>一定要先排序再统计再排序</p>
<p>因为uniq -c是根据连续多少个1相同的进行统计的</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209262051613.png" alt="image-20220926205103343"></p>
<p>1、</p>
<p>vim /etc/my.cnf</p>
<p>在【mysqld】下写入一句话：skip-grant-tables</p>
<p>重启mysqld服务：service mysqld restart</p>
<p>重新进入mysql，此时无需密码</p>
<p>在mysql数据库中有user表：</p>
<p>use mysql</p>
<p>update user set password=password(‘new_password’) where user=’root’;<br>mysql&gt; flush privileges;<br>mysql &gt;exit;</p>
<p>这样就把密码修改了， 改完了密码之后，需要恢复权限：把之前对/etc/my.cnf的  skip-grant-tables  删掉</p>
<p>然后执行  service mysqld restart；</p>
<p>然后mysql -u root -p</p>
<p>Enter Password :你的新密码；</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209262058185.png" alt="image-20220926205849106"></p>
<p>2、</p>
<p>access.log</p>
<figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line"><span class="number">192.168.130.21</span> aaa.html</span><br><span class="line"><span class="number">192.168.130.20</span> aaa.html</span><br><span class="line"><span class="number">192.168.130.20</span> aaa.html</span><br><span class="line"><span class="number">192.168.130.20</span> aaa.html</span><br><span class="line"><span class="number">192.168.130.23</span> aaa.html</span><br><span class="line"><span class="number">192.168.130.20</span> aaa.html</span><br><span class="line"><span class="number">192.168.130.25</span> aaa.html</span><br><span class="line"><span class="number">192.168.130.20</span> aaa.html</span><br><span class="line"><span class="number">192.168.130.20</span> aaa.html</span><br><span class="line"><span class="number">192.168.130.25</span> aaa.html</span><br><span class="line"><span class="number">192.168.130.20</span> aaa.html</span><br></pre></td></tr></table></figure>
<p>cat access.log | awk -F “ “ ‘{print $1}’ |sort  |uniq -c |sort -nr| head -2</p>
<p>head -2 查看前2行</p>
<p>3、</p>
<p>tcpdump -i ens33 host 192.168.200.1 and port 22 &gt;&gt; /opt/interview/tcpdump.log</p>
<p>4、</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209262110284.png" alt="image-20220926211011154"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209262112909.png" alt="image-20220926211215680"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209262115690.png" alt="image-20220926211543437"></p>
<p>chattr（change attribute）</p>
<p>chattr +i /etc/passwd/ 锁定</p>
<p>也可以隐藏命令，改名</p>
<p>which命令. which命令的作用是，在PATH变量指定的路径中，搜索某个系统命令的位置，并且返回第一个搜索结果。. 也就是说，使用which命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。. 我们经常在linux要查找某个文件，但不知道放在哪里了，可以使用下面的一些命令来搜索：. which 查看可执行文件的位置。. whereis 查看文件的位置。. locate 配合数据库查看文件位置。. find 实际搜寻硬盘查询文件名称。. which命令的作用是，在PATH变量指定的路径中，搜索某个系统命令的位置，并且返回第一个搜索结果。.</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209262125597.png" alt="image-20220926212537500"></p>
<p>chattr -i /etc/passwd:解锁</p>
<p>Tripwire官网：<a href="https://www.tripwire.com/">https://www.tripwire.com/</a></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209262133113.png" alt="image-20220926213313889"></p>
<p>1、能读，不能修改，能删除</p>
<p>2、不能，进不去目录</p>
<p>3、能读，不能修改，不能删除</p>
<p>4、能读，不能修改，能删除</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209262145962.png" alt="image-20220926214544792"></p>
<p>看word笔记</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209262154066.png" alt="image-20220926215440811"></p>
<p>1、</p>
<p>netstat //网络状态监控</p>
<p>top //系统运行状态</p>
<p>lsblk //查看硬盘分区</p>
<p>find //查看</p>
<p>ps -aux 查看运行进程</p>
<p>chkconfig //查看服务启动状态</p>
<p>systemctl //管理系统服务器</p>
<p>2、</p>
<p>top</p>
<p>iotop (yum install iotop)</p>
<p>df -lh</p>
<p>netstat -tunlp</p>
<p>ps -aux </p>
<p>3、</p>
<p>cat t2.txt | awk -F “ “ ‘{sum+=$2} END {print sum}’</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209262204139.png" alt="image-20220926220409895"></p>
<p>1、</p>
<p>if [ -f 文件名 ] then echo “存在” else echo “不存在” fi</p>
<p>2、</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209262209578.png" alt="image-20220926220928503"></p>
<p>3、</p>
<p>grep -r “cat” /home | cut -d “:” -f 1</p>
<p>4、</p>
<p>find /home -name “*.*“ | xargs wc -l</p>
<p>xargs显示行数和总行数</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209262221055.png" alt="image-20220926222059780"></p>
<p>1、Nginx、Haproxy、keepalived、LVS</p>
<p>2、</p>
<p>vim mail.sh</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">ca /var/spool/ &amp;&amp; /bin/tar zcvf /home/mail-`date +%Y-%m-%d_%H%M%S`.tar.gz mail/</span><br></pre></td></tr></table></figure>
<p>crontab -e</p>
<p>30 20 <em> </em> * /root/mail.sh</p>
<p>3、</p>
<p>①对linux的架构的优化，和原则分析（示意图）</p>
<p>②对linux系统本身的优化-规则</p>
<ol>
<li>不用root，使用sudo提升权限</li>
<li>定时的自动更新服务升级，使用npdate npt1.aliyun.com，让crond定时更新</li>
<li>配置yum源，指向国内镜像（清华，163）</li>
<li>配置合理的防火墙策略，打开必要的端口，关闭不必要的端口</li>
<li>打开最大文件数（调整文件描述的数量）vim /etc/profile ulimit -SHn 65535</li>
<li>配置合理的监控策略</li>
<li>配置合理的系统重要文件的备份策略</li>
<li>对安装的软件进优化，比如Nginx，apache</li>
<li>对内核参数进行优化  /etc/sysctl.conf</li>
<li>锁定一些重要的系统文件 chattr /etc/passwd /etc/shadow /etc/inittab</li>
<li>禁用不必要的服务 setup，ntsysv</li>
</ol>
]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
  </entry>
  <entry>
    <title>MyBatis-Plus</title>
    <url>/posts/8180.html</url>
    <content><![CDATA[<p><meta name="referrer" content="no-referrer" /></p>
<h1 id="一、MyBatis-Plus"><a href="#一、MyBatis-Plus" class="headerlink" title="一、MyBatis-Plus"></a>一、MyBatis-Plus</h1><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h2><p><a href="https://github.com/baomidou/mybatis-plus">MyBatis-Plus (opens new window)</a>（简称 MP）是一个 <a href="https://www.mybatis.org/mybatis-3/">MyBatis (opens new window)</a>的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。</p>
<blockquote>
<p>我们的愿景是成为 MyBatis 最好的搭档，就像 <a href="https://baomidou.com/img/contra.jpg">魂斗罗</a> 中的 1P、2P，基友搭配，效率翻倍。</p>
</blockquote>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/relationship-with-mybatis.png" alt="img"></p>
<h2 id="2-特性"><a href="#2-特性" class="headerlink" title="2.特性"></a>2.特性</h2><ul>
<li><strong>无侵入</strong>：只做增强不做改变，引入它不会对现有工程产生影响，如丝般顺滑</li>
<li><strong>损耗小</strong>：启动即会自动注入基本 CURD，性能基本无损耗，直接面向对象操作</li>
<li><strong>强大的 CRUD 操作</strong>：内置通用 Mapper、通用 Service，仅仅通过少量配置即可实现单表大部分 CRUD 操作，更有强大的条件构造器，满足各类使用需求</li>
<li><strong>支持 Lambda 形式调用</strong>：通过 Lambda 表达式，方便的编写各类查询条件，无需再担心字段写错</li>
<li><strong>支持主键自动生成</strong>：支持多达 4 种主键策略（内含分布式唯一 ID 生成器 - Sequence），可自由配置，完美解决主键问题</li>
<li><strong>支持 ActiveRecord 模式</strong>：支持 ActiveRecord 形式调用，实体类只需继承 Model 类即可进行强大的 CRUD 操作</li>
<li><strong>支持自定义全局通用操作</strong>：支持全局通用方法注入（ Write once, use anywhere ）</li>
<li><strong>内置代码生成器</strong>：采用代码或者 Maven 插件可快速生成 Mapper 、 Model 、 Service 、 Controller 层代码，支持模板引擎，更有超多自定义配置等您来使用</li>
<li><strong>内置分页插件</strong>：基于 MyBatis 物理分页，开发者无需关心具体操作，配置好插件之后，写分页等同于普通 List 查询</li>
<li><strong>分页插件支持多种数据库</strong>：支持 MySQL、MariaDB、Oracle、DB2、H2、HSQL、SQLite、Postgre、SQLServer 等多种数据库</li>
<li><strong>内置性能分析插件</strong>：可输出 SQL 语句以及其执行时间，建议开发测试时启用该功能，能快速揪出慢查询</li>
<li><strong>内置全局拦截插件</strong>：提供全表 delete 、 update 操作智能分析阻断，也可自定义拦截规则，预防误操作</li>
</ul>
<h2 id="3-支持数据库"><a href="#3-支持数据库" class="headerlink" title="3.支持数据库"></a>3.支持数据库</h2><blockquote>
<p>任何能使用 <code>MyBatis</code> 进行 CRUD, 并且支持标准 SQL 的数据库，具体支持情况如下，如果不在下列表查看分页部分教程 PR 您的支持。</p>
</blockquote>
<ul>
<li>MySQL，Oracle，DB2，H2，HSQL，SQLite，PostgreSQL，SQLServer，Phoenix，Gauss ，ClickHouse，Sybase，OceanBase，Firebird，Cubrid，Goldilocks，csiidb</li>
<li>达梦数据库，虚谷数据库，人大金仓数据库，南大通用(华库)数据库，南大通用数据库，神通数据库，瀚高数据库</li>
</ul>
<h2 id="4-框架结构"><a href="#4-框架结构" class="headerlink" title="4.框架结构"></a>4.框架结构</h2><p><img src="https://baomidou.com/img/mybatis-plus-framework.jpg" alt="framework" style="zoom:50%;" /></p>
<h2 id="5-官方地址"><a href="#5-官方地址" class="headerlink" title="5.官方地址"></a>5.官方地址</h2><blockquote>
<p><strong>官方网站：</strong><a href="https://baomidou.com/">https://baomidou.com/</a></p>
<p><strong>官方文档：</strong><a href="https://baomidou.com/pages/24112f/">https://baomidou.com/pages/24112f/</a></p>
</blockquote>
<h1 id="二、入门案例"><a href="#二、入门案例" class="headerlink" title="二、入门案例"></a>二、入门案例</h1><h2 id="1-开发环境"><a href="#1-开发环境" class="headerlink" title="1.开发环境"></a>1.开发环境</h2><ul>
<li><strong>IDE：IDEA 2019.3.5</strong></li>
<li><strong>JDK：JDK8+</strong></li>
<li><strong>构建工具：Maven 3.5.4</strong></li>
<li><strong>MySQL：MySQL 8.0.24</strong></li>
<li><strong>Navicat：Navicat Premium 15</strong></li>
<li><strong>Spring Boot：2.6.7</strong></li>
<li><strong>MyBatis-Plus：3.5.1</strong></li>
</ul>
<h2 id="2-建库建表"><a href="#2-建库建表" class="headerlink" title="2.建库建表"></a>2.建库建表</h2><ul>
<li><p><strong>打开Navicat运行以下SQL脚本进行建库建表</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE `mybatis_plus` <span class="comment">/*!40100 DEFAULT CHARACTER SET utf8mb4 */</span>; </span><br><span class="line">use `mybatis_plus`; </span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `<span class="keyword">user</span>` ( </span><br><span class="line">    `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;主键ID&#x27;</span>, </span><br><span class="line">    `name` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>, </span><br><span class="line">    `age` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;年龄&#x27;</span>, </span><br><span class="line">    `email` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>, </span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (`id`) </span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>插入几条测试数据</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">user</span> (id, name, age, email) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;Jone&#x27;</span>, <span class="number">18</span>, <span class="string">&#x27;test1@baomidou.com&#x27;</span>), </span><br><span class="line">(<span class="number">2</span>, <span class="string">&#x27;Jack&#x27;</span>, <span class="number">20</span>, <span class="string">&#x27;test2@baomidou.com&#x27;</span>), </span><br><span class="line">(<span class="number">3</span>, <span class="string">&#x27;Tom&#x27;</span>, <span class="number">28</span>, <span class="string">&#x27;test3@baomidou.com&#x27;</span>), </span><br><span class="line">(<span class="number">4</span>, <span class="string">&#x27;Sandy&#x27;</span>, <span class="number">21</span>, <span class="string">&#x27;test4@baomidou.com&#x27;</span>), </span><br><span class="line">(<span class="number">5</span>, <span class="string">&#x27;Billie&#x27;</span>, <span class="number">24</span>, <span class="string">&#x27;test5@baomidou.com&#x27;</span>);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="3-创建工程"><a href="#3-创建工程" class="headerlink" title="3.创建工程"></a>3.创建工程</h2><ul>
<li><p><strong>使用<code>Spring Initializer</code>快速初始化一个 Spring Boot 工程</strong></p>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220519140839640.png" alt="image-20220519140839640" style="zoom:80%;" /></p>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220519141335981.png" alt="image-20220519141335981" style="zoom:80%;" /></p>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220519141737405.png" alt="image-20220519141737405" style="zoom:80%;" /></p>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220519141849937.png" alt="image-20220519141849937" style="zoom:80%;" /></p>
</li>
<li><p><strong>引入<code>MyBatis-Plus</code>的依赖</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>安装<code>Lombok</code>插件</strong></p>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220519143257305.png" alt="image-20220519143257305" style="zoom:80%;" /></p>
</li>
</ul>
<h2 id="4-配置编码"><a href="#4-配置编码" class="headerlink" title="4.配置编码"></a>4.配置编码</h2><ul>
<li><p><strong>配置<code>application.yml</code>文件</strong></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#配置端口</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment">#配置数据源</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="comment">#配置数据源类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">    <span class="comment">#配置连接数据库的信息</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatis_plus?characterEncoding=utf-8&amp;useSSL=false</span></span><br><span class="line">    <span class="attr">username:</span> &#123;<span class="string">username</span>&#125;</span><br><span class="line">    <span class="attr">password:</span> &#123;<span class="string">password</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#MyBatis-Plus相关配置</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="comment">#配置日志</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>在 Spring Boot 启动类中添加 <code>@MapperScan</code> 注解，扫描 Mapper 文件夹</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;指定Mapper接口所在的包&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPlusDemoApplication</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		SpringApplication.run(MybatisPlusDemoApplication.class, args);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>编写实体类 <code>User.java</code>（此处使用了 Lombok 简化代码）</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>编写 Mapper 包下的 <code>UserMapper</code>接口</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;User&gt; &#123;&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="5-测试查询"><a href="#5-测试查询" class="headerlink" title="5.测试查询"></a>5.测试查询</h2><ul>
<li><p><strong>编写一个测试类<code>MyBatisPlusTest.java</code></strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBatisPlusTest</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试查询所有数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">testSelectList</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//通过条件构造器查询一个list集合，若没有条件，则可以设置null为参数</span></span><br><span class="line">        List&lt;User&gt; users = userMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">        users.forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>控制台打印查询结果</strong></p>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220519150454211.png" alt="image-20220519150454211"></p>
</li>
</ul>
<h1 id="三、增删改查"><a href="#三、增删改查" class="headerlink" title="三、增删改查"></a>三、增删改查</h1><h2 id="1-BaseMapper-lt-T-gt"><a href="#1-BaseMapper-lt-T-gt" class="headerlink" title="1.BaseMapper&lt;T&gt;"></a>1.BaseMapper&lt;T&gt;</h2><blockquote>
<p>说明:</p>
<ul>
<li>通用 CRUD 封装BaseMapper 接口，为 <code>Mybatis-Plus</code> 启动时自动解析实体表关系映射转换为 <code>Mybatis</code> 内部对象注入容器</li>
<li>泛型 <code>T</code> 为任意实体对象</li>
<li>参数 <code>Serializable</code> 为任意类型主键 <code>Mybatis-Plus</code> 不推荐使用复合主键约定每一张表都有自己的唯一 <code>id</code> 主键</li>
<li>对象 <code>Wrapper</code> 为条件构造器</li>
</ul>
</blockquote>
<p>MyBatis-Plus中的基本CRUD在内置的BaseMapper中都已得到了实现，因此我们继承该接口以后可以直接使用。</p>
<p>本次演示的CRUD操作不包含参数带有条件构造器的方法，关于条件构造器将单独在一个章节进行演示。</p>
<hr>
<blockquote>
<p><strong>BaseMapper中提供的CRUD方法：</strong></p>
</blockquote>
<ul>
<li><p><strong>增加：Insert</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 插入一条记录</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">insert</span><span class="params">(T entity)</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>删除：Delete</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 根据 entity 条件，删除记录</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">delete</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; wrapper)</span>;</span><br><span class="line"><span class="comment">// 删除（根据ID 批量删除）</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">deleteBatchIds</span><span class="params">(<span class="meta">@Param(Constants.COLLECTION)</span> Collection&lt;? extends Serializable&gt; idList)</span>;</span><br><span class="line"><span class="comment">// 根据 ID 删除</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">deleteById</span><span class="params">(Serializable id)</span>;</span><br><span class="line"><span class="comment">// 根据 columnMap 条件，删除记录</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">deleteByMap</span><span class="params">(<span class="meta">@Param(Constants.COLUMN_MAP)</span> Map&lt;String, Object&gt; columnMap)</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>修改：Update</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 根据 whereWrapper 条件，更新记录</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">update</span><span class="params">(<span class="meta">@Param(Constants.ENTITY)</span> T updateEntity, <span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; whereWrapper)</span>;</span><br><span class="line"><span class="comment">// 根据 ID 修改</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">updateById</span><span class="params">(<span class="meta">@Param(Constants.ENTITY)</span> T entity)</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>查询：Selete</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 根据 ID 查询</span></span><br><span class="line">T <span class="title function_">selectById</span><span class="params">(Serializable id)</span>;</span><br><span class="line"><span class="comment">// 根据 entity 条件，查询一条记录</span></span><br><span class="line">T <span class="title function_">selectOne</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询（根据ID 批量查询）</span></span><br><span class="line">List&lt;T&gt; <span class="title function_">selectBatchIds</span><span class="params">(<span class="meta">@Param(Constants.COLLECTION)</span> Collection&lt;? extends Serializable&gt; idList)</span>;</span><br><span class="line"><span class="comment">// 根据 entity 条件，查询全部记录</span></span><br><span class="line">List&lt;T&gt; <span class="title function_">selectList</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"><span class="comment">// 查询（根据 columnMap 条件）</span></span><br><span class="line">List&lt;T&gt; <span class="title function_">selectByMap</span><span class="params">(<span class="meta">@Param(Constants.COLUMN_MAP)</span> Map&lt;String, Object&gt; columnMap)</span>;</span><br><span class="line"><span class="comment">// 根据 Wrapper 条件，查询全部记录</span></span><br><span class="line">List&lt;Map&lt;String, Object&gt;&gt; <span class="title function_">selectMaps</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"><span class="comment">// 根据 Wrapper 条件，查询全部记录。注意： 只返回第一个字段的值</span></span><br><span class="line">List&lt;Object&gt; <span class="title function_">selectObjs</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据 entity 条件，查询全部记录（并翻页）</span></span><br><span class="line">IPage&lt;T&gt; <span class="title function_">selectPage</span><span class="params">(IPage&lt;T&gt; page, <span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"><span class="comment">// 根据 Wrapper 条件，查询全部记录（并翻页）</span></span><br><span class="line">IPage&lt;Map&lt;String, Object&gt;&gt; <span class="title function_">selectMapsPage</span><span class="params">(IPage&lt;T&gt; page, <span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"><span class="comment">// 根据 Wrapper 条件，查询总记录数</span></span><br><span class="line">Integer <span class="title function_">selectCount</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="2-调用Mapper层实现CRUD"><a href="#2-调用Mapper层实现CRUD" class="headerlink" title="2.调用Mapper层实现CRUD"></a>2.调用Mapper层实现CRUD</h2><h3 id="2-1-插入"><a href="#2-1-插入" class="headerlink" title="2.1    插入"></a>2.1    插入</h3><hr>
<blockquote>
<p><strong>最终执行的结果，所获取的id为1527206783590903810</strong></p>
<p><strong>这是因为MyBatis-Plus在实现插入数据时，会默认基于雪花算法的策略生成id</strong></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 测试插入一条数据</span></span><br><span class="line"><span class="comment">  * MyBatis-Plus在实现插入数据时，会默认基于雪花算法的策略生成id</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInsert</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user.setName(<span class="string">&quot;Vz&quot;</span>);</span><br><span class="line">    user.setAge(<span class="number">21</span>);</span><br><span class="line">    user.setEmail(<span class="string">&quot;vz@oz6.cn&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.insert(user);</span><br><span class="line">    System.out.println(result &gt; <span class="number">0</span> ? <span class="string">&quot;添加成功！&quot;</span> : <span class="string">&quot;添加失败！&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;受影响的行数为：&quot;</span> + result);</span><br><span class="line">    <span class="comment">//1527206783590903810（当前 id 为雪花算法自动生成的id）</span></span><br><span class="line">    System.out.println(<span class="string">&quot;id自动获取&quot;</span> + user.getId());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-2-删除"><a href="#2-2-删除" class="headerlink" title="2.2    删除"></a>2.2    删除</h3><hr>
<h4 id="a、根据ID删除数据"><a href="#a、根据ID删除数据" class="headerlink" title="a、根据ID删除数据"></a>a、根据ID删除数据</h4><blockquote>
<p><strong>调用方法：int deleteById(Serializable id);</strong></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 测试根据id删除一条数据</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDeleteById</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.deleteById(<span class="number">1527206783590903810L</span>);</span><br><span class="line">    System.out.println(result &gt; <span class="number">0</span> ? <span class="string">&quot;删除成功！&quot;</span> : <span class="string">&quot;删除失败！&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;受影响的行数为：&quot;</span> + result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="b、根据ID批量删除数据"><a href="#b、根据ID批量删除数据" class="headerlink" title="b、根据ID批量删除数据"></a>b、根据ID批量删除数据</h4><blockquote>
<p><strong>调用方法：int deleteBatchIds(@Param(Constants.COLLECTION) Collection&lt;? extends Serializable&gt; idList);</strong></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 测试通过id批量删除数据</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDeleteBatchIds</span><span class="params">()</span>&#123;</span><br><span class="line">    List&lt;Long&gt; ids = Arrays.asList(<span class="number">6L</span>,<span class="number">7L</span>,<span class="number">8L</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.deleteBatchIds(ids);</span><br><span class="line">    System.out.println(result &gt; <span class="number">0</span> ? <span class="string">&quot;删除成功！&quot;</span> : <span class="string">&quot;删除失败！&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;受影响的行数为：&quot;</span> + result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="c、根据Map条件删除数据"><a href="#c、根据Map条件删除数据" class="headerlink" title="c、根据Map条件删除数据"></a>c、根据Map条件删除数据</h4><blockquote>
<p><strong>调用方法：int deleteByMap(@Param(Constants.COLUMN_MAP) Map<String, Object> columnMap);</strong></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 测试根据Map集合中所设置的条件删除数据</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDeleteByMap</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//当前演示为根据name和age删除数据</span></span><br><span class="line">    <span class="comment">//执行SQL为：DELETE FROM user WHERE name = ? AND age = ?</span></span><br><span class="line">    Map&lt;String,Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;Vz&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;age&quot;</span>,<span class="number">21</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.deleteByMap(map);</span><br><span class="line">    System.out.println(result &gt; <span class="number">0</span> ? <span class="string">&quot;删除成功！&quot;</span> : <span class="string">&quot;删除失败！&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;受影响的行数为：&quot;</span> + result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-3-修改"><a href="#2-3-修改" class="headerlink" title="2.3    修改"></a>2.3    修改</h3><blockquote>
<p><strong>调用方法：int updateById(@Param(Constants.ENTITY) T entity);</strong></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 测试根据id修改用户信息</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdateById</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//执行SQL为： UPDATE user SET name=?, age=?, email=? WHERE id=?</span></span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user.setId(<span class="number">6L</span>);</span><br><span class="line">    user.setName(<span class="string">&quot;VzUpdate&quot;</span>);</span><br><span class="line">    user.setAge(<span class="number">18</span>);</span><br><span class="line">    user.setEmail(<span class="string">&quot;Vz@sina.com&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.updateById(user);</span><br><span class="line">    System.out.println(result &gt; <span class="number">0</span> ? <span class="string">&quot;修改成功！&quot;</span> : <span class="string">&quot;修改失败！&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;受影响的行数为：&quot;</span> + result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-4-查询"><a href="#2-4-查询" class="headerlink" title="2.4    查询"></a>2.4    查询</h3><hr>
<h4 id="a、根据ID查询用户信息"><a href="#a、根据ID查询用户信息" class="headerlink" title="a、根据ID查询用户信息"></a>a、根据ID查询用户信息</h4><blockquote>
<p><strong>调用方法：T selectById(Serializable id);</strong></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 测试根据id查询用户数据</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectById</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userMapper.selectById(<span class="number">1L</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="b、根据多个ID查询多个用户信息"><a href="#b、根据多个ID查询多个用户信息" class="headerlink" title="b、根据多个ID查询多个用户信息"></a>b、根据多个ID查询多个用户信息</h4><blockquote>
<p><strong>调用方法：List<T> selectBatchIds(@Param(Constants.COLLECTION) Collection&lt;? extends Serializable&gt; idList);</strong></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 根据多个id查询用户数据</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectBatchIds</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//执行SQL为：SELECT id,name,age,email FROM user WHERE id IN ( ? , ? , ? )</span></span><br><span class="line">    List&lt;Long&gt; ids = Arrays.asList(<span class="number">1L</span>,<span class="number">2L</span>,<span class="number">3L</span>);</span><br><span class="line">    List&lt;User&gt; users = userMapper.selectBatchIds(ids);</span><br><span class="line">    users.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="c、根据Map条件查询用户信息"><a href="#c、根据Map条件查询用户信息" class="headerlink" title="c、根据Map条件查询用户信息"></a>c、根据Map条件查询用户信息</h4><blockquote>
<p><strong>调用方法：List<T> selectByMap(@Param(Constants.COLUMN_MAP) Map<String, Object> columnMap);</strong></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 根据Map所设置的条件查询用户</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectByMap</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//执行SQL为：SELECT id,name,age,email FROM user WHERE age = ?</span></span><br><span class="line">    Map&lt;String,Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;age&quot;</span>,<span class="number">18</span>);</span><br><span class="line">    List&lt;User&gt; users = userMapper.selectByMap(map);</span><br><span class="line">    users.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="d、查询所有用户信息"><a href="#d、查询所有用户信息" class="headerlink" title="d、查询所有用户信息"></a>d、查询所有用户信息</h4><blockquote>
<p><strong>调用方法：List<T> selectList(@Param(Constants.WRAPPER) Wrapper<T> queryWrapper);</strong></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 测试查询所有数据</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testSelectList</span><span class="params">()</span>&#123;</span><br><span class="line">    List&lt;User&gt; users = userMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">    users.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3-通用Service"><a href="#3-通用Service" class="headerlink" title="3.通用Service"></a>3.通用Service</h2><blockquote>
<p>说明:</p>
<ul>
<li>通用 Service CRUD 封装<code>IService</code>接口，进一步封装 CRUD 采用 <code>get 查询单行</code> <code>remove 删除</code> <code>list 查询集合</code> <code>page 分页</code> 前缀命名方式区分 <code>Mapper</code> 层避免混淆，</li>
<li>泛型 <code>T</code> 为任意实体对象</li>
<li>建议如果存在自定义通用 Service 方法的可能，请创建自己的 <code>IBaseService</code> 继承 <code>Mybatis-Plus</code> 提供的基类</li>
<li>对象 <code>Wrapper</code> 为 条件构造器</li>
</ul>
</blockquote>
<p>MyBatis-Plus中有一个接口 <strong><code>IService</code></strong>和其实现类 <strong><code>ServiceImpl</code></strong>，封装了常见的业务层逻辑，详情查看源码IService和ServiceImpl</p>
<p>因此我们在使用的时候仅需在自己定义的<strong><code>Service</code></strong>接口中继承<strong><code>IService</code></strong>接口，在自己的实现类中实现自己的Service并继承<strong><code>ServiceImpl</code></strong>即可</p>
<hr>
<blockquote>
<p><strong>IService中的CRUD方法</strong></p>
</blockquote>
<ul>
<li><p><strong>增加：Save、SaveOrUpdate</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 插入一条记录（选择字段，策略插入）</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">save</span><span class="params">(T entity)</span>;</span><br><span class="line"><span class="comment">// 插入（批量）</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">saveBatch</span><span class="params">(Collection&lt;T&gt; entityList)</span>;</span><br><span class="line"><span class="comment">// 插入（批量）</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">saveBatch</span><span class="params">(Collection&lt;T&gt; entityList, <span class="type">int</span> batchSize)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// TableId 注解存在更新记录，否插入一条记录</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">saveOrUpdate</span><span class="params">(T entity)</span>;</span><br><span class="line"><span class="comment">// 根据updateWrapper尝试更新，否继续执行saveOrUpdate(T)方法</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">saveOrUpdate</span><span class="params">(T entity, Wrapper&lt;T&gt; updateWrapper)</span>;</span><br><span class="line"><span class="comment">// 批量修改插入</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">saveOrUpdateBatch</span><span class="params">(Collection&lt;T&gt; entityList)</span>;</span><br><span class="line"><span class="comment">// 批量修改插入</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">saveOrUpdateBatch</span><span class="params">(Collection&lt;T&gt; entityList, <span class="type">int</span> batchSize)</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>删除：Remove</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 根据 entity 条件，删除记录</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">remove</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"><span class="comment">// 根据 ID 删除</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">removeById</span><span class="params">(Serializable id)</span>;</span><br><span class="line"><span class="comment">// 根据 columnMap 条件，删除记录</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">removeByMap</span><span class="params">(Map&lt;String, Object&gt; columnMap)</span>;</span><br><span class="line"><span class="comment">// 删除（根据ID 批量删除）</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">removeByIds</span><span class="params">(Collection&lt;? extends Serializable&gt; idList)</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>修改：Update</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 根据 UpdateWrapper 条件，更新记录 需要设置sqlset</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">update</span><span class="params">(Wrapper&lt;T&gt; updateWrapper)</span>;</span><br><span class="line"><span class="comment">// 根据 whereWrapper 条件，更新记录</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">update</span><span class="params">(T updateEntity, Wrapper&lt;T&gt; whereWrapper)</span>;</span><br><span class="line"><span class="comment">// 根据 ID 选择修改</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">updateById</span><span class="params">(T entity)</span>;</span><br><span class="line"><span class="comment">// 根据ID 批量更新</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">updateBatchById</span><span class="params">(Collection&lt;T&gt; entityList)</span>;</span><br><span class="line"><span class="comment">// 根据ID 批量更新</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">updateBatchById</span><span class="params">(Collection&lt;T&gt; entityList, <span class="type">int</span> batchSize)</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>查询：Get、List、Count</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 根据 ID 查询</span></span><br><span class="line">T <span class="title function_">getById</span><span class="params">(Serializable id)</span>;</span><br><span class="line"><span class="comment">// 根据 Wrapper，查询一条记录。结果集，如果是多个会抛出异常，随机取一条加上限制条件 wrapper.last(&quot;LIMIT 1&quot;)</span></span><br><span class="line">T <span class="title function_">getOne</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"><span class="comment">// 根据 Wrapper，查询一条记录</span></span><br><span class="line">T <span class="title function_">getOne</span><span class="params">(Wrapper&lt;T&gt; queryWrapper, <span class="type">boolean</span> throwEx)</span>;</span><br><span class="line"><span class="comment">// 根据 Wrapper，查询一条记录</span></span><br><span class="line">Map&lt;String, Object&gt; <span class="title function_">getMap</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"><span class="comment">// 根据 Wrapper，查询一条记录</span></span><br><span class="line">&lt;V&gt; V <span class="title function_">getObj</span><span class="params">(Wrapper&lt;T&gt; queryWrapper, Function&lt;? <span class="built_in">super</span> Object, V&gt; mapper)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询所有</span></span><br><span class="line">List&lt;T&gt; <span class="title function_">list</span><span class="params">()</span>;</span><br><span class="line"><span class="comment">// 查询列表</span></span><br><span class="line">List&lt;T&gt; <span class="title function_">list</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"><span class="comment">// 查询（根据ID 批量查询）</span></span><br><span class="line">Collection&lt;T&gt; <span class="title function_">listByIds</span><span class="params">(Collection&lt;? extends Serializable&gt; idList)</span>;</span><br><span class="line"><span class="comment">// 查询（根据 columnMap 条件）</span></span><br><span class="line">Collection&lt;T&gt; <span class="title function_">listByMap</span><span class="params">(Map&lt;String, Object&gt; columnMap)</span>;</span><br><span class="line"><span class="comment">// 查询所有列表</span></span><br><span class="line">List&lt;Map&lt;String, Object&gt;&gt; <span class="title function_">listMaps</span><span class="params">()</span>;</span><br><span class="line"><span class="comment">// 查询列表</span></span><br><span class="line">List&lt;Map&lt;String, Object&gt;&gt; <span class="title function_">listMaps</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"><span class="comment">// 查询全部记录</span></span><br><span class="line">List&lt;Object&gt; <span class="title function_">listObjs</span><span class="params">()</span>;</span><br><span class="line"><span class="comment">// 查询全部记录</span></span><br><span class="line">&lt;V&gt; List&lt;V&gt; <span class="title function_">listObjs</span><span class="params">(Function&lt;? <span class="built_in">super</span> Object, V&gt; mapper)</span>;</span><br><span class="line"><span class="comment">// 根据 Wrapper 条件，查询全部记录</span></span><br><span class="line">List&lt;Object&gt; <span class="title function_">listObjs</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"><span class="comment">// 根据 Wrapper 条件，查询全部记录</span></span><br><span class="line">&lt;V&gt; List&lt;V&gt; <span class="title function_">listObjs</span><span class="params">(Wrapper&lt;T&gt; queryWrapper, Function&lt;? <span class="built_in">super</span> Object, V&gt; mapper)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询总记录数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">count</span><span class="params">()</span>;</span><br><span class="line"><span class="comment">// 根据 Wrapper 条件，查询总记录数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">count</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>分页：Page</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 根据 ID 查询</span></span><br><span class="line">T <span class="title function_">getById</span><span class="params">(Serializable id)</span>;</span><br><span class="line"><span class="comment">// 根据 Wrapper，查询一条记录。结果集，如果是多个会抛出异常，随机取一条加上限制条件 wrapper.last(&quot;LIMIT 1&quot;)</span></span><br><span class="line">T <span class="title function_">getOne</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"><span class="comment">// 根据 Wrapper，查询一条记录</span></span><br><span class="line">T <span class="title function_">getOne</span><span class="params">(Wrapper&lt;T&gt; queryWrapper, <span class="type">boolean</span> throwEx)</span>;</span><br><span class="line"><span class="comment">// 根据 Wrapper，查询一条记录</span></span><br><span class="line">Map&lt;String, Object&gt; <span class="title function_">getMap</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"><span class="comment">// 根据 Wrapper，查询一条记录</span></span><br><span class="line">&lt;V&gt; V <span class="title function_">getObj</span><span class="params">(Wrapper&lt;T&gt; queryWrapper, Function&lt;? <span class="built_in">super</span> Object, V&gt; mapper)</span>;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="4-调用Service层操作数据"><a href="#4-调用Service层操作数据" class="headerlink" title="4.调用Service层操作数据"></a>4.调用Service层操作数据</h2><blockquote>
<p>我们在自己的Service接口中通过继承MyBatis-Plus提供的IService接口，不仅可以获得其提供的CRUD方法，而且还可以使用自身定义的方法。</p>
</blockquote>
<ul>
<li><p><strong>创建<code>UserService</code>并继承<code>IService</code></strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * UserService继承IService模板提供的基础功能 </span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;User&gt; &#123;&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>创建<code>UserService</code>的实现类并继承<code>ServiceImpl</code></strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * ServiceImpl实现了IService，提供了IService中基础功能的实现 </span></span><br><span class="line"><span class="comment">  * 若ServiceImpl无法满足业务需求，则可以使用自定的UserService定义方法，并在实现类中实现</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;UserMapper,User&gt; <span class="keyword">implements</span> <span class="title class_">UserService</span>&#123;&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>测试查询记录数</strong></p>
<blockquote>
<p><strong>调用方法：int count();</strong></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetCount</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//查询总记录数</span></span><br><span class="line">    <span class="comment">//执行的SQL为：SELECT COUNT( * ) FROM user</span></span><br><span class="line">    <span class="type">long</span> <span class="variable">count</span> <span class="operator">=</span> userService.count();</span><br><span class="line">    System.out.println(<span class="string">&quot;总记录数：&quot;</span> + count);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>测试批量插入数据</strong></p>
<blockquote>
<p><strong>调用方法：boolean saveBatch(Collection<T> entityList);</strong></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">    List&lt;User&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setName(<span class="string">&quot;Vz&quot;</span>+i);</span><br><span class="line">        user.setAge(<span class="number">20</span>+i);</span><br><span class="line">        list.add(user);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> userService.saveBatch(list);</span><br><span class="line">    System.out.println(b ? <span class="string">&quot;添加成功！&quot;</span> : <span class="string">&quot;添加失败！&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="四、常用注解"><a href="#四、常用注解" class="headerlink" title="四、常用注解"></a>四、常用注解</h1><blockquote>
<p>MyBatis-Plus提供的注解可以帮我们解决一些数据库与实体之间相互映射的问题。</p>
</blockquote>
<h2 id="1-TableName"><a href="#1-TableName" class="headerlink" title="1.@TableName"></a>1.@TableName</h2><blockquote>
<p>经过以上的测试，在使用MyBatis-Plus实现基本的CRUD时，我们并没有指定要操作的表，只是在Mapper接口继承BaseMapper时，设置了泛型User，而操作的表为user表，由此得出结论，MyBatis-Plus在确定操作的表时，由BaseMapper的泛型决定，即实体类型决定，且默认操作的表名和实体类型的类名一致。</p>
</blockquote>
<h3 id="1-1-引出问题"><a href="#1-1-引出问题" class="headerlink" title="1.1    引出问题"></a>1.1    引出问题</h3><hr>
<blockquote>
<p><strong>若实体类类型的类名和要操作的表的表名不一致，会出现什么问题？</strong></p>
</blockquote>
<ul>
<li><p>我们将表<code>user</code>更名为<code>t_user</code>，测试查询功能</p>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220520093844842.png" alt="image-20220520093844842"></p>
</li>
<li><p>程序抛出异常，<strong>Table ‘mybatis_plus.user’ doesn’t exist</strong>，因为现在的表名为<code>t_user</code>，而默认操作的表名和实体类型的类名一致，即<code>user</code>表</p>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220520094126411.png" alt="image-20220520094126411"></p>
</li>
</ul>
<h3 id="1-2-解决问题"><a href="#1-2-解决问题" class="headerlink" title="1.2    解决问题"></a>1.2    解决问题</h3><hr>
<h4 id="a、使用注解解决问题"><a href="#a、使用注解解决问题" class="headerlink" title="a、使用注解解决问题"></a>a、使用注解解决问题</h4><blockquote>
<p><strong>在实体类类型上添加<code>@TableName(&quot;t_user&quot;)</code>，标识实体类对应的表，即可成功执行SQL语句</strong></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@TableName(&quot;t_user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="b、使用全局配置解决问题"><a href="#b、使用全局配置解决问题" class="headerlink" title="b、使用全局配置解决问题"></a>b、使用全局配置解决问题</h4><blockquote>
<p><strong>在开发的过程中，我们经常遇到以上的问题，即实体类所对应的表都有固定的前缀，例如 <code>t_</code> 或 <code>tbl_</code> 此时，可以使用MyBatis-Plus提供的全局配置，为实体类所对应的表名设置默认的前缀，那么就不需要在每个实体类上通过@TableName标识实体类对应的表</strong></p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="comment"># 设置实体类所对应的表的统一前缀</span></span><br><span class="line">      <span class="attr">table-prefix:</span> <span class="string">t_</span></span><br></pre></td></tr></table></figure>
<h2 id="2-TableId"><a href="#2-TableId" class="headerlink" title="2.@TableId"></a>2.@TableId</h2><blockquote>
<p><strong>经过以上的测试，MyBatis-Plus在实现CRUD时，会默认将id作为主键列，并在插入数据时，默认基于雪花算法的策略生成id</strong></p>
</blockquote>
<h3 id="2-1-引出问题"><a href="#2-1-引出问题" class="headerlink" title="2.1    引出问题"></a>2.1    引出问题</h3><hr>
<blockquote>
<p><strong>若实体类和表中表示主键的不是id，而是其他字段，例如uid，MyBatis-Plus会自动识别uid为主键列吗？</strong></p>
</blockquote>
<ul>
<li><p>我们实体类中的属性<code>id</code>改为<code>uid</code>，将表中的字段<code>id</code>也改为<code>uid</code>，测试添加功能</p>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220520100939157.png" alt="image-20220520100939157"></p>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220520100715109.png" alt="image-20220520100715109"></p>
</li>
<li><p>程序抛出异常，<strong>Field ‘uid’ doesn’t have a default value</strong>，说明MyBatis-Plus没有将<code>uid</code>作为主键赋值</p>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220520101317761.png" alt="image-20220520101317761"></p>
</li>
</ul>
<h3 id="2-2-解决问题"><a href="#2-2-解决问题" class="headerlink" title="2.2    解决问题"></a>2.2    解决问题</h3><hr>
<blockquote>
<p><strong>在实体类中uid属性上通过<code>@TableId</code>将其标识为主键，即可成功执行SQL语句</strong></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Date</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="meta">@TableId</span></span><br><span class="line">    <span class="keyword">private</span> Long uid;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-3-TableId的value属性"><a href="#2-3-TableId的value属性" class="headerlink" title="2.3    @TableId的value属性"></a>2.3    @TableId的value属性</h3><hr>
<blockquote>
<p>若实体类中主键对应的属性为id，而表中表示主键的字段为uid，此时若只在属性id上添加注解@TableId，则抛出异常<strong>Unknown column ‘id’ in ‘field list’</strong>，即MyBatis-Plus仍然会将id作为表的主键操作，而表中表示主键的是字段uid此时需要通过@TableId注解的value属性，指定表中的主键字段，<code>@TableId(&quot;uid&quot;)</code>或<code>@TableId(value=&quot;uid&quot;)</code></p>
</blockquote>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220520103030977.png" alt="image-20220520103030977"></p>
<h3 id="2-4-TableId的type属性"><a href="#2-4-TableId的type属性" class="headerlink" title="2.4    @TableId的type属性"></a>2.4    @TableId的type属性</h3><hr>
<blockquote>
<p><strong>type属性用来定义主键策略：默认雪花算法</strong></p>
</blockquote>
<p><strong>常用的主键策略：</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">值</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">IdType.ASSIGN_ID（默认）</td>
<td style="text-align:center">基于雪花算法的策略生成数据id，与数据库id是否设置自增无关</td>
</tr>
<tr>
<td style="text-align:center">IdType.AUTO</td>
<td style="text-align:center">使用数据库的自增策略，注意，该类型请确保数据库设置了id自增，</td>
</tr>
</tbody>
</table>
</div>
<p><strong>配置全局主键策略：</strong></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#MyBatis-Plus相关配置</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="comment">#配置日志</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="comment">#配置mp的主键策略为自增</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">auto</span></span><br><span class="line">      <span class="comment"># 设置实体类所对应的表的统一前缀</span></span><br><span class="line">      <span class="attr">table-prefix:</span> <span class="string">t_</span></span><br></pre></td></tr></table></figure>
<h2 id="3-TbaleField"><a href="#3-TbaleField" class="headerlink" title="3.@TbaleField"></a>3.@TbaleField</h2><blockquote>
<p>经过以上的测试，我们可以发现，MyBatis-Plus在执行SQL语句时，要保证实体类中的属性名和表中的字段名一致</p>
<p>如果实体类中的属性名和字段名不一致的情况，会出现什么问题呢？</p>
</blockquote>
<h3 id="3-1-情况一"><a href="#3-1-情况一" class="headerlink" title="3.1    情况一"></a>3.1    情况一</h3><hr>
<p>若实体类中的属性使用的是驼峰命名风格，而表中的字段使用的是下划线命名风格</p>
<p>例如实体类属性<code>userName</code>，表中字段<code>user_name</code></p>
<p>此时MyBatis-Plus会自动将下划线命名风格转化为驼峰命名风格</p>
<p>相当于在MyBatis中配置</p>
<h3 id="3-2-情况二"><a href="#3-2-情况二" class="headerlink" title="3.2    情况二"></a>3.2    情况二</h3><hr>
<blockquote>
<p>若实体类中的属性和表中的字段不满足情况1</p>
<p>例如实体类属性<code>name</code>，表中字段<code>username</code></p>
<p>此时需要在实体类属性上使用<code>@TableField(&quot;username&quot;)</code>设置属性所对应的字段名</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="meta">@TableId(&quot;uid&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="meta">@TableField(&quot;username&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="4-TableLogic"><a href="#4-TableLogic" class="headerlink" title="4.@TableLogic"></a>4.@TableLogic</h2><h3 id="4-1-逻辑删除"><a href="#4-1-逻辑删除" class="headerlink" title="4.1    逻辑删除"></a>4.1    逻辑删除</h3><hr>
<blockquote>
<p>物理删除：真实删除，将对应数据从数据库中删除，之后查询不到此条被删除的数据</p>
<p>逻辑删除：假删除，将对应数据中代表是否被删除字段的状态修改为“被删除状态”，之后在数据库中仍旧能看到此条数据记录</p>
<p>使用场景：可以进行数据恢复</p>
</blockquote>
<h3 id="4-2-实现逻辑删除"><a href="#4-2-实现逻辑删除" class="headerlink" title="4.2    实现逻辑删除"></a>4.2    实现逻辑删除</h3><hr>
<ul>
<li><p><strong>数据库中创建逻辑删除状态列，设置默认值为0</strong></p>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220520134529809.png" alt="image-20220520134529809"></p>
</li>
<li><p><strong>实体类中添加逻辑删除属性</strong></p>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220520134636112.png" alt="image-20220520134636112"></p>
</li>
<li><p><strong>测试删除功能，真正执行的是修改</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDeleteById</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.deleteById(<span class="number">1527472864163348482L</span>);</span><br><span class="line">    System.out.println(result &gt; <span class="number">0</span> ? <span class="string">&quot;删除成功！&quot;</span> : <span class="string">&quot;删除失败！&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;受影响的行数为：&quot;</span> + result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220520135637388.png" alt="image-20220520135637388"></p>
</li>
<li><p><strong>此时执行查询方法，查询的结果为自动添加条件<code>is_deleted=0</code></strong></p>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220520140036445.png" alt="image-20220520140036445"></p>
</li>
</ul>
<h1 id="五、条件构造器"><a href="#五、条件构造器" class="headerlink" title="五、条件构造器"></a>五、条件构造器</h1><h2 id="1-Wrapper介绍"><a href="#1-Wrapper介绍" class="headerlink" title="1.Wrapper介绍"></a>1.Wrapper介绍</h2><p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220521092812125.png" alt="image-20220521092812125"></p>
<ul>
<li><p><code>Wrapper</code> ： 条件构造抽象类，最顶端父类</p>
<ul>
<li><p><code>AbstractWrapper</code>： 用于查询条件封装，生成 sql 的 where 条件</p>
<ul>
<li><p><code>QueryWrapper</code>： 查询条件封装</p>
</li>
<li><p><code>UpdateWrapper</code>： Update 条件封装</p>
</li>
<li><p><code>AbstractLambdaWrapper</code>： 使用Lambda 语法</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p><code>LambdaQueryWrapper</code>：用于Lambda语法使用的查询Wrapper</p>
</li>
<li><p><code>LambdaUpdateWrapper</code>： Lambda 更新封装Wrapper</p>
</li>
</ul>
<h2 id="2-QueryWrapper"><a href="#2-QueryWrapper" class="headerlink" title="2.QueryWrapper"></a>2.QueryWrapper</h2><ul>
<li><p><strong>组装查询条件</strong></p>
<blockquote>
<p><strong>执行SQL：</strong>SELECT uid AS id,username AS name,age,email,is_deleted FROM t_user WHERE is_deleted=0 AND (username LIKE ? AND age BETWEEN ? AND ? AND email IS NOT NULL)</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test01</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//查询用户名包含a，年龄在20到30之间，邮箱信息不为null的用户信息</span></span><br><span class="line">    QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.like(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;a&quot;</span>).between(<span class="string">&quot;age&quot;</span>,<span class="number">20</span>,<span class="number">30</span>).isNotNull(<span class="string">&quot;email&quot;</span>);</span><br><span class="line">    List&lt;User&gt; users = userMapper.selectList(queryWrapper);</span><br><span class="line">    users.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>组装排序条件</strong></p>
<blockquote>
<p><strong>执行SQL：</strong>SELECT uid AS id,username AS name,age,email,is_deleted FROM t_user WHERE is_deleted=0 ORDER BY age DESC,id ASC</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test02</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//查询用户信息，按照年龄的降序排序，若年龄相同，则按照id升序排序</span></span><br><span class="line">    QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.orderByDesc(<span class="string">&quot;age&quot;</span>).orderByAsc(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">    List&lt;User&gt; users = userMapper.selectList(queryWrapper);</span><br><span class="line">    users.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>组装删除条件</strong></p>
<blockquote>
<p><strong>执行SQL：</strong>UPDATE t_user SET is_deleted=1 WHERE is_deleted=0 AND (email IS NULL)</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test03</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//删除邮箱地址为null的用户信息</span></span><br><span class="line">    QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.isNull(<span class="string">&quot;email&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.delete(queryWrapper);</span><br><span class="line">    System.out.println(result &gt; <span class="number">0</span> ? <span class="string">&quot;删除成功！&quot;</span> : <span class="string">&quot;删除失败！&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;受影响的行数为：&quot;</span> + result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>条件的优先级</strong></p>
<blockquote>
<p><strong>执行SQL：</strong>UPDATE t_user SET user_name=?, email=? WHERE is_deleted=0 AND (age &gt; ? AND user_name LIKE ? OR email IS NULL)</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test04</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//将（年龄大于20并且用户名中包含有a）或邮箱为null的用户信息修改</span></span><br><span class="line">    UpdateWrapper&lt;User&gt; updateWrapper = <span class="keyword">new</span> <span class="title class_">UpdateWrapper</span>&lt;&gt;();</span><br><span class="line">    updateWrapper.gt(<span class="string">&quot;age&quot;</span>,<span class="number">20</span>).like(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;a&quot;</span>).or().isNull(<span class="string">&quot;email&quot;</span>);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user.setName(<span class="string">&quot;Oz&quot;</span>);</span><br><span class="line">    user.setEmail(<span class="string">&quot;test@oz6.com&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.update(user, updateWrapper);</span><br><span class="line">    System.out.println(result &gt; <span class="number">0</span> ? <span class="string">&quot;修改成功！&quot;</span> : <span class="string">&quot;修改失败！&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;受影响的行数为：&quot;</span> + result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>执行SQL：</strong>UPDATE t_user SET username=?, email=? WHERE is_deleted=0 AND (username LIKE ? AND (age &gt; ? OR email IS NULL))</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test05</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//将用户名中包含有a并且（年龄大于20或邮箱为null）的用户信息修改</span></span><br><span class="line">    UpdateWrapper&lt;User&gt; updateWrapper = <span class="keyword">new</span> <span class="title class_">UpdateWrapper</span>&lt;&gt;();</span><br><span class="line">    updateWrapper.like(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;a&quot;</span>).and(i-&gt;i.gt(<span class="string">&quot;age&quot;</span>,<span class="number">20</span>).or().isNull(<span class="string">&quot;email&quot;</span>));</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user.setName(<span class="string">&quot;Vz7797&quot;</span>);</span><br><span class="line">    user.setEmail(<span class="string">&quot;test@ss8o.com&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.update(user, updateWrapper);</span><br><span class="line">    System.out.println(result &gt; <span class="number">0</span> ? <span class="string">&quot;修改成功！&quot;</span> : <span class="string">&quot;修改失败！&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;受影响的行数为：&quot;</span> + result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>组装select子句</strong></p>
<blockquote>
<p><strong>执行SQL：</strong>SELECT username,age,email FROM t_user WHERE is_deleted=0</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test06</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//查询用户的用户名、年龄、邮箱信息</span></span><br><span class="line">    QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.select(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;age&quot;</span>,<span class="string">&quot;email&quot;</span>);</span><br><span class="line">    List&lt;Map&lt;String, Object&gt;&gt; maps = userMapper.selectMaps(queryWrapper);</span><br><span class="line">    maps.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>实现子查询</strong></p>
<blockquote>
<p><strong>执行SQL：</strong>SELECT uid AS id,user_name AS name,age,email,is_deleted FROM t_user WHERE is_deleted=0 AND (uid IN (select uid from t_user where uid &lt;= 100))</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test07</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//查询id小于等于100的用户信息</span></span><br><span class="line">    QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.inSql(<span class="string">&quot;uid&quot;</span>, <span class="string">&quot;select uid from t_user where uid &lt;= 100&quot;</span>);</span><br><span class="line">    List&lt;User&gt; list = userMapper.selectList(queryWrapper);</span><br><span class="line">    list.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="3-UpdateWrapper"><a href="#3-UpdateWrapper" class="headerlink" title="3.UpdateWrapper"></a>3.UpdateWrapper</h2><blockquote>
<p>UpdateWrapper不仅拥有QueryWrapper的组装条件功能，还提供了set方法进行修改对应条件的数据库信息</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test08</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//将用户名中包含有a并且（年龄大于20或邮箱为null）的用户信息修改</span></span><br><span class="line">    UpdateWrapper&lt;User&gt; updateWrapper = <span class="keyword">new</span> <span class="title class_">UpdateWrapper</span>&lt;&gt;();</span><br><span class="line">    updateWrapper.like(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;a&quot;</span>).and( i -&gt; i.gt(<span class="string">&quot;age&quot;</span>,<span class="number">20</span>).or().isNull(<span class="string">&quot;email&quot;</span>)).set(<span class="string">&quot;email&quot;</span>,<span class="string">&quot;svip@qq.com&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.update(<span class="literal">null</span>, updateWrapper);</span><br><span class="line">    System.out.println(result &gt; <span class="number">0</span> ? <span class="string">&quot;修改成功！&quot;</span> : <span class="string">&quot;修改失败！&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;受影响的行数为：&quot;</span> + result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="4-condition"><a href="#4-condition" class="headerlink" title="4.condition"></a>4.condition</h2><blockquote>
<p>在真正开发的过程中，组装条件是常见的功能，而这些条件数据来源于用户输入，是可选的，因此我们在组装这些条件时，必须先判断用户是否选择了这些条件，若选择则需要组装该条件，若没有选择则一定不能组装，以免影响SQL执行的结果</p>
</blockquote>
<ul>
<li><p><strong>思路一</strong></p>
<blockquote>
<p><strong>执行SQL：</strong>SELECT uid AS id,user_name AS name,age,email,is_deleted FROM t_user WHERE is_deleted=0 AND (user_name LIKE ? AND age &lt;= ?)</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test09</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;a&quot;</span>;</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">ageBegin</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">ageEnd</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">    QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">if</span>(StringUtils.isNotBlank(username))&#123;</span><br><span class="line">        <span class="comment">//isNotBlank判断某个字符创是否不为空字符串、不为null、不为空白符</span></span><br><span class="line">        queryWrapper.like(<span class="string">&quot;user_name&quot;</span>, username);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ageBegin != <span class="literal">null</span>)&#123;</span><br><span class="line">        queryWrapper.ge(<span class="string">&quot;age&quot;</span>, ageBegin);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ageEnd != <span class="literal">null</span>)&#123;</span><br><span class="line">        queryWrapper.le(<span class="string">&quot;age&quot;</span>, ageEnd);</span><br><span class="line">    &#125;</span><br><span class="line">    List&lt;User&gt; list = userMapper.selectList(queryWrapper);</span><br><span class="line">    list.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>思路二</strong></p>
<blockquote>
<p>上面的实现方案没有问题，但是代码比较复杂，我们可以使用带condition参数的重载方法构建查询条件，简化代码的编写</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test10</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;a&quot;</span>;</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">ageBegin</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">ageEnd</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">    QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.like(StringUtils.isNotBlank(username), <span class="string">&quot;user_name&quot;</span>, username)</span><br><span class="line">        .ge(ageBegin != <span class="literal">null</span>, <span class="string">&quot;age&quot;</span>, ageBegin)</span><br><span class="line">        .le(ageEnd != <span class="literal">null</span>, <span class="string">&quot;age&quot;</span>, ageEnd);</span><br><span class="line">    List&lt;User&gt; list = userMapper.selectList(queryWrapper);</span><br><span class="line">    list.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="5-LambdaQueryWrapper"><a href="#5-LambdaQueryWrapper" class="headerlink" title="5.LambdaQueryWrapper"></a>5.LambdaQueryWrapper</h2><blockquote>
<p>功能等同于QueryWrapper，提供了Lambda表达式的语法可以避免填错列名。</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test11</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;a&quot;</span>;</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">ageBegin</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">ageEnd</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">    LambdaQueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.like(StringUtils.isNotBlank(username), User::getName, username)</span><br><span class="line">        .ge(ageBegin != <span class="literal">null</span>, User::getAge, ageBegin)</span><br><span class="line">        .le(ageEnd != <span class="literal">null</span>, User::getAge, ageEnd);</span><br><span class="line">    List&lt;User&gt; list = userMapper.selectList(queryWrapper);</span><br><span class="line">    list.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="6-LambdaUpdateWrapper"><a href="#6-LambdaUpdateWrapper" class="headerlink" title="6.LambdaUpdateWrapper"></a>6.LambdaUpdateWrapper</h2><blockquote>
<p>功能等同于UpdateWrapper，提供了Lambda表达式的语法可以避免填错列名。</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test12</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//将用户名中包含有a并且（年龄大于20或邮箱为null）的用户信息修改</span></span><br><span class="line">    LambdaUpdateWrapper&lt;User&gt; updateWrapper = <span class="keyword">new</span> <span class="title class_">LambdaUpdateWrapper</span>&lt;&gt;();</span><br><span class="line">    updateWrapper.like(User::getName, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">        .and(i -&gt; i.gt(User::getAge, <span class="number">20</span>).or().isNull(User::getEmail));</span><br><span class="line">    updateWrapper.set(User::getName, <span class="string">&quot;小黑&quot;</span>).set(User::getEmail,<span class="string">&quot;abc@atguigu.com&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.update(<span class="literal">null</span>, updateWrapper);</span><br><span class="line">    System.out.println(<span class="string">&quot;result：&quot;</span>+result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="六、常用插件"><a href="#六、常用插件" class="headerlink" title="六、常用插件"></a>六、常用插件</h1><h2 id="1-分页插件"><a href="#1-分页插件" class="headerlink" title="1.分页插件"></a>1.分页插件</h2><blockquote>
<p>MyBatis Plus自带分页插件，只要简单的配置即可实现分页功能</p>
</blockquote>
<ul>
<li><p><strong>添加配置类<code>MyBatisPlusConfig</code></strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.atguigu.mybatisplus.mapper&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBatisPlusConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MybatisPlusInterceptor <span class="title function_">mybatisPlusInterceptor</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">MybatisPlusInterceptor</span> <span class="variable">interceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MybatisPlusInterceptor</span>();</span><br><span class="line">        <span class="comment">//添加分页插件</span></span><br><span class="line">        interceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="title class_">PaginationInnerInterceptor</span>(DbType.MYSQL));</span><br><span class="line">        <span class="keyword">return</span> interceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>编写测试方法</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPage</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//new Page()中的两个参数分别是当前页码，每页显示数量</span></span><br><span class="line">    Page&lt;User&gt; page = userMapper.selectPage(<span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(<span class="number">1</span>, <span class="number">2</span>), <span class="literal">null</span>);</span><br><span class="line">    List&lt;User&gt; users = page.getRecords();</span><br><span class="line">    users.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="2-自定义分页"><a href="#2-自定义分页" class="headerlink" title="2.自定义分页"></a>2.自定义分页</h2><blockquote>
<p>上面调用的是MyBatis-Plus提供的带有分页的方法，那么我们自己定义的方法如何实现分页呢？</p>
</blockquote>
<ul>
<li><p><strong>在<code>UserMapper</code>接口中定义一个方法</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 根据年龄查询用户列表，分页显示 </span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> page 分页对象,xml中可以从里面进行取值,传递参数 Page 即自动分页,必须放在第一位 </span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> age 年龄 </span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">Page&lt;User&gt; <span class="title function_">selectPageVo</span><span class="params">(<span class="meta">@Param(&quot;page&quot;)</span> Page&lt;User&gt; page,<span class="meta">@Param(&quot;age&quot;)</span> Integer age)</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>在<code>UserMapper.xml</code>中编写SQL实现该方法</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectPageVo&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">    select id,username as name,age,email from t_user where age &gt; #&#123;age&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>编写测试方法</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPageVo</span><span class="params">()</span>&#123;</span><br><span class="line">    Page&lt;User&gt; page = userMapper.selectPageVo(<span class="keyword">new</span> <span class="title class_">Page</span>&lt;User&gt;(<span class="number">1</span>,<span class="number">2</span>), <span class="number">20</span>);</span><br><span class="line">    List&lt;User&gt; users = page.getRecords();</span><br><span class="line">    users.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="3-乐观锁"><a href="#3-乐观锁" class="headerlink" title="3.乐观锁"></a>3.乐观锁</h2><blockquote>
<p><strong>作用：当要更新一条记录的时候，希望这条记录没有被别人更新</strong></p>
</blockquote>
<p>乐观锁的实现方式：</p>
<ul>
<li>取出记录时，获取当前 version</li>
<li>更新时，带上这个 version</li>
<li>执行更新时， set version = newVersion where version = oldVersion</li>
<li>如果 version 不对，就更新失败</li>
</ul>
<h3 id="3-1-场景"><a href="#3-1-场景" class="headerlink" title="3.1    场景"></a>3.1    场景</h3><hr>
<ul>
<li>一件商品，成本价是80元，售价是100元。老板先是通知小李，说你去把商品价格增加50元。小李正在玩游戏，耽搁了一个小时。正好一个小时后，老板觉得商品价格增加到150元，价格太高，可能会影响销量。又通知小王，你把商品价格降低30元。</li>
<li>此时，小李和小王同时操作商品后台系统。小李操作的时候，系统先取出商品价格100元；小王也在操作，取出的商品价格也是100元。小李将价格加了50元，并将100+50=150元存入了数据库；小王将商品减了30元，并将100-30=70元存入了数据库。是的，如果没有锁，小李的操作就完全被小王的覆盖了。</li>
<li>现在商品价格是70元，比成本价低10元。几分钟后，这个商品很快出售了1千多件商品，老板亏1万多。</li>
</ul>
<h3 id="3-2-乐观锁与悲观锁"><a href="#3-2-乐观锁与悲观锁" class="headerlink" title="3.2    乐观锁与悲观锁"></a>3.2    乐观锁与悲观锁</h3><hr>
<ul>
<li>上面的故事，如果是乐观锁，小王保存价格前，会检查下价格是否被人修改过了。如果被修改过了，则重新取出的被修改后的价格，150元，这样他会将120元存入数据库。</li>
<li>如果是悲观锁，小李取出数据后，小王只能等小李操作完之后，才能对价格进行操作，也会保证最终的价格是120元。</li>
</ul>
<h3 id="3-3-模拟修改冲突"><a href="#3-3-模拟修改冲突" class="headerlink" title="3.3    模拟修改冲突"></a>3.3    模拟修改冲突</h3><hr>
<ul>
<li><p><strong>数据库中增加商品表</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t_product ( </span><br><span class="line">    id <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;主键ID&#x27;</span>, </span><br><span class="line">    NAME <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品名称&#x27;</span>, </span><br><span class="line">    price <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;价格&#x27;</span>, </span><br><span class="line">    VERSION <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;乐观锁版本号&#x27;</span>, </span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (id) </span><br><span class="line">);</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>添加一条数据</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t_product (id, NAME, price) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;外星人笔记本&#x27;</span>, <span class="number">100</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>添加一个实体类<code>Product</code></strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Product</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer price;</span><br><span class="line">    <span class="keyword">private</span> Integer version;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>添加一个Mapper接口<code>ProductMapper</code></strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProductMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;Product&gt; &#123;&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>测试方法</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testProduct01</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//1.小李获取商品价格</span></span><br><span class="line">    <span class="type">Product</span> <span class="variable">productLi</span> <span class="operator">=</span> productMapper.selectById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;小李获取的商品价格为：&quot;</span> + productLi.getPrice());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.小王获取商品价格</span></span><br><span class="line">    <span class="type">Product</span> <span class="variable">productWang</span> <span class="operator">=</span> productMapper.selectById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;小李获取的商品价格为：&quot;</span> + productWang.getPrice());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.小李修改商品价格+50</span></span><br><span class="line">    productLi.setPrice(productLi.getPrice()+<span class="number">50</span>);</span><br><span class="line">    productMapper.updateById(productLi);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4.小王修改商品价格-30</span></span><br><span class="line">    productWang.setPrice(productWang.getPrice()-<span class="number">30</span>);</span><br><span class="line">    productMapper.updateById(productWang);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5.老板查询商品价格</span></span><br><span class="line">    <span class="type">Product</span> <span class="variable">productBoss</span> <span class="operator">=</span> productMapper.selectById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;老板获取的商品价格为：&quot;</span> + productBoss.getPrice());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>执行结果</strong></p>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220521225803162.png" alt="image-20220521225803162"></p>
</li>
</ul>
<h3 id="3-4-乐观锁解决问题"><a href="#3-4-乐观锁解决问题" class="headerlink" title="3.4    乐观锁解决问题"></a>3.4    乐观锁解决问题</h3><hr>
<ul>
<li><p><strong>实体类<code>version</code>字段添加注解<code>@Version</code></strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Product</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer price;</span><br><span class="line">    <span class="meta">@Version</span></span><br><span class="line">    <span class="keyword">private</span> Integer version;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>添加乐观锁插件配置</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> MybatisPlusInterceptor <span class="title function_">mybatisPlusInterceptor</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">MybatisPlusInterceptor</span> <span class="variable">interceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MybatisPlusInterceptor</span>();</span><br><span class="line">    <span class="comment">//添加分页插件</span></span><br><span class="line">    interceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="title class_">PaginationInnerInterceptor</span>(DbType.MYSQL));</span><br><span class="line">    <span class="comment">//添加乐观锁插件</span></span><br><span class="line">    interceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="title class_">OptimisticLockerInnerInterceptor</span>());</span><br><span class="line">    <span class="keyword">return</span> interceptor;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>再次执行测试方法</strong></p>
<blockquote>
<p>小李查询商品信息：</p>
<p>​    SELECT id,name,price,version FROM t_product WHERE id=?</p>
<p>小王查询商品信息：</p>
<p>​    SELECT id,name,price,version FROM t_product WHERE id=?</p>
<p>小李修改商品价格，自动将version+1</p>
<p>​    UPDATE t_product SET name=?, price=?, version=? WHERE id=? AND version=?</p>
<p>​    Parameters: 外星人笔记本(String), 150(Integer), 1(Integer), 1(Long), 0(Integer)</p>
<p>小王修改商品价格，此时version已更新，条件不成立，修改失败</p>
<p>​    UPDATE t_product SET name=?, price=?, version=? WHERE id=? AND version=?</p>
<p>​    Parameters: 外星人笔记本(String), 70(Integer), 1(Integer), 1(Long), 0(Integer)</p>
<p>最终，小王修改失败，查询价格：150</p>
<p>​    SELECT id,name,price,version FROM t_product WHERE id=?</p>
</blockquote>
</li>
<li><p><strong>优化执行流程</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testProduct01</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//1.小李获取商品价格</span></span><br><span class="line">    <span class="type">Product</span> <span class="variable">productLi</span> <span class="operator">=</span> productMapper.selectById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;小李获取的商品价格为：&quot;</span> + productLi.getPrice());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.小王获取商品价格</span></span><br><span class="line">    <span class="type">Product</span> <span class="variable">productWang</span> <span class="operator">=</span> productMapper.selectById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;小李获取的商品价格为：&quot;</span> + productWang.getPrice());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.小李修改商品价格+50</span></span><br><span class="line">    productLi.setPrice(productLi.getPrice()+<span class="number">50</span>);</span><br><span class="line">    productMapper.updateById(productLi);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4.小王修改商品价格-30</span></span><br><span class="line">    productWang.setPrice(productWang.getPrice()-<span class="number">30</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> productMapper.updateById(productWang);</span><br><span class="line">    <span class="keyword">if</span>(result == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="comment">//操作失败，重试</span></span><br><span class="line">        <span class="type">Product</span> <span class="variable">productNew</span> <span class="operator">=</span> productMapper.selectById(<span class="number">1</span>);</span><br><span class="line">        productNew.setPrice(productNew.getPrice()-<span class="number">30</span>);</span><br><span class="line">        productMapper.updateById(productNew);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5.老板查询商品价格</span></span><br><span class="line">    <span class="type">Product</span> <span class="variable">productBoss</span> <span class="operator">=</span> productMapper.selectById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;老板获取的商品价格为：&quot;</span> + productBoss.getPrice());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220521230448577.png" alt="image-20220521230448577"></p>
</li>
</ul>
<h1 id="七、通用枚举"><a href="#七、通用枚举" class="headerlink" title="七、通用枚举"></a>七、通用枚举</h1><blockquote>
<p>表中的有些字段值是固定的，例如性别（男或女），此时我们可以使用MyBatis-Plus的通用枚举来实现</p>
</blockquote>
<ul>
<li><p><strong>数据库表添加字段<code>sex</code></strong></p>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220521231317777.png" alt="image-20220521231317777"></p>
</li>
<li><p><strong>创建通用枚举类型</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">SexEnum</span> &#123;</span><br><span class="line">    MALE(<span class="number">1</span>, <span class="string">&quot;男&quot;</span>),</span><br><span class="line">    FEMALE(<span class="number">2</span>, <span class="string">&quot;女&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@EnumValue</span> <span class="comment">//将注解所标识的属性的值存储到数据库中</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> sex;</span><br><span class="line">    <span class="keyword">private</span> String sexName;</span><br><span class="line"></span><br><span class="line">    SexEnum(Integer sex, String sexName) &#123;</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">        <span class="built_in">this</span>.sexName = sexName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>User实体类中添加属性sex</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="meta">@TableField(&quot;username&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableLogic</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> isDeleted;  <span class="comment">//逻辑删除</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> SexEnum sex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>配置扫描通用枚举</strong></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#MyBatis-Plus相关配置</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="comment">#指定mapper文件所在的地址</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:mapper/*.xml</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="comment">#配置日志</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">banner:</span> <span class="string">off</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="comment">#配置mp的主键策略为自增</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">auto</span></span><br><span class="line">      <span class="comment"># 设置实体类所对应的表的统一前缀</span></span><br><span class="line">      <span class="attr">table-prefix:</span> <span class="string">t_</span></span><br><span class="line">  <span class="comment">#配置类型别名所对应的包</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.atguigu.mybatisplus.pojo</span></span><br><span class="line">  <span class="comment"># 扫描通用枚举的包</span></span><br><span class="line">  <span class="attr">type-enums-package:</span> <span class="string">com.atguigu.mybatisplus.enums</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>执行测试方法</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user.setName(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">    user.setAge(<span class="number">33</span>);</span><br><span class="line">    user.setSex(SexEnum.MALE);</span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.insert(user);</span><br><span class="line">    System.out.println(<span class="string">&quot;result:&quot;</span>+result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="代码生成器"><a href="#代码生成器" class="headerlink" title="代码生成器"></a>代码生成器</h2><h3 id="1、引入依赖"><a href="#1、引入依赖" class="headerlink" title="1、引入依赖"></a>1、引入依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.freemarker<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.31<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2、快速生成"><a href="#2、快速生成" class="headerlink" title="2、快速生成"></a>2、快速生成</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FastAutoGeneratorTest</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		FastAutoGenerator.create(<span class="string">&quot;jdbc:mysql://127.0.0.1:3306/mybatis_plus?characterEncoding=utf-			8&amp;userSSL=false&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;123456&quot;</span>).globalConfig(builder -&gt; &#123;</span><br><span class="line">		builder.author(<span class="string">&quot;atguigu&quot;</span>) <span class="comment">// 设置作者</span></span><br><span class="line">		<span class="comment">//.enableSwagger() // 开启 swagger 模式</span></span><br><span class="line">		.fileOverride() <span class="comment">// 覆盖已生成文件</span></span><br><span class="line">		.outputDir(<span class="string">&quot;D://mybatis_plus&quot;</span>); <span class="comment">// 指定输出目录</span></span><br><span class="line">&#125;).packageConfig(builder -&gt; &#123;</span><br><span class="line">builder.parent(<span class="string">&quot;com.atguigu&quot;</span>) <span class="comment">// 设置父包名</span></span><br><span class="line">.moduleName(<span class="string">&quot;mybatisplus&quot;</span>) <span class="comment">// 设置父包模块名</span></span><br><span class="line">.pathInfo(Collections.singletonMap(OutputFile.mapperXml, <span class="string">&quot;D://mybatis_plus&quot;</span>));</span><br><span class="line"><span class="comment">// 设置mapperXml生成路径</span></span><br><span class="line">&#125;)</span><br><span class="line">.strategyConfig(builder -&gt; &#123;</span><br><span class="line">builder.addInclude(<span class="string">&quot;t_user&quot;</span>) <span class="comment">// 设置需要生成的表名</span></span><br><span class="line">.addTablePrefix(<span class="string">&quot;t_&quot;</span>, <span class="string">&quot;c_&quot;</span>); <span class="comment">// 设置过滤表前缀</span></span><br><span class="line">&#125;)</span><br><span class="line">.templateEngine(<span class="keyword">new</span> <span class="title class_">FreemarkerTemplateEngine</span>()) <span class="comment">// 使用Freemarker</span></span><br><span class="line">引擎模板，默认的是Velocity引擎模板</span><br><span class="line">.execute();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="八、多数据源"><a href="#八、多数据源" class="headerlink" title="八、多数据源"></a>八、多数据源</h1><blockquote>
<p>适用于多种场景：纯粹多库、 读写分离、 一主多从、 混合模式等</p>
</blockquote>
<p>场景说明：</p>
<p>我们创建两个库，分别为：<code>mybatis_plus</code>（以前的库不动）与<code>mybatis_plus_1</code>（新建），将mybatis_plus库的<code>product</code>表移动到mybatis_plus_1库，这样每个库一张表，通过一个测试用例分别获取用户数据与商品数据，如果获取到说明多库模拟成功</p>
<h2 id="1-创建数据库及表"><a href="#1-创建数据库及表" class="headerlink" title="1.创建数据库及表"></a>1.创建数据库及表</h2><ul>
<li><p><strong>创建数据库<code>mybatis_plus_1</code>和表`product</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE `mybatis_plus_1` <span class="comment">/*!40100 DEFAULT CHARACTER SET utf8mb4 */</span>;</span><br><span class="line">use `mybatis_plus_1`; </span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> product ( </span><br><span class="line">    id <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;主键ID&#x27;</span>, </span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品名称&#x27;</span>, </span><br><span class="line">    price <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;价格&#x27;</span>, </span><br><span class="line">    version <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;乐观锁版本号&#x27;</span>, </span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (id) </span><br><span class="line">);</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>添加测试数据</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> product (id, NAME, price) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;外星人笔记本&#x27;</span>, <span class="number">100</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>删除<code>mybatis_plus</code>库中的<code>product</code>表</strong> </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">use mybatis_plus; </span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> product;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="2-新建工程引入依赖"><a href="#2-新建工程引入依赖" class="headerlink" title="2.新建工程引入依赖"></a>2.新建工程引入依赖</h2><blockquote>
<p><strong>自行新建一个Spring Boot工程并选择MySQL驱动及Lombok依赖</strong></p>
</blockquote>
<p><strong>引入MyBaits-Plus的依赖及多数据源的依赖</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dynamic-datasource-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="3-编写配置文件"><a href="#3-编写配置文件" class="headerlink" title="3.编写配置文件"></a>3.编写配置文件</h2><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment"># 配置数据源信息</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">dynamic:</span></span><br><span class="line">      <span class="comment"># 设置默认的数据源或者数据源组,默认值即为master</span></span><br><span class="line">      <span class="attr">primary:</span> <span class="string">master</span></span><br><span class="line">      <span class="comment"># 严格匹配数据源,默认false.true未匹配到指定数据源时抛异常,false使用默认数据源</span></span><br><span class="line">      <span class="attr">strict:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">datasource:</span></span><br><span class="line">        <span class="attr">master:</span></span><br><span class="line">          <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatis_plus?characterEncoding=utf-8&amp;useSSL=false</span></span><br><span class="line">          <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">          <span class="attr">password:</span> <span class="number">132537</span></span><br><span class="line">        <span class="attr">slave_1:</span></span><br><span class="line">          <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatis_plus_1?characterEncoding=utf-8&amp;useSSL=false</span></span><br><span class="line">          <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">          <span class="attr">password:</span> <span class="number">132537</span></span><br></pre></td></tr></table></figure>
<h2 id="4-创建实体类"><a href="#4-创建实体类" class="headerlink" title="4.创建实体类"></a>4.创建实体类</h2><ul>
<li><p>新建一个<code>User</code>实体类（如果数据库表名有t_前缀记得配置）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>新建一个实体类<code>Product</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Product</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer price;</span><br><span class="line">    <span class="keyword">private</span> Integer version;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="5-创建Mapper及Service"><a href="#5-创建Mapper及Service" class="headerlink" title="5.创建Mapper及Service"></a>5.创建Mapper及Service</h2><ul>
<li><p>新建接口<code>UserMapper</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;User&gt; &#123;&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>新建接口<code>ProductMapper</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProductMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;Product&gt; &#123;&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>新建Service接口<code>UserService</code>指定操作的数据源</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@DS(&quot;master&quot;)</span> <span class="comment">//指定操作的数据源，master为user表</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;User&gt; &#123;&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>新建Service接口<code>ProductService</code>指定操作的数据源</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@DS(&quot;slave_1&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProductService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;Product&gt; &#123;&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>自行建立Service的实现类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">...</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="6-编写测试方法"><a href="#6-编写测试方法" class="headerlink" title="6.编写测试方法"></a>6.编写测试方法</h2><blockquote>
<p><strong>记得在启动类中添加注解<code>@MapperScan()</code></strong></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">TestDatasourceApplicationTests</span> &#123;</span><br><span class="line">	<span class="meta">@Resource</span></span><br><span class="line">	UserService userService;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Resource</span></span><br><span class="line">	ProductService productService;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="keyword">void</span> <span class="title function_">contextLoads</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.getById(<span class="number">1L</span>);</span><br><span class="line">		<span class="type">Product</span> <span class="variable">product</span> <span class="operator">=</span> productService.getById(<span class="number">1L</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;User = &quot;</span> + user);</span><br><span class="line">		System.out.println(<span class="string">&quot;Product = &quot;</span> + product);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220522113049945.png" alt="image-20220522113049945"></p>
<h1 id="九、MyBatisX插件"><a href="#九、MyBatisX插件" class="headerlink" title="九、MyBatisX插件"></a>九、MyBatisX插件</h1><blockquote>
<p>MyBatis-Plus为我们提供了强大的mapper和service模板，能够大大的提高开发效率。</p>
<p>但是在真正开发过程中，MyBatis-Plus并不能为我们解决所有问题，例如一些复杂的SQL，多表联查，我们就需要自己去编写代码和SQL语句，我们该如何快速的解决这个问题呢，这个时候可以使用MyBatisX插件。</p>
<p>MyBatisX一款基于 IDEA 的快速开发插件，为效率而生。</p>
</blockquote>
<h2 id="1-安装MyBatisX插件"><a href="#1-安装MyBatisX插件" class="headerlink" title="1.安装MyBatisX插件"></a>1.安装MyBatisX插件</h2><blockquote>
<p><strong>打开IDEA，File-&gt; Setteings-&gt;Plugins-&gt;MyBatisX，搜索栏搜索MyBatisX然后安装。</strong></p>
</blockquote>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220522115718361.png" alt="image-20220522115718361"></p>
<h2 id="2-快速生成代码"><a href="#2-快速生成代码" class="headerlink" title="2.快速生成代码"></a>2.快速生成代码</h2><ul>
<li><p>新建一个Spring Boot项目引入依赖（创建工程时记得勾选lombok及mysql驱动）</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dynamic-datasource-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>配置数据源信息</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatis_plus?characterEncoding=utf-8&amp;useSSL=false</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">132537</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在IDEA中与数据库建立链接</p>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220522120758740.png" alt="image-20220522120758740"></p>
</li>
<li><p>填写数据库信息并保存</p>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220522121434468.png" alt="image-20220522121434468"></p>
</li>
<li><p>找到我们需要生成的表点击右键</p>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220522121613909.png" alt="image-20220522121613909"></p>
</li>
<li><p>填写完信息以后下一步</p>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220522122127649.png" alt="image-20220522122127649"></p>
</li>
<li><p>继续填写信息</p>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220522122525598.png" alt="image-20220522122525598"></p>
</li>
<li><p><strong>大功告成（真特么好用yyds）</strong></p>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220522122612334.png" alt="image-20220522122612334"></p>
</li>
</ul>
<h2 id="3-快速生成CRUD"><a href="#3-快速生成CRUD" class="headerlink" title="3.快速生成CRUD"></a>3.快速生成CRUD</h2><blockquote>
<p>MyBaitsX可以根据我们在Mapper接口中输入的方法名快速帮我们生成对应的sql语句</p>
</blockquote>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220522123143852.png" alt="image-20220522123143852"></p>
<p><img src="https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MyBatis-Plus/image-20220522123202310.png" alt="image-20220522123202310"></p>
<h1 id="十、致谢"><a href="#十、致谢" class="headerlink" title="十、致谢"></a>十、致谢</h1><p>感谢尚硅谷杨博超老师：<a href="https://www.bilibili.com/video/BV12R4y157Be?p=1">https://www.bilibili.com/video/BV12R4y157Be?p=1</a></p>
<p>感谢MyBatis-Plus作者苞米豆：<a href="https://baomidou.com/">https://baomidou.com/</a></p>
<p>感谢自己又坚持学习了一门课程：<a href="https://www.oz6.cn/">https://www.oz6.cn/</a></p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
  </entry>
  <entry>
    <title>SpringSecurity</title>
    <url>/posts/ceb1.html</url>
    <content><![CDATA[<p><meta name="referrer" content="no-referrer" /></p>
<h1 id="Spring-Security"><a href="#Spring-Security" class="headerlink" title="Spring Security"></a>Spring Security</h1><h2 id="一、Spring-Security框架简介"><a href="#一、Spring-Security框架简介" class="headerlink" title="一、Spring Security框架简介"></a>一、Spring Security框架简介</h2><h3 id="1、概要"><a href="#1、概要" class="headerlink" title="1、概要"></a>1、概要</h3><p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658242.png" alt="image-20220906093436750"></p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658243.png" alt="image-20220906093511578"></p>
<h3 id="2、历史"><a href="#2、历史" class="headerlink" title="2、历史"></a>2、历史</h3><p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658244.png" alt="image-20220906093714702"></p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658245.png" alt="image-20220906093830649"></p>
<h3 id="3、同款产品对比"><a href="#3、同款产品对比" class="headerlink" title="3、同款产品对比"></a>3、同款产品对比</h3><h4 id="3-1、Spring-Security"><a href="#3-1、Spring-Security" class="headerlink" title="3.1、Spring Security"></a>3.1、Spring Security</h4><p>Spring 技术栈的组成部分。</p>
<p>通过提供完整可扩展的认证和授权支持保护你的应用程序。</p>
<p><a href="https://spring.io/projects/spring-sercurity">https://spring.io/projects/spring-sercurity</a></p>
<p><strong>Spring Security 特点：</strong></p>
<ul>
<li>和Spring无缝整合</li>
<li>全面的权限控制</li>
<li>专门为Web开发而设计<ul>
<li>旧版本不能脱离Web环境使用</li>
<li>新版本对整个框架进行了分层抽取，分成了核心模块和Web模块，单独引入了核心模块就可以脱离Web环境</li>
</ul>
</li>
<li>重量级</li>
</ul>
<h4 id="3-2、Shiro"><a href="#3-2、Shiro" class="headerlink" title="3.2、Shiro"></a>3.2、Shiro</h4><p>Apache旗下的轻量级权限控制框架</p>
<p><strong>特点：</strong></p>
<ul>
<li>轻量级，Shiro主张的理念就是把复杂的事情变简单，针对对性能有更高要求的互联网应用有更好的表现。</li>
<li>通用性<ul>
<li>好处：不局限于Web环境，可以脱离Web环境使用</li>
<li>缺陷：在Web环境下一些特定的需求需要手动编写代码定制</li>
</ul>
</li>
</ul>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658246.png" alt="image-20220906094612263"></p>
<h3 id="4、模块划分"><a href="#4、模块划分" class="headerlink" title="4、模块划分"></a>4、模块划分</h3><p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658247.png" alt="image-20220906094755479"></p>
<h2 id="二、Spring-Security-入门案例"><a href="#二、Spring-Security-入门案例" class="headerlink" title="二、Spring Security 入门案例"></a>二、Spring Security 入门案例</h2><h3 id="1、创建一个SpringBoot项目"><a href="#1、创建一个SpringBoot项目" class="headerlink" title="1、创建一个SpringBoot项目"></a>1、创建一个SpringBoot项目</h3><h3 id="2、引入相关依赖"><a href="#2、引入相关依赖" class="headerlink" title="2、引入相关依赖"></a>2、引入相关依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="3、编写Controller进行测试"><a href="#3、编写Controller进行测试" class="headerlink" title="3、编写Controller进行测试"></a>3、编写Controller进行测试</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lxg.securitydemo1.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestController</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello security!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658248.png" alt="image-20220906101605959"></p>
<p>默认的用户名：user</p>
<p>密码在运行项目后在启动控制台随机生成</p>
<h3 id="4、权限管理中的相关概念"><a href="#4、权限管理中的相关概念" class="headerlink" title="4、权限管理中的相关概念"></a>4、权限管理中的相关概念</h3><p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658249.png" alt="image-20220906101922715"></p>
<h3 id="5、Spring-Security基本原理"><a href="#5、Spring-Security基本原理" class="headerlink" title="5、Spring Security基本原理"></a>5、Spring Security基本原理</h3><p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658250.png" alt="image-20220906102153152"></p>
<p>代码底层流程：重点看三个过滤器</p>
<p><strong>FilterSecurityInterceptor</strong>：是一个方法级的权限过滤器，基本位于过滤链的最底部。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">invoke</span><span class="params">(FilterInvocation filterInvocation)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">		<span class="keyword">if</span> (isApplied(filterInvocation) &amp;&amp; <span class="built_in">this</span>.observeOncePerRequest) &#123;</span><br><span class="line">			<span class="comment">// filter already applied to this request and user wants us to observe</span></span><br><span class="line">			<span class="comment">// once-per-request handling, so don&#x27;t re-do security checking</span></span><br><span class="line">			filterInvocation.getChain().doFilter(filterInvocation.getRequest(), filterInvocation.getResponse());</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// first time this request being called, so perform security checking</span></span><br><span class="line">		<span class="keyword">if</span> (filterInvocation.getRequest() != <span class="literal">null</span> &amp;&amp; <span class="built_in">this</span>.observeOncePerRequest) &#123;</span><br><span class="line">			filterInvocation.getRequest().setAttribute(FILTER_APPLIED, Boolean.TRUE);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="type">InterceptorStatusToken</span> <span class="variable">token</span> <span class="operator">=</span> </span><br><span class="line">            <span class="built_in">super</span>.beforeInvocation(filterInvocation);</span><br><span class="line">    </span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">            </span><br><span class="line">			filterInvocation.getChain().doFilter(filterInvocation.getRequest(), filterInvocation.getResponse());</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">finally</span> &#123;</span><br><span class="line">			<span class="built_in">super</span>.finallyInvocation(token);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">super</span>.afterInvocation(token, <span class="literal">null</span>);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<p>super.beforeInvocation(fi)表示查看之前的filter是否放行</p>
<p>fi.getChain().doFilter(fi.getRequest(),fi.getResponse());表示真正的调用后台的服务。</p>
<p><strong>ExceptionTranslationFilter</strong>：是个异常过滤器，用来处理在认证授权过程中抛出的异常。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(HttpServletRequest request, HttpServletResponse response, FilterChain chain)</span></span><br><span class="line">			<span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			chain.doFilter(request, response);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">catch</span> (IOException ex) &#123;</span><br><span class="line">			<span class="keyword">throw</span> ex;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">			<span class="comment">// Try to extract a SpringSecurityException from the stacktrace</span></span><br><span class="line">			Throwable[] causeChain = <span class="built_in">this</span>.throwableAnalyzer.determineCauseChain(ex);</span><br><span class="line">			<span class="type">RuntimeException</span> <span class="variable">securityException</span> <span class="operator">=</span> (AuthenticationException) <span class="built_in">this</span>.throwableAnalyzer</span><br><span class="line">					.getFirstThrowableOfType(AuthenticationException.class, causeChain);</span><br><span class="line">			<span class="keyword">if</span> (securityException == <span class="literal">null</span>) &#123;</span><br><span class="line">				securityException = (AccessDeniedException) <span class="built_in">this</span>.throwableAnalyzer</span><br><span class="line">						.getFirstThrowableOfType(AccessDeniedException.class, causeChain);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (securityException == <span class="literal">null</span>) &#123;</span><br><span class="line">				rethrow(ex);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (response.isCommitted()) &#123;</span><br><span class="line">				<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ServletException</span>(<span class="string">&quot;Unable to handle the Spring Security Exception &quot;</span></span><br><span class="line">						+ <span class="string">&quot;because the response is already committed.&quot;</span>, ex);</span><br><span class="line">			&#125;</span><br><span class="line">			handleSpringSecurityException(request, response, chain, securityException);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<p><strong>UsernamePasswordAuthenticationFilter</strong>：对/login的POST请求做拦截，校验表单中的用户名和密码。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> Authentication <span class="title function_">attemptAuthentication</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line">			<span class="keyword">throws</span> AuthenticationException &#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">this</span>.postOnly &amp;&amp; !request.getMethod().equals(<span class="string">&quot;POST&quot;</span>)) &#123;</span><br><span class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">AuthenticationServiceException</span>(<span class="string">&quot;Authentication method not supported: &quot;</span> + request.getMethod());</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> obtainUsername(request);</span><br><span class="line">		username = (username != <span class="literal">null</span>) ? username.trim() : <span class="string">&quot;&quot;</span>;</span><br><span class="line">		<span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> obtainPassword(request);</span><br><span class="line">		password = (password != <span class="literal">null</span>) ? password : <span class="string">&quot;&quot;</span>;</span><br><span class="line">		<span class="type">UsernamePasswordAuthenticationToken</span> <span class="variable">authRequest</span> <span class="operator">=</span> UsernamePasswordAuthenticationToken.unauthenticated(username,</span><br><span class="line">				password);</span><br><span class="line">		<span class="comment">// Allow subclasses to set the &quot;details&quot; property</span></span><br><span class="line">		setDetails(request, authRequest);</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">this</span>.getAuthenticationManager().authenticate(authRequest);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br></pre></td></tr></table></figure>
<h3 id="6、过滤器如何进行加载的？"><a href="#6、过滤器如何进行加载的？" class="headerlink" title="6、过滤器如何进行加载的？"></a>6、过滤器如何进行加载的？</h3><p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658251.png" alt="image-20220906104917248"></p>
<h3 id="7、UserDetailsService接口讲解"><a href="#7、UserDetailsService接口讲解" class="headerlink" title="7、UserDetailsService接口讲解"></a>7、UserDetailsService接口讲解</h3><p>当什么都没配置的时候，账号和密码是由SpringSecurity定义生成的，而实际项目中账号和密码都是从数据库中查询出来的，所以我们要通过自定义逻辑控制认证逻辑。</p>
<p>如果需要自定义逻辑时，只需要实现UserDetailService接口即可。</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658252.png" alt="image-20220906110034330"></p>
<p>接口定义如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright 2004, 2005, 2006 Acegi Technology Pty Limited</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment"> * you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"> * You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *      https://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"> * See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"> * limitations under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> org.springframework.security.core.userdetails;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Core interface which loads user-specific data.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * It is used throughout the framework as a user DAO and is the strategy used by the</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> org.springframework.security.authentication.dao.DaoAuthenticationProvider</span></span><br><span class="line"><span class="comment"> * DaoAuthenticationProvider&#125;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * The interface requires only one read-only method, which simplifies support for new</span></span><br><span class="line"><span class="comment"> * data-access strategies.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Ben Alex</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> org.springframework.security.authentication.dao.DaoAuthenticationProvider</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> UserDetails</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDetailsService</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Locates the user based on the username. In the actual implementation, the search</span></span><br><span class="line"><span class="comment">	 * may possibly be case sensitive, or case insensitive depending on how the</span></span><br><span class="line"><span class="comment">	 * implementation instance is configured. In this case, the &lt;code&gt;UserDetails&lt;/code&gt;</span></span><br><span class="line"><span class="comment">	 * object that comes back may have a username that is of a different case than what</span></span><br><span class="line"><span class="comment">	 * was actually requested..</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> username the username identifying the user whose data is required.</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> a fully populated user record (never &lt;code&gt;null&lt;/code&gt;)</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@throws</span> UsernameNotFoundException if the user could not be found or the user has no</span></span><br><span class="line"><span class="comment">	 * GrantedAuthority</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	UserDetails <span class="title function_">loadUserByUsername</span><span class="params">(String username)</span> <span class="keyword">throws</span> UsernameNotFoundException;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>返回值UserDetails</p>
<p>这个类是系统默认的用户“主体”</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDetails</span> <span class="keyword">extends</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line"><span class="comment">// 表示获取登录用户所有权限</span></span><br><span class="line">Collection&lt;? <span class="keyword">extends</span> <span class="title class_">GrantedAuthority</span>&gt; getAuthorities();</span><br><span class="line"><span class="comment">// 表示获取密码</span></span><br><span class="line">String <span class="title function_">getPassword</span><span class="params">()</span>;</span><br><span class="line"><span class="comment">// 表示获取用户名</span></span><br><span class="line">String <span class="title function_">getUsername</span><span class="params">()</span>;</span><br><span class="line"><span class="comment">// 表示判断账户是否过期</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">isAccountNonExpired</span><span class="params">()</span>;</span><br><span class="line"><span class="comment">// 表示判断账户是否被锁定</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">isAccountNonLocked</span><span class="params">()</span>;</span><br><span class="line"><span class="comment">// 表示凭证&#123;密码&#125;是否过期</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">isCredentialsNonExpired</span><span class="params">()</span>;</span><br><span class="line"><span class="comment">// 表示当前用户是否可用</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">isEnabled</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>UserDetails的实现类User</p>
<p>以后只需要使用User这个实体类即可！</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658254.png" alt="image-20220906110448001"></p>
<p>方法参数username</p>
<p>表示用户名，此值是客户端表单传递过来的数据，默认情况下必须叫username，否则无法接收。</p>
<h3 id="8、PasswordEncoder接口讲解"><a href="#8、PasswordEncoder接口讲解" class="headerlink" title="8、PasswordEncoder接口讲解"></a>8、PasswordEncoder接口讲解</h3><p>数据加密接口，用于返回User对象里面密码加密</p>
<p>接口定义如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">PasswordEncoder</span> &#123;</span><br><span class="line"><span class="comment">// 表示把参数按照特定的解析规则进行解析</span></span><br><span class="line">String <span class="title function_">encode</span><span class="params">(CharSequence rawPassword)</span>;</span><br><span class="line"><span class="comment">// 表示验证从存储中获取的编码密码与编码后提交的原始密码是否匹配。如果密码匹</span></span><br><span class="line">配，则返回 <span class="literal">true</span>；如果不匹配，则返回 <span class="literal">false</span>。第一个参数表示需要被解析的密码。第二个</span><br><span class="line">参数表示存储的密码。</span><br><span class="line"><span class="type">boolean</span> <span class="title function_">matches</span><span class="params">(CharSequence rawPassword, String encodedPassword)</span>;</span><br><span class="line"><span class="comment">// 表示如果解析的密码能够再次进行解析且达到更安全的结果则返回 true，否则返回</span></span><br><span class="line"><span class="literal">false</span>。默认返回 <span class="literal">false</span>。</span><br><span class="line"><span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">upgradeEncoding</span><span class="params">(String encodedPassword)</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>接口的实现类：</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658255.png" alt="image-20220906110853710"></p>
<p>BCryptPasswordEncoder 是 Spring Security 官方推荐的密码解析器，平时多使用这个解析 器。 BCryptPasswordEncoder 是对 bcrypt 强散列方法的具体实现。是基于 Hash 算法实现的单 向加密。可以通过 strength 控制加密强度，默认 10</p>
<p>测试：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test01</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="comment">// 创建密码解析器</span></span><br><span class="line"><span class="type">BCryptPasswordEncoder</span> <span class="variable">bCryptPasswordEncoder</span> <span class="operator">=</span> <span class="keyword">new</span> </span><br><span class="line"><span class="title class_">BCryptPasswordEncoder</span>();</span><br><span class="line"><span class="comment">// 对密码进行加密</span></span><br><span class="line"><span class="type">String</span> <span class="variable">atguigu</span> <span class="operator">=</span> bCryptPasswordEncoder.encode(<span class="string">&quot;atguigu&quot;</span>);</span><br><span class="line"><span class="comment">// 打印加密之后的数据</span></span><br><span class="line">System.out.println(<span class="string">&quot;加密之后数据：\t&quot;</span>+atguigu);</span><br><span class="line"><span class="comment">//判断原字符加密后和加密之前是否匹配</span></span><br><span class="line"><span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> bCryptPasswordEncoder.matches(<span class="string">&quot;atguigu&quot;</span>, atguigu);</span><br><span class="line"><span class="comment">// 打印比较结果</span></span><br><span class="line">System.out.println(<span class="string">&quot;比较结果：\t&quot;</span>+result);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="三、Spring-Security-Web权限方案"><a href="#三、Spring-Security-Web权限方案" class="headerlink" title="三、Spring Security Web权限方案"></a>三、Spring Security Web权限方案</h2><h3 id="1、认证"><a href="#1、认证" class="headerlink" title="1、认证"></a>1、认证</h3><p>1、设置登录的用户名和密码</p>
<p>第一种方式：通过配置文件</p>
<p>在application.properties:</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring.security.user.name</span>=<span class="string">xiaolin</span></span><br><span class="line"><span class="attr">spring.security.user.password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure>
<p>第二种方式：通过配置类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyConfig</span> <span class="keyword">extends</span> <span class="title class_">WebSecurityConfigurerAdapter</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PasswordEncoder passwordEncoder;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    PasswordEncoder <span class="title function_">password</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">BCryptPasswordEncoder</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//BCryptPasswordEncoder passwordEncoder = new BCryptPasswordEncoder();</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> passwordEncoder.encode(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">        auth.inMemoryAuthentication().withUser(<span class="string">&quot;lxg&quot;</span>).password(password).roles(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="meta">@EnableGlobalMethodSecurity(prePostEnabled = true)</span> <span class="comment">// 启用方法安全设置</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SecurityConfig</span> <span class="keyword">extends</span> <span class="title class_">WebSecurityConfigurerAdapter</span> &#123;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">KEY</span> <span class="operator">=</span> <span class="string">&quot;edward&quot;</span>;</span><br><span class="line"> </span><br><span class="line"> <span class="meta">@Autowired</span></span><br><span class="line"> <span class="keyword">private</span> UserDetailsService userDetailsService;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PasswordEncoder passwordEncoder;</span><br><span class="line"> </span><br><span class="line"> <span class="meta">@Bean</span>  </span><br><span class="line">    <span class="keyword">public</span> PasswordEncoder <span class="title function_">passwordEncoder</span><span class="params">()</span> &#123;  </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">BCryptPasswordEncoder</span>();   <span class="comment">// 使用 BCrypt 加密</span></span><br><span class="line">    &#125;  </span><br><span class="line"> </span><br><span class="line"> <span class="meta">@Bean</span>  </span><br><span class="line">    <span class="keyword">public</span> AuthenticationProvider <span class="title function_">authenticationProvider</span><span class="params">()</span> &#123;  </span><br><span class="line">  <span class="type">DaoAuthenticationProvider</span> <span class="variable">authenticationProvider</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DaoAuthenticationProvider</span>();</span><br><span class="line">  authenticationProvider.setUserDetailsService(userDetailsService);</span><br><span class="line">  authenticationProvider.setPasswordEncoder(passwordEncoder); <span class="comment">// 设置密码加密方式</span></span><br><span class="line">        <span class="keyword">return</span> authenticationProvider;  </span><br><span class="line">    &#125;  </span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 自定义配置</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">  http.authorizeRequests().antMatchers(<span class="string">&quot;/css/**&quot;</span>, <span class="string">&quot;/js/**&quot;</span>, <span class="string">&quot;/fonts/**&quot;</span>, <span class="string">&quot;/index&quot;</span>).permitAll() <span class="comment">// 都可以访问</span></span><br><span class="line">    .antMatchers(<span class="string">&quot;/h2-console/**&quot;</span>).permitAll() <span class="comment">// 都可以访问</span></span><br><span class="line">    .antMatchers(<span class="string">&quot;/admins/**&quot;</span>).hasRole(<span class="string">&quot;ADMIN&quot;</span>) <span class="comment">// 需要相应的角色才能访问</span></span><br><span class="line">    .and()</span><br><span class="line">    .formLogin()   <span class="comment">//基于 Form 表单登录验证</span></span><br><span class="line">    .loginPage(<span class="string">&quot;/login&quot;</span>).failureUrl(<span class="string">&quot;/login-error&quot;</span>) <span class="comment">// 自定义登录界面</span></span><br><span class="line">    .and().rememberMe().key(KEY) <span class="comment">// 启用 remember me</span></span><br><span class="line">    .and().exceptionHandling().accessDeniedPage(<span class="string">&quot;/403&quot;</span>);  <span class="comment">// 处理异常，拒绝访问就重定向到 403 页面</span></span><br><span class="line">  http.csrf().ignoringAntMatchers(<span class="string">&quot;/h2-console/**&quot;</span>); <span class="comment">// 禁用 H2 控制台的 CSRF 防护</span></span><br><span class="line">  http.headers().frameOptions().sameOrigin(); <span class="comment">// 允许来自同一来源的H2 控制台的请求</span></span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 认证信息管理</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> auth</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="meta">@Autowired</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">configureGlobal</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">  auth.userDetailsService(userDetailsService);</span><br><span class="line">  auth.authenticationProvider(authenticationProvider());</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>第三种方式：自定义编写实现类</p>
<p>第一步、创建配置类，设置使用哪个userDetailService实现类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SecurityConfig</span> <span class="keyword">extends</span> <span class="title class_">WebSecurityConfigurerAdapter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDetailsService userDetailsService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        auth.userDetailsService(userDetailsService).passwordEncoder(password());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    PasswordEncoder <span class="title function_">password</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">BCryptPasswordEncoder</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>第二步、编写实现类，返回User对象，User对象有用户名、密码和操作权限</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service(&quot;userDetailsService&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyUserDetailsService</span> <span class="keyword">implements</span> <span class="title class_">UserDetailsService</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> UserDetails <span class="title function_">loadUserByUsername</span><span class="params">(String username)</span> <span class="keyword">throws</span> UsernameNotFoundException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Spring Security只会帮我们验证密码，不会帮我们验证用户名</span></span><br><span class="line">        <span class="keyword">if</span>(!username.equals(<span class="string">&quot;xiaolin&quot;</span>))&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;输入用户名错误！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;GrantedAuthority&gt; authorityList = AuthorityUtils.commaSeparatedStringToAuthorityList(<span class="string">&quot;role&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">User</span>(username,<span class="keyword">new</span> <span class="title class_">BCryptPasswordEncoder</span>().encode(<span class="string">&quot;123&quot;</span>),authorityList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2、实现数据库认证来完成用户登录（整合MyBatisPlus"><a href="#2、实现数据库认证来完成用户登录（整合MyBatisPlus" class="headerlink" title="2、实现数据库认证来完成用户登录（整合MyBatisPlus)"></a>2、实现数据库认证来完成用户登录（整合MyBatisPlus)</h3><p>1、准备数据库和表</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658256.png" alt="image-20220907201022055"></p>
<p>2、添加依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--mybatis-plus--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--mysql--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--lombok 用来简化实体类--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>3、创建实体类及其mapper接口和xml</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UsersMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;Users&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658257.png" alt="image-20220907201102865"></p>
<p>4、</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service(&quot;userDetailsService&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyUserDetailsService</span> <span class="keyword">implements</span> <span class="title class_">UserDetailsService</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UsersMapper usersMapper;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> UserDetails <span class="title function_">loadUserByUsername</span><span class="params">(String username)</span> <span class="keyword">throws</span> UsernameNotFoundException &#123;</span><br><span class="line"></span><br><span class="line">        QueryWrapper&lt;Users&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        wrapper.lambda().eq(Users::getUsername, username);</span><br><span class="line">        <span class="comment">//Users user = usersService.getOne(wrapper);</span></span><br><span class="line">        <span class="type">Users</span> <span class="variable">user</span> <span class="operator">=</span> usersMapper.selectOne(wrapper);</span><br><span class="line">        <span class="comment">//Spring Security只会帮我们验证密码，不会帮我们验证用户名</span></span><br><span class="line">        <span class="keyword">if</span>(user==<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="comment">//数据库中不存在该用户</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UsernameNotFoundException</span>(<span class="string">&quot;输入用户名错误！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;GrantedAuthority&gt; authorityList = AuthorityUtils.commaSeparatedStringToAuthorityList(<span class="string">&quot;role&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">User</span>(user.getUsername(),<span class="keyword">new</span> <span class="title class_">BCryptPasswordEncoder</span>().encode(user.getPassword()),authorityList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>5、注意在启动类上添加MapperScan注解</p>
<p>6、配置数据源</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/security_demo?serverTimezone=GMT%2B8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br></pre></td></tr></table></figure>
<p>7、测试</p>
<h3 id="3、自定义设置登录界面以及设置不需要认证可以访问"><a href="#3、自定义设置登录界面以及设置不需要认证可以访问" class="headerlink" title="3、自定义设置登录界面以及设置不需要认证可以访问"></a>3、自定义设置登录界面以及设置不需要认证可以访问</h3><p>1、在配置类实现相关的配置</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    http.formLogin()<span class="comment">//自定义登录界面--自己编写的页面</span></span><br><span class="line">            .loginPage(<span class="string">&quot;/login.html&quot;</span>) <span class="comment">//登录页面设置</span></span><br><span class="line">            .loginProcessingUrl(<span class="string">&quot;/user/login&quot;</span>) <span class="comment">//登录访问路径</span></span><br><span class="line">            .defaultSuccessUrl(<span class="string">&quot;/test/index&quot;</span>).permitAll()<span class="comment">//登录成功之后，跳转路径</span></span><br><span class="line">            .and().authorizeRequests()</span><br><span class="line">            .antMatchers(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;/test/hello&quot;</span>,<span class="string">&quot;/user/login&quot;</span>).permitAll() <span class="comment">//设置哪些路径可以直接访问，不需要认证</span></span><br><span class="line">            .anyRequest().authenticated()  <span class="comment">//所有请求都可以访问</span></span><br><span class="line">            .and().csrf().disable(); <span class="comment">//关闭csrf防护</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>2、创建相关页面，controller</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;index&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">index</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;hello index!&quot;</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<h3 id="4、授权"><a href="#4、授权" class="headerlink" title="4、授权"></a>4、授权</h3><h4 id="1、基于角色或权限进行访问控制"><a href="#1、基于角色或权限进行访问控制" class="headerlink" title="1、基于角色或权限进行访问控制"></a>1、基于角色或权限进行访问控制</h4><h5 id="1、hasAuthority方法"><a href="#1、hasAuthority方法" class="headerlink" title="1、hasAuthority方法"></a>1、hasAuthority方法</h5><p>如果当前的主体有指定的权限，则返回true，否则返回false</p>
<p>1、修改配置类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//当前登录用户，只有具有admins权限才可以进行访问这个路径</span></span><br><span class="line">                .antMatchers(<span class="string">&quot;/test/index&quot;</span>).hasAuthority(<span class="string">&quot;admins&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>2、在UserDetailsService中设置返回User对象的权限</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;GrantedAuthority&gt; authorityList = AuthorityUtils.commaSeparatedStringToAuthorityList(<span class="string">&quot;admins&quot;</span>);</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">User</span>(user.getUsername(),<span class="keyword">new</span> <span class="title class_">BCryptPasswordEncoder</span>().encode(user.getPassword()),authorityList);</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658258.png" alt="image-20220907223413713"></p>
<p>没有yhu权限的情况</p>
<h5 id="2、hasAnythority方法"><a href="#2、hasAnythority方法" class="headerlink" title="2、hasAnythority方法"></a>2、hasAnythority方法</h5><p>如果当前的主体有任何提供的权限（给定的作为一个逗号分隔的字符串列表）的话，返回true</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">.antMatchers(<span class="string">&quot;/test/index&quot;</span>).hasAnyAuthority(<span class="string">&quot;admins,manager&quot;</span>)</span><br><span class="line">    老版写法</span><br><span class="line">                    .antMatchers(<span class="string">&quot;/test/index&quot;</span>).hasAnyAuthority(<span class="string">&quot;admins&quot;</span>,<span class="string">&quot;manager&quot;</span>)</span><br><span class="line">新版写法</span><br></pre></td></tr></table></figure>
<h5 id="3、hasRole方法"><a href="#3、hasRole方法" class="headerlink" title="3、hasRole方法"></a>3、hasRole方法</h5><p>如果用户具备给定角色就允许访问，否则出现403.</p>
<p>如果当前主体具有指定的角色，则返回true。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//hasRole方法 ROLE_sale</span></span><br><span class="line">                .antMatchers(<span class="string">&quot;/test/index&quot;</span>).hasRole(<span class="string">&quot;sale&quot;</span>)</span><br><span class="line">                    </span><br><span class="line">                    </span><br><span class="line">                    </span><br><span class="line">                            List&lt;GrantedAuthority&gt; authorityList = AuthorityUtils.commaSeparatedStringToAuthorityList(<span class="string">&quot;manager,ROLE_sale&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h5 id="4、hasAnyRole方法"><a href="#4、hasAnyRole方法" class="headerlink" title="4、hasAnyRole方法"></a>4、hasAnyRole方法</h5><p>如果用户具备给定的任意一个角色就允许访问，否则出现403</p>
<p>如果当前主体具备指定的角色，则返回true</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//hasAnyRole方法</span></span><br><span class="line">                .antMatchers(<span class="string">&quot;/test/index&quot;</span>).hasAnyRole(<span class="string">&quot;sale&quot;</span>,<span class="string">&quot;manager&quot;</span>)</span><br><span class="line">                    </span><br><span class="line">    List&lt;GrantedAuthority&gt; authorityList = AuthorityUtils.commaSeparatedStringToAuthorityList(<span class="string">&quot;ROLE_manager&quot;</span>);                </span><br></pre></td></tr></table></figure>
<h4 id="2、自定义403没有权限访问页面"><a href="#2、自定义403没有权限访问页面" class="headerlink" title="2、自定义403没有权限访问页面"></a>2、自定义403没有权限访问页面</h4><p>在配置类中进行配置</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"><span class="comment">//配置没有权限访问跳转的自定义页面</span></span><br><span class="line">        http.exceptionHandling().accessDeniedPage(<span class="string">&quot;/unauth.html&quot;</span>);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h4 id="3、注解使用"><a href="#3、注解使用" class="headerlink" title="3、注解使用"></a>3、注解使用</h4><h5 id="1、-Secured"><a href="#1、-Secured" class="headerlink" title="1、@Secured"></a>1、@Secured</h5><p>判断是否具有某个角色，另外需要注意的是这里匹配的字符串需要添加前缀“ROLE_”。</p>
<p>使用注解先要开启注解功能。（在启动类或者配置类上添加开启注解注解）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableGlobalMethodSecurity(securedEnabled = true)</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.lxg.securitydemo1.mapper&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Securitydemo1Application</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		SpringApplication.run(Securitydemo1Application.class, args);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在控制器方法上添加注解</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;update&quot;)</span></span><br><span class="line">    <span class="meta">@Secured(&#123;&quot;ROLE_sale&quot;,&quot;ROLE_manager&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">update</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello update!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>设置用户角色或权限</p>
<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">List&lt;GrantedAuthority&gt; authorityList <span class="operator">=</span> AuthorityUtils.commaSeparatedStringToAuthorityList(<span class="string">&quot;ROLE_manager&quot;</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure>
<h5 id="2、-PreAuthorize"><a href="#2、-PreAuthorize" class="headerlink" title="2、@PreAuthorize"></a>2、@PreAuthorize</h5><p>先开启注解功能</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableGlobalMethodSecurity(prePostEnabled = true)</span></span><br></pre></td></tr></table></figure>
<p>注解适合进入方法前的权限验证 ，可以将用户的roles/permissions参数传到方法中。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;delete&quot;)</span></span><br><span class="line">    <span class="meta">@PreAuthorize(&quot;hasAnyAuthority(&#x27;admins&#x27;)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">delete</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello delete!&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h5 id="3、PostAuthorize"><a href="#3、PostAuthorize" class="headerlink" title="3、PostAuthorize"></a>3、PostAuthorize</h5><p>先开启注解功能</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableGlobalMethodSecurity(prePostEnabled = true)</span></span><br></pre></td></tr></table></figure>
<p>该注解使用并不多，在方法执行后再进行权限验证，适合验证带有返回值的权限。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;select&quot;)</span></span><br><span class="line">   <span class="meta">@PostAuthorize(&quot;hasAnyAuthority(&#x27;admins1&#x27;)&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">select</span><span class="params">()</span> &#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;select......&quot;</span>);</span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;hello select!&quot;</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<p>控制台能打印说明先执行方法了，但是依然是没有权限访问</p>
<h5 id="4、-PostFilter"><a href="#4、-PostFilter" class="headerlink" title="4、@PostFilter"></a>4、@PostFilter</h5><p>权限验证之后对数据进行过滤，留下用户名是admin1的数据</p>
<p>表达式中的filterObject引用的是方法返回值List的某一个元素。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;getAll&quot;)</span></span><br><span class="line">    <span class="meta">@PostAuthorize(&quot;hasAnyAuthority(&#x27;admins1&#x27;)&quot;)</span></span><br><span class="line">    <span class="meta">@PostFilter(&quot;filterObject.username == &#x27;admin1&#x27;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Users&gt; <span class="title function_">getAlluser</span><span class="params">()</span> &#123;</span><br><span class="line">        ArrayList&lt;Users&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Users&gt;();</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Users</span>(<span class="number">11</span>,<span class="string">&quot;admin1&quot;</span>,<span class="string">&quot;666666&quot;</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Users</span>(<span class="number">21</span>,<span class="string">&quot;admin2&quot;</span>,<span class="string">&quot;666666&quot;</span>));</span><br><span class="line">        System.out.println(list);</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h5 id="5、-PreFilter"><a href="#5、-PreFilter" class="headerlink" title="5、@PreFilter"></a>5、@PreFilter</h5><p>进入控制器方法之前对数据进行过滤</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;get&quot;)</span></span><br><span class="line">   <span class="meta">@PreAuthorize(&quot;hasAnyAuthority(&#x27;admins&#x27;)&quot;)</span></span><br><span class="line">   <span class="meta">@PreFilter(value = &quot;filterObject.id%2==0&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> List&lt;Users&gt; <span class="title function_">getAll</span><span class="params">(<span class="meta">@RequestBody</span> List&lt;Users&gt; list)</span> &#123;</span><br><span class="line"></span><br><span class="line">       list.forEach(t-&gt; &#123;</span><br><span class="line">           System.out.println(t.getId()+<span class="string">&quot;\t&quot;</span>+t.getUsername());</span><br><span class="line">       &#125;);</span><br><span class="line">       System.out.println(<span class="string">&quot;无&quot;</span>);</span><br><span class="line">       <span class="keyword">return</span> list;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<h4 id="4、用户注销"><a href="#4、用户注销" class="headerlink" title="4、用户注销"></a>4、用户注销</h4><h5 id="1、在登录成功页面添加一个退出链接"><a href="#1、在登录成功页面添加一个退出链接" class="headerlink" title="1、在登录成功页面添加一个退出链接"></a>1、在登录成功页面添加一个退出链接</h5><p>success.html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>登录成功！<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span>  <span class="attr">href</span>=<span class="string">&quot;/logout&quot;</span>&gt;</span>退出登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="2、在配置类中添加退出的映射地址"><a href="#2、在配置类中添加退出的映射地址" class="headerlink" title="2、在配置类中添加退出的映射地址"></a>2、在配置类中添加退出的映射地址</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//退出</span></span><br><span class="line">       http.logout().logoutUrl(<span class="string">&quot;/logout&quot;</span>).logoutSuccessUrl(<span class="string">&quot;/test/hello&quot;</span>)<span class="comment">//.permitAll();</span></span><br></pre></td></tr></table></figure>
<h5 id="3、测试"><a href="#3、测试" class="headerlink" title="3、测试"></a>3、测试</h5><ol>
<li>修改配置类，登录成功之后跳转到成功页面</li>
<li>在成功页面添加超链接，设置退出路径</li>
<li><p>登录成功之后，在成功页面点击退出，再去访问其他controller不能进行访问了</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;success&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String  <span class="title function_">success</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="5、基于数据库实现权限认证（记住我）"><a href="#5、基于数据库实现权限认证（记住我）" class="headerlink" title="5、基于数据库实现权限认证（记住我）"></a>5、基于数据库实现权限认证（记住我）</h4><p>自动登录：</p>
<ol>
<li>cookie技术</li>
<li>安全框架机制实现自动登录</li>
</ol>
<h5 id="实现原理："><a href="#实现原理：" class="headerlink" title="实现原理："></a>实现原理：</h5><p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658259.png" alt="image-20220912100649426"></p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658260.png" alt="image-20220912100745610"></p>
<h5 id="具体实现："><a href="#具体实现：" class="headerlink" title="具体实现："></a>具体实现：</h5><ol>
<li><p>创建数据库表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `persistent_logins` (</span><br><span class="line"> `username` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"> `series` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"> `token` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"> `last_used` <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> </span><br><span class="line"><span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line"> <span class="keyword">PRIMARY</span> KEY (`series`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置类，注入数据源，配置操作数据库对象</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//注入数据源</span></span><br><span class="line">   <span class="meta">@Autowired</span></span><br><span class="line">   <span class="keyword">private</span> DataSource dataSource;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">//配置对象</span></span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="keyword">public</span> PersistentTokenRepository <span class="title function_">persistentTokenRepository</span><span class="params">(DataSource dataSource)</span>&#123;</span><br><span class="line">       <span class="type">JdbcTokenRepositoryImpl</span> <span class="variable">jdbcTokenRepository</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JdbcTokenRepositoryImpl</span>();</span><br><span class="line">       jdbcTokenRepository.setDataSource(dataSource);</span><br><span class="line">       <span class="comment">//生成表</span></span><br><span class="line">       <span class="comment">//jdbcTokenRepository.setCreateTableOnStartup(true);</span></span><br><span class="line">       <span class="keyword">return</span> jdbcTokenRepository;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置类中配置自动登录</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">.and().rememberMe().tokenRepository(persistentTokenRepository())</span><br><span class="line">.tokenValiditySeconds(<span class="number">60</span>)<span class="comment">//设置有效时长，单位秒</span></span><br><span class="line">.userDetailsService(userDetailsService)</span><br></pre></td></tr></table></figure>
</li>
<li><p>在登录界面设置复选框</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;remember-me&quot;</span>/&gt;</span>自动登录</span><br></pre></td></tr></table></figure>
<p>name值固定，底层封装好了</p>
</li>
</ol>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658261.png" alt="image-20220912103733635"></p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658262.png" alt="image-20220912104019814"></p>
<h4 id="6、CSRF理解"><a href="#6、CSRF理解" class="headerlink" title="6、CSRF理解"></a>6、CSRF理解</h4><p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658263.png" alt="image-20220912105834768"></p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658264.png" alt="image-20220912112932587"></p>
<p>网络安全：<a href="https://www.bilibili.com/video/BV1Lf4y1t7Mc?spm_id_from=333.337.search-card.all.click">https://www.bilibili.com/video/BV1Lf4y1t7Mc?spm_id_from=333.337.search-card.all.click</a></p>
<h2 id="四、Spring-Security-微服务权限方案"><a href="#四、Spring-Security-微服务权限方案" class="headerlink" title="四、Spring Security 微服务权限方案"></a>四、Spring Security 微服务权限方案</h2><h3 id="1、什么是微服务？"><a href="#1、什么是微服务？" class="headerlink" title="1、什么是微服务？"></a>1、什么是微服务？</h3><p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658265.png" alt="image-20220912114137632"></p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658266.png" alt="image-20220912114615441"></p>
<h3 id="2、微服务认证和授权实现过程"><a href="#2、微服务认证和授权实现过程" class="headerlink" title="2、微服务认证和授权实现过程"></a>2、微服务认证和授权实现过程</h3><p>单点登录、授权</p>
<h4 id="1、认证授权过程分析"><a href="#1、认证授权过程分析" class="headerlink" title="1、认证授权过程分析"></a>1、认证授权过程分析</h4><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">（<span class="number">1</span>）如果是基于 <span class="keyword">Session</span>，那么 Spring-<span class="keyword">security</span> 会对 cookie 里的 sessionid 进行解析，找 到服务器存储的 <span class="keyword">session</span> 信息，然后判断当前用户是否符合请求的要求。</span><br><span class="line">（<span class="number">2</span>）如果是 token，则是解析出 token，然后将当前请求加入到 Spring-<span class="keyword">security</span> 管理的权限 信息中去</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658267.png" alt="image-20220912114912517"></p>
<h3 id="3、完成基于SpringSecurity认证授权案例"><a href="#3、完成基于SpringSecurity认证授权案例" class="headerlink" title="3、完成基于SpringSecurity认证授权案例"></a>3、完成基于SpringSecurity认证授权案例</h3><h4 id="1、实现功能"><a href="#1、实现功能" class="headerlink" title="1、实现功能"></a>1、实现功能</h4><figure class="highlight"><table><tr><td class="code"><pre><span class="line">1、登录（认证）</span><br><span class="line"></span><br><span class="line">2、添加角色</span><br><span class="line"></span><br><span class="line">3、为角色分配菜单</span><br><span class="line"></span><br><span class="line">4、添加用户</span><br><span class="line"></span><br><span class="line">5、为用户分配角色</span><br></pre></td></tr></table></figure>
<h4 id="2、权限管理数据模型"><a href="#2、权限管理数据模型" class="headerlink" title="2、权限管理数据模型"></a>2、权限管理数据模型</h4><p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658269.png" alt="image-20220912155340991"></p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658270.png" alt="image-20220912160244879"></p>
<h4 id="3、案例涉及技术说明"><a href="#3、案例涉及技术说明" class="headerlink" title="3、案例涉及技术说明"></a>3、案例涉及技术说明</h4><h5 id="1、Maven"><a href="#1、Maven" class="headerlink" title="1、Maven"></a>1、Maven</h5><ol>
<li>创建父工程：管理项目依赖版本</li>
<li>创建子模块：使用具体依赖</li>
</ol>
<h5 id="2、SpringBoot"><a href="#2、SpringBoot" class="headerlink" title="2、SpringBoot"></a>2、SpringBoot</h5><ol>
<li>本质就是Spring</li>
</ol>
<h5 id="3、MyBatisPlus"><a href="#3、MyBatisPlus" class="headerlink" title="3、MyBatisPlus"></a>3、MyBatisPlus</h5><ol>
<li>操作数据库框架</li>
</ol>
<h5 id="4、SpringCloud"><a href="#4、SpringCloud" class="headerlink" title="4、SpringCloud"></a>4、SpringCloud</h5><ol>
<li>GateWay网关</li>
<li>注册中心 Nacos</li>
</ol>
<h5 id="5、Redis"><a href="#5、Redis" class="headerlink" title="5、Redis"></a>5、Redis</h5><h5 id="6、Jwt"><a href="#6、Jwt" class="headerlink" title="6、Jwt"></a>6、Jwt</h5><h5 id="7、Swagger"><a href="#7、Swagger" class="headerlink" title="7、Swagger"></a>7、Swagger</h5><h5 id="8、前端技术"><a href="#8、前端技术" class="headerlink" title="8、前端技术"></a>8、前端技术</h5><h4 id="4、搭建项目工程"><a href="#4、搭建项目工程" class="headerlink" title="4、搭建项目工程"></a>4、搭建项目工程</h4><h5 id="1、创建父工程acl-parent-管理依赖版本"><a href="#1、创建父工程acl-parent-管理依赖版本" class="headerlink" title="1、创建父工程acl_parent:管理依赖版本"></a>1、创建父工程acl_parent:管理依赖版本</h5><h5 id="2、在父工程创建子模块"><a href="#2、在父工程创建子模块" class="headerlink" title="2、在父工程创建子模块"></a>2、在父工程创建子模块</h5><ol>
<li>common<ul>
<li>service_base：工具类</li>
<li>spring_security:权限配置</li>
</ul>
</li>
<li>infrastructure<ul>
<li>api_gateway:网关</li>
</ul>
</li>
<li>service<ul>
<li>service_acl:权限管理微服务模块</li>
</ul>
</li>
</ol>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658271.png" alt="image-20220912192607763"></p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658272.png" alt="image-20220912163022652"></p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658273.png" alt="image-20220912221311051"></p>
<h4 id="5、启动Redis和Nacos"><a href="#5、启动Redis和Nacos" class="headerlink" title="5、启动Redis和Nacos"></a>5、启动Redis和Nacos</h4><h5 id="1、启动Redis"><a href="#1、启动Redis" class="headerlink" title="1、启动Redis"></a>1、启动Redis</h5><p>输入命令redis-server redis.windows.conf 如下图所示则启动成功</p>
<p>输入<strong>redis-cli.exe -h 127.0.0.1 -p 6379</strong> 客户端访问</p>
<p>查找所有符合给定模式的key   KEYS *</p>
<p> 获取指定key的值 get name</p>
<p>设置指定key的值 set name “hello world”</p>
<h5 id="2、启动Nacos"><a href="#2、启动Nacos" class="headerlink" title="2、启动Nacos"></a>2、启动Nacos</h5><p>注册中心</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658274.png" alt="image-20220912192219341"></p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658275.png" alt="image-20220912192302430"></p>
<p>访问地址：<a href="http://localhost:8848/nacos">http://localhost:8848/nacos</a></p>
<p>默认用户名和密码都是：nacos</p>
<h4 id="6、编写common里面需要的工具类"><a href="#6、编写common里面需要的工具类" class="headerlink" title="6、编写common里面需要的工具类"></a>6、编写common里面需要的工具类</h4><p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658276.png" alt="image-20220912193256569"></p>
<h4 id="7、编写SpringSecurity认证授权工具类和处理器"><a href="#7、编写SpringSecurity认证授权工具类和处理器" class="headerlink" title="7、编写SpringSecurity认证授权工具类和处理器"></a>7、编写SpringSecurity认证授权工具类和处理器</h4><p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658277.png" alt="image-20220912193343978"></p>
<p>密码处理工具类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DefaultPasswordEncoder</span> <span class="keyword">implements</span> <span class="title class_">PasswordEncoder</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DefaultPasswordEncoder</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>(-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DefaultPasswordEncoder</span><span class="params">(<span class="type">int</span> strength)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//进行MD5加密</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">encode</span><span class="params">(CharSequence rawPassword)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> MD5.encrypt(rawPassword.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//进行密码的比对</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">matches</span><span class="params">(CharSequence rawPassword, String encodedPassword)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">equals</span> <span class="operator">=</span> encodedPassword.equals(MD5.encrypt(rawPassword.toString()));</span><br><span class="line">        <span class="keyword">return</span> equals;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>token操作工具类：</p>
<p>使用jwt生成token</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TokenManager</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//token有效时长</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> <span class="variable">tokenExpiration</span> <span class="operator">=</span> <span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>*<span class="number">1000</span>;</span><br><span class="line">    <span class="comment">//编码密钥</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">tokenSignKey</span> <span class="operator">=</span> <span class="string">&quot;123456&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1、使用Jwt根据用户名生成token</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">createToken</span><span class="params">(String username)</span>&#123;</span><br><span class="line">        <span class="type">String</span>  <span class="variable">token</span> <span class="operator">=</span> Jwts.builder().setSubject(username)</span><br><span class="line">                .setExpiration(<span class="keyword">new</span> <span class="title class_">Date</span>(System.currentTimeMillis()+tokenExpiration))</span><br><span class="line">                .signWith(SignatureAlgorithm.ES512,tokenSignKey).compressWith(CompressionCodecs.GZIP).compact();</span><br><span class="line">        <span class="keyword">return</span> token;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2、根据token字符串得到用户信息</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUserInfoFormToken</span><span class="params">(String token)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">userInfo</span> <span class="operator">=</span> Jwts.parser().setSigningKey(tokenSignKey).parseClaimsJws(token).getBody().getSubject();</span><br><span class="line">        <span class="keyword">return</span> userInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//3、删除token</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeToken</span><span class="params">(String token)</span>&#123;</span><br><span class="line">        <span class="comment">//jwttoken 无需删除，客户端扔掉即可。</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="8、jwt介绍"><a href="#8、jwt介绍" class="headerlink" title="8、jwt介绍"></a>8、jwt介绍</h4><h5 id="1、访问令牌的类型"><a href="#1、访问令牌的类型" class="headerlink" title="1、访问令牌的类型"></a>1、访问令牌的类型</h5><p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658278.png" alt="image-20220912194825544"></p>
<h5 id="2、JWT的组成"><a href="#2、JWT的组成" class="headerlink" title="2、JWT的组成"></a>2、JWT的组成</h5><p>典型的，一个 JWT 看起来如下图：</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658279.png" alt="image-20220912194902513"></p>
<p>该对象为一个很长的字符串，字符之间通过”.”分隔符分为三个子串。 每一个子串表示了一个功能块，总共有以下三个部分：JWT 头、有效载荷和签名</p>
<p><strong>JWT 头</strong> </p>
<p>JWT 头部分是一个描述 JWT 元数据的 JSON 对象，通常如下所示。</p>
<p> { </p>
<p>“alg”: “HS256”,</p>
<p> “typ”: “JWT”</p>
<p> } </p>
<p>在上面的代码中，alg 属性表示签名使用的算法，默认为 HMAC SHA256（写为 HS256）； typ 属性表示令牌的类型，JWT 令牌统一写为 JWT。最后，使用 Base64 URL 算法将上述 JSON 对象转换为字符串保存。</p>
<p> <strong>有效载荷</strong></p>
<p> 有效载荷部分，是 JWT 的主体内容部分，也是一个 JSON 对象，包含需要传递的数据。 JWT 指定七个默认字段供选择。</p>
<p> iss：发行人</p>
<p> exp：到期时间 </p>
<p>sub：主题</p>
<p> aud：用户 </p>
<p>nbf：在此之前不可用 </p>
<p>iat：发布时间</p>
<p> jti：JWT ID 用于标识该 JWT</p>
<p> 除以上默认字段外，我们还可以自定义私有字段，如下例：</p>
<p> {</p>
<p> “sub”: “1234567890”,</p>
<p> “name”: “Helen”, </p>
<p>“admin”: true </p>
<p>} </p>
<p>请注意，默认情况下 JWT 是未加密的，任何人都可以解读其内容，因此不要构建隐私信息 字段，存放保密信息，以防止信息泄露。</p>
<p> JSON 对象也使用 Base64 URL 算法转换为字符串保存</p>
<p><strong>签名哈希</strong></p>
<p>签名哈希部分是对上面两部分数据签名，通过指定的算法生成哈希，以确保数据不会被篡 改。</p>
<p> 首先，需要指定一个密码（secret）。该密码仅仅为保存在服务器中，并且不能向用户公 开。然后，使用标头中指定的签名算法（默认情况下为 HMAC SHA256）根据以下公式生成 签名。</p>
<p> HMACSHA256(base64UrlEncode(header) + “.” + base64UrlEncode(claims), secret)</p>
<p> 在计算出签名哈希后，JWT 头，有效载荷和签名哈希的三个部分组合成一个字符串，每个 部分用”.”分隔，就构成整个 JWT 对象。</p>
<p> <strong>Base64URL算法</strong></p>
<p>如前所述，JWT 头和有效载荷序列化的算法都用到了 Base64URL。该算法和常见 Base64 算 法类似，稍有差别。</p>
<p> 作为令牌的 JWT 可以放在 URL 中（例如 api.example/?token=xxx）。 Base64 中用的三个 字符是”+”，”/“和”=”，由于在 URL 中有特殊含义，因此 Base64URL 中对他们做了替换： “=”去掉，”+”用”-“替换，”/“用”_”替换，这就是 Base64URL 算法。</p>
<h4 id="9、编写退出处理器"><a href="#9、编写退出处理器" class="headerlink" title="9、编写退出处理器"></a>9、编写退出处理器</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//退出处理器</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TokenLogoutHandler</span> <span class="keyword">implements</span> <span class="title class_">LogoutHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TokenManager tokenManager;</span><br><span class="line">    <span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TokenLogoutHandler</span><span class="params">(TokenManager tokenManager, RedisTemplate redisTemplate)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.tokenManager = tokenManager;</span><br><span class="line">        <span class="built_in">this</span>.redisTemplate = redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">logout</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Authentication authentication)</span> &#123;</span><br><span class="line">        <span class="comment">//1、从header里面获取token</span></span><br><span class="line">        <span class="comment">//2、token不为空，移除token，从redis删除token</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> request.getHeader(<span class="string">&quot;token&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(token != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="comment">//移除</span></span><br><span class="line">            tokenManager.removeToken(token);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//从token获取用户名</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> tokenManager.getUserInfoFormToken(token);</span><br><span class="line">            redisTemplate.delete(username);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        ResponseUtil.out(response, R.ok());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="10、编写未授权统一处理类"><a href="#10、编写未授权统一处理类" class="headerlink" title="10、编写未授权统一处理类"></a>10、编写未授权统一处理类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UnauthEntryPoint</span> <span class="keyword">implements</span> <span class="title class_">AuthenticationEntryPoint</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">commence</span><span class="params">(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        ResponseUtil.out(response, R.error());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="11、编写认证的过滤器"><a href="#11、编写认证的过滤器" class="headerlink" title="11、编写认证的过滤器"></a>11、编写认证的过滤器</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TokenLoginFilter</span> <span class="keyword">extends</span> <span class="title class_">UsernamePasswordAuthenticationFilter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TokenManager tokenManager;</span><br><span class="line">    <span class="keyword">private</span> AuthenticationManager authenticationManager;</span><br><span class="line">    <span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    TokenLoginFilter(TokenManager tokenManager, AuthenticationManager authenticationManager, RedisTemplate redisTemplate)&#123;</span><br><span class="line">        <span class="built_in">this</span>.tokenManager = tokenManager;</span><br><span class="line">        <span class="built_in">this</span>.authenticationManager = authenticationManager;</span><br><span class="line">        <span class="built_in">this</span>.redisTemplate = redisTemplate;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.setPostOnly(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.setRequiresAuthenticationRequestMatcher(<span class="keyword">new</span> <span class="title class_">AntPathRequestMatcher</span>(<span class="string">&quot;/admin/acl/login&quot;</span>,<span class="string">&quot;POST&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1、获取表单提交用户名和密码</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Authentication <span class="title function_">attemptAuthentication</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> AuthenticationException &#123;</span><br><span class="line">        <span class="comment">//获取表单提交数据</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectMapper</span>().readValue(request.getInputStream(), User.class);</span><br><span class="line">            <span class="keyword">return</span> authenticationManager.authenticate(<span class="keyword">new</span> <span class="title class_">UsernamePasswordAuthenticationToken</span>(user.getUsername(), user.getPassword(),<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;()));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2、认证成功调用的方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">successfulAuthentication</span><span class="params">(HttpServletRequest request, HttpServletResponse response, FilterChain chain, Authentication authResult)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        <span class="comment">//认证成功，先得到成功之后用户信息</span></span><br><span class="line">       <span class="type">SecurityUser</span> <span class="variable">user</span> <span class="operator">=</span>(SecurityUser)authResult.getPrincipal();</span><br><span class="line">       <span class="comment">//根据用户名生成token</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> tokenManager.createToken(user.getCurrentUserInfo().getUsername());</span><br><span class="line">        <span class="comment">//把用户名称和用户权限信息放入redis</span></span><br><span class="line">        redisTemplate.opsForValue().set(user.getCurrentUserInfo().getUsername(),user.getPermissionValueList());</span><br><span class="line">        <span class="comment">//返回token</span></span><br><span class="line">        ResponseUtil.out(response, R.ok().data(<span class="string">&quot;token&quot;</span>,token));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3、认证失败调用的方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">unsuccessfulAuthentication</span><span class="params">(HttpServletRequest request, HttpServletResponse response, AuthenticationException failed)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        ResponseUtil.out(response, R.error());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="12、编写授权过滤器"><a href="#12、编写授权过滤器" class="headerlink" title="12、编写授权过滤器"></a>12、编写授权过滤器</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TokenAuthFilter</span> <span class="keyword">extends</span> <span class="title class_">BasicAuthenticationFilter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TokenManager tokenManager;</span><br><span class="line">    <span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TokenAuthFilter</span><span class="params">(AuthenticationManager authenticationManager, RedisTemplate redisTemplate,TokenManager tokenManager)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(authenticationManager);</span><br><span class="line">        <span class="built_in">this</span>.redisTemplate = redisTemplate;</span><br><span class="line">        <span class="built_in">this</span>.tokenManager = tokenManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doFilterInternal</span><span class="params">(HttpServletRequest request, HttpServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        <span class="comment">//获取当前认证成功用户权限信息</span></span><br><span class="line">        <span class="type">UsernamePasswordAuthenticationToken</span> <span class="variable">authRequest</span> <span class="operator">=</span>  getAuthentication(request);</span><br><span class="line">        <span class="comment">//判断如果有权限信息，则放入到权限上下文中</span></span><br><span class="line">        <span class="keyword">if</span>(authRequest != <span class="literal">null</span>) &#123;</span><br><span class="line">            SecurityContextHolder.getContext().setAuthentication(authRequest);</span><br><span class="line">        &#125;</span><br><span class="line">        chain.doFilter(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> UsernamePasswordAuthenticationToken <span class="title function_">getAuthentication</span><span class="params">(HttpServletRequest request)</span> &#123;</span><br><span class="line">        <span class="comment">//从header中获取token</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> request.getHeader(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(token != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">//从token中获取用户名</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> tokenManager.getUserInfoFormToken(token);</span><br><span class="line">            <span class="comment">//从redis中获取对应权限</span></span><br><span class="line">            List&lt;String&gt; permissionValueList = (List&lt;String&gt;) redisTemplate.opsForValue().get(username);</span><br><span class="line">            <span class="comment">//Collection&lt;? extends GrantedAuthority&gt; authorities</span></span><br><span class="line">            Collection&lt;GrantedAuthority&gt; authorities = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;GrantedAuthority&gt;();</span><br><span class="line">            <span class="keyword">for</span> (String permissionValue : permissionValueList) &#123;</span><br><span class="line">                <span class="type">SimpleGrantedAuthority</span> <span class="variable">authority</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleGrantedAuthority</span>(permissionValue);</span><br><span class="line">                authorities.add(authority);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">UsernamePasswordAuthenticationToken</span>(username,token, authorities);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="13、编写核心配置类"><a href="#13、编写核心配置类" class="headerlink" title="13、编写核心配置类"></a>13、编写核心配置类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TokenWebSecurityConfig</span> <span class="keyword">extends</span> <span class="title class_">WebSecurityConfigurerAdapter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TokenManager tokenManager;</span><br><span class="line">    <span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line">    <span class="keyword">private</span> DefaultPasswordEncoder defaultPasswordEncoder;</span><br><span class="line">    <span class="keyword">private</span> UserDetailsService userDetailsService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TokenWebSecurityConfig</span><span class="params">(UserDetailsService userDetailsService,</span></span><br><span class="line"><span class="params">                                  DefaultPasswordEncoder defaultPasswordEncoder,</span></span><br><span class="line"><span class="params">                                  TokenManager tokenManager,</span></span><br><span class="line"><span class="params">                                  RedisTemplate redisTemplate)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userDetailsService = userDetailsService;</span><br><span class="line">        <span class="built_in">this</span>.defaultPasswordEncoder = defaultPasswordEncoder;</span><br><span class="line">        <span class="built_in">this</span>.tokenManager = tokenManager;</span><br><span class="line">        <span class="built_in">this</span>.redisTemplate = redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 配置设置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">//设置退出的地址和 token，redis 操作地址</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        http.exceptionHandling()</span><br><span class="line">                .authenticationEntryPoint(<span class="keyword">new</span> <span class="title class_">UnauthEntryPoint</span>()) <span class="comment">//没有权限访问</span></span><br><span class="line">                .and().csrf().disable()</span><br><span class="line">                .authorizeRequests()</span><br><span class="line">                .anyRequest().authenticated()</span><br><span class="line">                .and().logout().logoutUrl(<span class="string">&quot;/admin/acl/index/logout&quot;</span>)<span class="comment">//退出路径</span></span><br><span class="line">                .addLogoutHandler(<span class="keyword">new</span> <span class="title class_">TokenLogoutHandler</span>(tokenManager,redisTemplate)).and()</span><br><span class="line">                .addFilter(<span class="keyword">new</span> <span class="title class_">TokenLoginFilter</span>(tokenManager,</span><br><span class="line">                        authenticationManager(), redisTemplate))</span><br><span class="line">                .addFilter(<span class="keyword">new</span> <span class="title class_">TokenAuthFilter</span>(authenticationManager(), redisTemplate,</span><br><span class="line">                        tokenManager)).httpBasic();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//调用userDetailsService和密码处理</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        auth.userDetailsService(userDetailsService).passwordEncoder(defaultPasswordEncoder);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//不进行认证的路径，可以直接访问</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(WebSecurity web)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        web.ignoring().antMatchers(<span class="string">&quot;/api/**&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="14、编写UserDetailsServiceImpl"><a href="#14、编写UserDetailsServiceImpl" class="headerlink" title="14、编写UserDetailsServiceImpl"></a>14、编写UserDetailsServiceImpl</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service(&quot;userDetailsService&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDetailsServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserDetailsService</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PermissionService permissionService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> UserDetails <span class="title function_">loadUserByUsername</span><span class="params">(String username)</span> <span class="keyword">throws</span> UsernameNotFoundException &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.selectByUsername(username);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断</span></span><br><span class="line">        <span class="keyword">if</span>(user == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UsernameNotFoundException</span>(<span class="string">&quot;用户不存在！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        com.lxg.security.entity.<span class="type">User</span> <span class="variable">curUser</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">com</span>.lxg.security.entity.User();</span><br><span class="line">        BeanUtils.copyProperties(user,curUser);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//根据用户查询用户权限列表</span></span><br><span class="line">        List&lt;String&gt; permissionValueList = permissionService.selectPermissionByUserId(user.getId());</span><br><span class="line"></span><br><span class="line">        <span class="type">SecurityUser</span> <span class="variable">securityUser</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecurityUser</span>();</span><br><span class="line">        securityUser.setPermissionValueList(permissionValueList);</span><br><span class="line">        <span class="keyword">return</span> securityUser;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="15、service-acl模块代码说明"><a href="#15、service-acl模块代码说明" class="headerlink" title="15、service_acl模块代码说明"></a>15、service_acl模块代码说明</h4><h5 id="1、配置文件"><a href="#1、配置文件" class="headerlink" title="1、配置文件"></a>1、配置文件</h5><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 服务端口</span></span><br><span class="line"><span class="attr">server.port</span>=<span class="string">8009</span></span><br><span class="line"><span class="comment"># 服务名</span></span><br><span class="line"><span class="attr">spring.application.name</span>=<span class="string">service-acl</span></span><br><span class="line"><span class="comment"># mysql数据库连接</span></span><br><span class="line"><span class="attr">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/acldb?serverTimezone=GMT%2B8</span></span><br><span class="line"><span class="attr">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">spring.datasource.password</span>=<span class="string">root</span></span><br><span class="line"><span class="comment"># redis连接</span></span><br><span class="line"><span class="attr">spring.redis.host</span>=<span class="string">192.168.44.132</span></span><br><span class="line"><span class="attr">spring.redis.port</span>=<span class="string">6379</span></span><br><span class="line"><span class="attr">spring.redis.database</span>= <span class="string">0</span></span><br><span class="line"><span class="attr">spring.redis.timeout</span>=<span class="string">1800000</span></span><br><span class="line"><span class="attr">spring.redis.lettuce.pool.max-active</span>=<span class="string">20</span></span><br><span class="line"><span class="attr">spring.redis.lettuce.pool.max-wait</span>=<span class="string">-1</span></span><br><span class="line"><span class="comment">#最大阻塞等待时间(负数表示没限制)</span></span><br><span class="line"><span class="attr">spring.redis.lettuce.pool.max-idle</span>=<span class="string">5</span></span><br><span class="line"><span class="attr">spring.redis.lettuce.pool.min-idle</span>=<span class="string">0</span></span><br><span class="line"><span class="comment">#最小空闲</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#配置mapper xml文件的路径</span></span><br><span class="line"><span class="attr">mybatis-plus.mapper-locations</span>=<span class="string">classpath:com/lxg/aclservice/mapper/xml/*.xml</span></span><br><span class="line"><span class="comment"># nacos服务地址</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.discovery.server-addr</span>=<span class="string">127.0.0.1:8848</span></span><br><span class="line"><span class="comment">#返回json的全局时间格式</span></span><br><span class="line"><span class="attr">spring.jackson.date-format</span>=<span class="string">yyyy-MM-dd HH:mm:ss</span></span><br><span class="line"><span class="attr">spring.jackson.time-zone</span>=<span class="string">GMT+8</span></span><br><span class="line"><span class="comment">#mybatis日志</span></span><br><span class="line"><span class="attr">mybatis-plus.configuration.log-impl</span>=<span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure>
<h4 id="16、编写网关相关代码"><a href="#16、编写网关相关代码" class="headerlink" title="16、编写网关相关代码"></a>16、编写网关相关代码</h4><p>配置类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lxg.gateway.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.CorsConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.UrlBasedCorsConfigurationSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.reactive.CorsConfigurationSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.reactive.CorsWebFilter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.util.pattern.PathPatternParser;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CorsConfig</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//解决跨域</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> CorsWebFilter <span class="title function_">corsWebFilter</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">CorsConfiguration</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CorsConfiguration</span>();</span><br><span class="line">        config.addAllowedMethod(<span class="string">&quot;*&quot;</span>); <span class="comment">//允许任何类型的请求</span></span><br><span class="line">        config.addAllowedOrigin(<span class="string">&quot;*&quot;</span>); <span class="comment">//允许任何域名来源请求</span></span><br><span class="line">        config.addAllowedHeader(<span class="string">&quot;*&quot;</span>); <span class="comment">//允许携带任何请求头</span></span><br><span class="line"></span><br><span class="line">        <span class="type">UrlBasedCorsConfigurationSource</span> <span class="variable">source</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UrlBasedCorsConfigurationSource</span>(<span class="keyword">new</span> <span class="title class_">PathPatternParser</span>());</span><br><span class="line">        source.registerCorsConfiguration(<span class="string">&quot;/**&quot;</span>,config);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CorsWebFilter</span>((CorsConfigurationSource) source);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="五、Spring-Security-原理总结"><a href="#五、Spring-Security-原理总结" class="headerlink" title="五、Spring Security 原理总结"></a>五、Spring Security 原理总结</h2><h3 id="1、-SpringSecurity-的过滤器介绍"><a href="#1、-SpringSecurity-的过滤器介绍" class="headerlink" title="1、 SpringSecurity 的过滤器介绍"></a>1、 SpringSecurity 的过滤器介绍</h3><p>SpringSecurity 采用的是责任链的设计模式，它有一条很长的过滤器链。现在对这条过滤 器链的 15 个过滤器进行说明: </p>
<p>（1） WebAsyncManagerIntegrationFilter：将 Security 上下文与 Spring Web 中用于 处理异步请求映射的 WebAsyncManager 进行集成。</p>
<p>（2） SecurityContextPersistenceFilter：在每次请求处理之前将该请求相关的安全上 下文信息加载到 SecurityContextHolder 中，然后在该次请求处理完成之后，将 SecurityContextHolder 中关于这次请求的信息存储到一个“仓储”中，然后将 SecurityContextHolder 中的信息清除，例如在 Session 中维护一个用户的安全信 息就是这个过滤器处理的。 </p>
<p>（3） HeaderWriterFilter：用于将头信息加入响应中。</p>
<p>（4） CsrfFilter：用于处理跨站请求伪造。</p>
<p>（5）LogoutFilter：用于处理退出登录。 </p>
<p>（6）UsernamePasswordAuthenticationFilter：用于处理基于表单的登录请求，从表单中 获取用户名和密码。默认情况下处理来自 /login 的请求。从表单中获取用户名和密码 时，默认使用的表单 name 值为 username 和 password，这两个值可以通过设置这个 过滤器的 usernameParameter 和 passwordParameter 两个参数的值进行修改。</p>
<p>（7）DefaultLoginPageGeneratingFilter：如果没有配置登录页面，那系统初始化时就会 配置这个过滤器，并且用于在需要进行登录时生成一个登录表单页面。 </p>
<p>（8）BasicAuthenticationFilter：检测和处理 http basic 认证。</p>
<p>（9）RequestCacheAwareFilter：用来处理请求的缓存。 </p>
<p>（10）SecurityContextHolderAwareRequestFilter：主要是包装请求对象 request。 （11）AnonymousAuthenticationFilter：检测 SecurityContextHolder 中是否存在 Authentication 对象，如果不存在为其提供一个匿名 Authentication。</p>
<p>（12）SessionManagementFilter：管理 session 的过滤器 </p>
<p>（13）ExceptionTranslationFilter：处理 AccessDeniedException 和 AuthenticationException 异常。 </p>
<p>（14）FilterSecurityInterceptor：可以看做过滤器链的出口。 </p>
<p>（15）RememberMeAuthenticationFilter：当用户没有登录而直接访问资源时, 从 cookie  里找出用户的信息, 如果 Spring Security 能够识别出用户提供的 remember me cookie,  用户将不必填写用户名和密码, 而是直接登录进入系统，该过滤器默认不开启。</p>
<h3 id="2、SpringSecurity-基本流程"><a href="#2、SpringSecurity-基本流程" class="headerlink" title="2、SpringSecurity 基本流程"></a>2、SpringSecurity 基本流程</h3><p>Spring Security 采取过滤链实现认证与授权，只有当前过滤器通过，才能进入下一个 过滤器：</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658280.png" alt="image-20220913125734145"></p>
<p>绿色部分是认证过滤器，需要我们自己配置，可以配置多个认证过滤器。认证过滤器可以 使用 Spring Security 提供的认证过滤器，也可以自定义过滤器（例如：短信验证）。认 证过滤器要在 configure(HttpSecurity http)方法中配置，没有配置不生效。下面会重 点介绍以下三个过滤器：</p>
<p> UsernamePasswordAuthenticationFilter 过滤器：该过滤器会拦截前端提交的 POST 方式 的登录表单请求，并进行身份认证。</p>
<p> ExceptionTranslationFilter 过滤器：该过滤器不需要我们配置，对于前端提交的请求会 直接放行，捕获后续抛出的异常并进行处理（例如：权限访问限制）。</p>
<p> FilterSecurityInterceptor 过滤器：该过滤器是过滤器链的最后一个过滤器，根据资源 权限配置来判断当前请求是否有权限访问对应的资源。如果访问受限会抛出相关异常，并 由 ExceptionTranslationFilter 过滤器进行捕获和处理。</p>
<h4 id="1、认证流程"><a href="#1、认证流程" class="headerlink" title="1、认证流程"></a>1、认证流程</h4><p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658281.png" alt="image-20220913125642491"></p>
<p>当前端提交的是一个 POST 方式的登录表单请求，就会被该过滤器拦截，并进行身份认 证。该过滤器的 doFilter() 方法实现在其抽象父类</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658282.png" alt="image-20220913151918300"></p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658283.png" alt="image-20220913151940693"></p>
<p><em>*</em> 上述的 第二 过程调用了 UsernamePasswordAuthenticationFilter 的 attemptAuthentication() 方法，源码如下：</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658284.png" alt="image-20220913152007838"></p>
<p>上述的（3）过程创建的 UsernamePasswordAuthenticationToken 是 Authentication 接口的实现类，该类有两个构造器，一个用于封装前端请求传入的未认 证的用户信息，一个用于封装认证成功后的用户信息：</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658285.png" alt="image-20220913152032794"></p>
<p>Authentication 接口的实现类用于存储用户认证信息，查看该接口具体定义</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658286.png" alt="image-20220913152100303"></p>
<p>上述过程中，UsernamePasswordAuthenticationFilter 过滤器的 attemptAuthentication() 方法的（5）过程将未认证的 Authentication 对象传入 ProviderManager 类的 authenticate() 方法进行身份认证。</p>
<p>ProviderManager 是 AuthenticationManager 接口的实现类，该接口是认证相关的核心接 口，也是认证的入口。在实际开发中，我们可能有多种不同的认证方式，例如：用户名+ 密码、邮箱+密码、手机号+验证码等，而这些认证方式的入口始终只有一个，那就是 AuthenticationManager。在该接口的常用实现类 ProviderManager 内部会维护一个 List列表，存放多种认证方式，实际上这是委托者模式 （Delegate）的应用。每种认证方式对应着一个 AuthenticationProvider， AuthenticationManager 根据认证方式的不同（根据传入的 Authentication 类型判断）委托 对应的 AuthenticationProvider 进行用户认证。</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658287.png" alt="image-20220913152152781"></p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658288.png" alt="image-20220913152208257"></p>
<p>上述认证成功之后的（6）过程，调用 CredentialsContainer 接口定义的 eraseCredentials() 方法去除敏感信息。查看 UsernamePasswordAuthenticationToken 实现的 eraseCredentials() 方法，该方 法实现在其父类中</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658289.png" alt="image-20220913152228008"></p>
<p>上述过程就是认证流程的最核心部分，接下来重新回到 UsernamePasswordAuthenticationFilter 过滤器的 doFilter() 方法，查看认证成 功/失败的处理：</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658290.png" alt="image-20220913152250983"></p>
<p>认证成功和认证失败源码：</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658291.png" alt="image-20220913152333708"></p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658292.png" alt="image-20220913152354685"></p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658293.png" alt="image-20220913145515417"></p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658294.png" alt="image-20220913145534482"></p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658295.png" alt="image-20220913150554804"></p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658296.png" alt="image-20220913150646393"></p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658297.png" alt="image-20220913150934156"></p>
<h4 id="2、权限访问流程"><a href="#2、权限访问流程" class="headerlink" title="2、权限访问流程"></a>2、权限访问流程</h4><p>上一个部分通过源码的方式介绍了认证流程，下面介绍权限访问流程，主要是对 ExceptionTranslationFilter 过滤器和 FilterSecurityInterceptor 过滤器进行介绍。</p>
<h5 id="1、-ExceptionTranslationFilter-过滤器"><a href="#1、-ExceptionTranslationFilter-过滤器" class="headerlink" title="1、 ExceptionTranslationFilter 过滤器"></a>1、 ExceptionTranslationFilter 过滤器</h5><p>该过滤器是用于处理异常的，不需要我们配置，对于前端提交的请求会直接放行，捕获后 续抛出的异常并进行处理（例如：权限访问限制）。具体源码如下：</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658298.png" alt="image-20220913152519999"></p>
<h5 id="2、FilterSecurityInterceptor-过滤器"><a href="#2、FilterSecurityInterceptor-过滤器" class="headerlink" title="2、FilterSecurityInterceptor 过滤器"></a>2、FilterSecurityInterceptor 过滤器</h5><p>FilterSecurityInterceptor 是过滤器链的最后一个过滤器，该过滤器是过滤器链 的最后一个过滤器，根据资源权限配置来判断当前请求是否有权限访问对应的资源。如果 访问受限会抛出相关异常，最终所抛出的异常会由前一个过滤器 ExceptionTranslationFilter 进行捕获和处理。具体源码如下：</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658299.png" alt="image-20220913152621123"></p>
<p>需要注意，Spring Security 的过滤器链是配置在 SpringMVC 的核心组件 DispatcherServlet 运行之前。也就是说，请求通过 Spring Security 的所有过滤器， 不意味着能够正常访问资源，该请求还需要通过 SpringMVC 的拦截器链。</p>
<h4 id="3、SpringSecurity-请求间共享认证信息"><a href="#3、SpringSecurity-请求间共享认证信息" class="headerlink" title="3、SpringSecurity 请求间共享认证信息"></a>3、SpringSecurity 请求间共享认证信息</h4><p>一般认证成功后的用户信息是通过 Session 在多个请求之间共享，那么 Spring  Security 中是如何实现将已认证的用户信息对象 Authentication 与 Session 绑定的进行 具体分析.</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658300.png" alt="image-20220913153400110"></p>
<p>在前面讲解认证成功的处理方法 successfulAuthentication() 时，有以下代码：</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658301.png" alt="image-20220913153430491"></p>
<p>查 看 SecurityContext 接 口 及 其 实 现 类 SecurityContextImpl ， 该 类 其 实 就 是 对 Authentication 的封装： </p>
<p> 查 看 SecurityContextHolder 类 ， 该 类 其 实 是 对 ThreadLocal 的 封 装 ， 存 储 SecurityContext 对象:</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658302.png" alt="image-20220913153458169"></p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658303.png" alt="image-20220913153509595"></p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658304.png" alt="image-20220913153520169"></p>
<h5 id="1、-SecurityContextPersistenceFilter-过滤器"><a href="#1、-SecurityContextPersistenceFilter-过滤器" class="headerlink" title="1、 SecurityContextPersistenceFilter 过滤器"></a>1、 SecurityContextPersistenceFilter 过滤器</h5><p>前面提到过，在 UsernamePasswordAuthenticationFilter 过滤器认证成功之 后，会在认证成功的处理方法中将已认证的用户信息对象 Authentication 封装进 SecurityContext，并存入 SecurityContextHolder。</p>
<p> 之后，响应会通过 SecurityContextPersistenceFilter 过滤器，该过滤器的位置 在所有过滤器的最前面，请求到来先进它，响应返回最后一个通过它，所以在该过滤器中 处理已认证的用户信息对象 Authentication 与 Session 绑定。</p>
<p> 认证成功的响应通过 SecurityContextPersistenceFilter 过滤器时，会从 SecurityContextHolder 中取出封装了已认证用户信息对象 Authentication 的 SecurityContext，放进 Session 中。当请求再次到来时，请求首先经过该过滤器，该过滤 器会判断当前请求的 Session 是否存有 SecurityContext 对象，如果有则将该对象取出再次 放入 SecurityContextHolder 中，之后该请求所在的线程获得认证用户信息，后续的资源访 问不需要进行身份认证；当响应再次返回时，该过滤器同样从 SecurityContextHolder 取出 SecurityContext 对象，放入 Session 中。具体源码如下：</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658305.png" alt="image-20220913153614077"></p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221658306.png" alt="image-20220913153625823"></p>
]]></content>
      <categories>
        <category>Spring全家桶</category>
      </categories>
  </entry>
  <entry>
    <title>JDBCTemplate</title>
    <url>/posts/e10c.html</url>
    <content><![CDATA[<p><meta name="referrer" content="no-referrer" /></p>
<h1 id="jdbcTemplate（概念和准备）"><a href="#jdbcTemplate（概念和准备）" class="headerlink" title="jdbcTemplate（概念和准备）"></a>jdbcTemplate（概念和准备）</h1><h2 id="1、什么是JdbcTemplate"><a href="#1、什么是JdbcTemplate" class="headerlink" title="1、什么是JdbcTemplate"></a>1、什么是JdbcTemplate</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">1、Spring框架对JDBC进行封装，使用JdbcTemplate方便实现对数据库的操作</span><br></pre></td></tr></table></figure>
<h2 id="2、准备工作"><a href="#2、准备工作" class="headerlink" title="2、准备工作"></a>2、准备工作</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">1、引入相关依赖</span><br></pre></td></tr></table></figure>
<p><img src="E:\一些笔记\typora图片资源\image-20220523114457976.png" alt="image-20220523114457976"></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">2、在spring配置文件中配置数据库连接池</span><br><span class="line"><span class="comment">&lt;!-- 数据库连接池 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">destroy-method</span>=<span class="string">&quot;close&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://192.168.31.1:3306/bjpowernode&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;623718&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">3、配置JdbcTemplate对象，注入DataSource</span><br><span class="line"> <span class="comment">&lt;!--创建JdbcTemplate对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;jdbcTemplate&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.core.JdbcTemplate&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span>、创建service类，创建dao类，在dao注入jdbcTemplate对象</span><br><span class="line">配置文件：</span><br><span class="line">&lt;!--开始组件扫描--&gt;</span><br><span class="line">    &lt;context:component-scan base-<span class="keyword">package</span>=<span class="string">&quot;com.lxg.spring5&quot;</span>&gt;&lt;/context:component-scan&gt;</span><br><span class="line">    </span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line">    <span class="comment">//注入dao</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BookDao bookDao;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">BookDao</span> &#123;</span><br><span class="line">    <span class="comment">//注入JdbcTemplate</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="3、jdbcTemplate-操作数据库（添加）"><a href="#3、jdbcTemplate-操作数据库（添加）" class="headerlink" title="3、jdbcTemplate 操作数据库（添加）"></a>3、jdbcTemplate 操作数据库（添加）</h2><h3 id="3-1、对应数据库创建出实体类"><a href="#3-1、对应数据库创建出实体类" class="headerlink" title="3.1、对应数据库创建出实体类"></a>3.1、对应数据库创建出实体类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String useId;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="keyword">private</span> String ustatus;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUseId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> useId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUseId</span><span class="params">(String useId)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.useId = useId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUserName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserName</span><span class="params">(String userName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userName = userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUstatus</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ustatus;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUstatus</span><span class="params">(String ustatus)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.ustatus = ustatus;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-2、编写service和dao"><a href="#3-2、编写service和dao" class="headerlink" title="3.2、编写service和dao"></a>3.2、编写service和dao</h3><p>1、在dao进行数据库添加操作</p>
<p>2、调用JdbcTemplate对象里面的update方法实现添加操作</p>
<p><img src="typora图片资源/image-20220523144352838.png" alt="image-20220523144352838"></p>
<ul>
<li>有两个参数</li>
<li>第一个参数：sql语句</li>
<li>第二个参数：可变参数，设置sql语句值</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">BookDao</span> &#123;</span><br><span class="line">    <span class="comment">//注入JdbcTemplate</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(Book book)</span> &#123;</span><br><span class="line">        <span class="comment">//1、创建sql语句</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into t_book values(?,?,?)&quot;</span>;</span><br><span class="line">        <span class="comment">//2、调用方法实现</span></span><br><span class="line">        Object[] args = &#123;book.getBookId(), book.getBookName(),book.getBookAuthor()&#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">update</span> <span class="operator">=</span> jdbcTemplate.update(sql, args);</span><br><span class="line">        System.out.println(<span class="string">&quot;添加了&quot;</span>+update+<span class="string">&quot;条数据&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>3、测试类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testJdbcTemplate</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;bean1.xml&quot;</span>);</span><br><span class="line">    <span class="type">BookService</span> <span class="variable">bookService</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;bookService&quot;</span>, BookService.class);</span><br><span class="line">    <span class="type">Book</span> <span class="variable">book</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Book</span>();</span><br><span class="line">    book.setBookId(<span class="string">&quot;6&quot;</span>);</span><br><span class="line">    book.setBookName(<span class="string">&quot;Spring5&quot;</span>);</span><br><span class="line">    book.setBookAuthor(<span class="string">&quot;lxg&quot;</span>);</span><br><span class="line">    bookService.addBook(book);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="typora图片资源/image-20220523145827583.png" alt="image-20220523145827583"></p>
<h2 id="4、jdbcTemplate操作数据库（修改和删除）"><a href="#4、jdbcTemplate操作数据库（修改和删除）" class="headerlink" title="4、jdbcTemplate操作数据库（修改和删除）"></a>4、jdbcTemplate操作数据库（修改和删除）</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">bookupdate</span><span class="params">(Book book)</span> &#123;</span><br><span class="line">    String sql= <span class="string">&quot;update t_book set bookName=?,bookAuthor=? where bookId=?&quot;</span>;</span><br><span class="line">    Object[] args = &#123;book.getBookName(),book.getBookAuthor(),book.getBookId()&#125;;</span><br><span class="line">    <span class="type">int</span> <span class="variable">update</span> <span class="operator">=</span> jdbcTemplate.update(sql, args);</span><br><span class="line">    System.out.println(<span class="string">&quot;更新了&quot;</span>+update+<span class="string">&quot;条数据&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">bookdelete</span><span class="params">(String id)</span> &#123;</span><br><span class="line">    String sql= <span class="string">&quot;delete from t_book where bookId=?&quot;</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">update</span> <span class="operator">=</span> jdbcTemplate.update(sql, id);</span><br><span class="line">    System.out.println(<span class="string">&quot;删除了&quot;</span>+update+<span class="string">&quot;条数据&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>测试：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">  <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testJdbcTemplate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;bean1.xml&quot;</span>);</span><br><span class="line">        <span class="type">BookService</span> <span class="variable">bookService</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;bookService&quot;</span>, BookService.class);</span><br><span class="line">        <span class="comment">//添加</span></span><br><span class="line"><span class="comment">//        Book book = new Book();</span></span><br><span class="line"><span class="comment">//        book.setBookId(&quot;6&quot;);</span></span><br><span class="line"><span class="comment">//        book.setBookName(&quot;Spring5&quot;);</span></span><br><span class="line"><span class="comment">//        book.setBookAuthor(&quot;lxg&quot;);</span></span><br><span class="line"><span class="comment">//        bookService.addBook(book);</span></span><br><span class="line">        <span class="comment">//修改</span></span><br><span class="line"><span class="comment">//        Book book1 = new Book();</span></span><br><span class="line"><span class="comment">//        book1.setBookId(&quot;5&quot;);</span></span><br><span class="line"><span class="comment">//        book1.setBookName(&quot;web&quot;);</span></span><br><span class="line"><span class="comment">//        book1.setBookAuthor(&quot;lxg&quot;);</span></span><br><span class="line"><span class="comment">//        bookService.updateBook(book1);</span></span><br><span class="line">        <span class="comment">//删除</span></span><br><span class="line">       bookService.deleteBook(<span class="string">&quot;5&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h2 id="5、jdbcTemplate操作数据库（查询）"><a href="#5、jdbcTemplate操作数据库（查询）" class="headerlink" title="5、jdbcTemplate操作数据库（查询）"></a>5、jdbcTemplate操作数据库（查询）</h2><h3 id="5-1、查询返回某个值"><a href="#5-1、查询返回某个值" class="headerlink" title="5.1、查询返回某个值"></a>5.1、查询返回某个值</h3><p>1、查询表里面有多少条记录，返回是某个值</p>
<p>2、使用JdbcTemplate实现查询返回某个值</p>
<p><img src="typora图片资源/image-20220523151501597.png" alt="image-20220523151501597"></p>
<ul>
<li>两个参数</li>
<li>第一个参数，sql语句</li>
<li>第二个参数，返回类型Class</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//查询表记录数</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">findCount</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select count(*) from t_book&quot;</span>;</span><br><span class="line">    Integer count= jdbcTemplate.queryForObject(sql, Integer.class);</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>3、测试</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//查询表中记录数</span></span><br><span class="line"><span class="type">int</span> count= bookService.getCount();</span><br><span class="line">System.out.println(count);</span><br></pre></td></tr></table></figure>
<h3 id="5-2、查询返回对象"><a href="#5-2、查询返回对象" class="headerlink" title="5.2、查询返回对象"></a>5.2、查询返回对象</h3><p>1、场景：查询图书详情</p>
<p>2、JdbcTemplate实现查询返回对象</p>
<p><img src="typora图片资源/image-20220523182713260.png" alt="image-20220523182713260"></p>
<ul>
<li>有三个参数</li>
<li>第一个参数，sql语句</li>
<li>第二个参数：RowMapper，是接口，针对返回不同类型数据，使用这个接口里面的实现类完成数据封装</li>
<li>第三个参数：sql语句值</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//查询返回对象</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Book <span class="title function_">findBook</span><span class="params">(String id)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from t_book where bookId=?&quot;</span>;</span><br><span class="line">    <span class="type">Book</span> <span class="variable">book</span> <span class="operator">=</span> jdbcTemplate.queryForObject(sql,<span class="keyword">new</span> <span class="title class_">BeanPropertyRowMapper</span>&lt;Book&gt;(Book.class),id);</span><br><span class="line">    <span class="keyword">return</span> book;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="5-3、查询返回集合"><a href="#5-3、查询返回集合" class="headerlink" title="5.3、查询返回集合"></a>5.3、查询返回集合</h3><p>1、场景：查询图书列表分页…</p>
<p>2、调用jdbcTemplate方法实现查询返回集合</p>
<p><img src="typora图片资源/image-20220523185417412.png" alt="image-20220523185417412"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;Book&gt; <span class="title function_">findBooks</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from t_book&quot;</span>;</span><br><span class="line">    List&lt;Book&gt; list = jdbcTemplate.query(sql,<span class="keyword">new</span> <span class="title class_">BeanPropertyRowMapper</span>&lt;Book&gt;(Book.class));</span><br><span class="line">    <span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="6、jdbcTemplate操作数据库（批量操作）"><a href="#6、jdbcTemplate操作数据库（批量操作）" class="headerlink" title="6、jdbcTemplate操作数据库（批量操作）"></a>6、jdbcTemplate操作数据库（批量操作）</h2><p>1、批量操作：操作表里面多条记录</p>
<h3 id="6-1、实现批量添加操作"><a href="#6-1、实现批量添加操作" class="headerlink" title="6.1、实现批量添加操作"></a>6.1、实现批量添加操作</h3><p><img src="typora图片资源/image-20220523190028816.png" alt="image-20220523190028816"></p>
<ul>
<li>有两个参数</li>
<li>第一个参数：sql语句</li>
<li>第二个参数：List集合，添加多条记录数据</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//批量添加</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addBatch</span><span class="params">(List&lt;Object[]&gt; batchArgs)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into t_book values(?,?,?)&quot;</span>;</span><br><span class="line">    <span class="type">int</span>[] ints =  jdbcTemplate.batchUpdate(sql,batchArgs);</span><br><span class="line">    System.out.println(<span class="string">&quot;添加了&quot;</span>+ints.length+<span class="string">&quot;条数据&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//批量添加</span></span><br><span class="line">List&lt;Object[]&gt; batchArgs = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">Object[] args1 = &#123;<span class="string">&quot;7&quot;</span>,<span class="string">&quot;Spring5&quot;</span>,<span class="string">&quot;lxg&quot;</span>&#125;;</span><br><span class="line">Object[] args2 = &#123;<span class="string">&quot;8&quot;</span>,<span class="string">&quot;Spring5&quot;</span>,<span class="string">&quot;lxg&quot;</span>&#125;;</span><br><span class="line">Object[] args3 = &#123;<span class="string">&quot;9&quot;</span>,<span class="string">&quot;Spring5&quot;</span>,<span class="string">&quot;lxg&quot;</span>&#125;;</span><br><span class="line">batchArgs.add(args1);</span><br><span class="line">batchArgs.add(args2);</span><br><span class="line">batchArgs.add(args3);</span><br><span class="line">bookService.addBooks(batchArgs);</span><br></pre></td></tr></table></figure>
<h3 id="6-2、实现批量修改操作"><a href="#6-2、实现批量修改操作" class="headerlink" title="6.2、实现批量修改操作"></a>6.2、实现批量修改操作</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//批量更新</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateBatch</span><span class="params">(List&lt;Object[]&gt; batchArgs)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update t_book set bookName=?,bookAuthor=? where bookId=?&quot;</span>;</span><br><span class="line">    <span class="type">int</span>[] ints =  jdbcTemplate.batchUpdate(sql,batchArgs);</span><br><span class="line">    System.out.println(<span class="string">&quot;更新了&quot;</span>+ints.length+<span class="string">&quot;条数据&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//批量更新</span></span><br><span class="line">List&lt;Object[]&gt; batchArgs1= <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">Object[] args1 = &#123;<span class="string">&quot;java&quot;</span>,<span class="string">&quot;lxg&quot;</span>,<span class="string">&quot;7&quot;</span>&#125;;</span><br><span class="line">Object[] args2 = &#123;<span class="string">&quot;java&quot;</span>,<span class="string">&quot;lxg&quot;</span>,<span class="string">&quot;8&quot;</span>&#125;;</span><br><span class="line">Object[] args3 = &#123;<span class="string">&quot;java&quot;</span>,<span class="string">&quot;lxg&quot;</span>,<span class="string">&quot;9&quot;</span>&#125;;</span><br><span class="line">batchArgs1.add(args1);</span><br><span class="line">batchArgs1.add(args2);</span><br><span class="line">batchArgs1.add(args3);</span><br><span class="line">bookService.updateBooks(batchArgs1);</span><br></pre></td></tr></table></figure>
<h3 id="6-3、实现批量删除操作"><a href="#6-3、实现批量删除操作" class="headerlink" title="6.3、实现批量删除操作"></a>6.3、实现批量删除操作</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//批量删除</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteBatch</span><span class="params">(List&lt;Object[]&gt; batchArgs)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;delete from t_book where bookId=?&quot;</span>;</span><br><span class="line">    <span class="type">int</span>[] ints =  jdbcTemplate.batchUpdate(sql,batchArgs);</span><br><span class="line">    System.out.println(<span class="string">&quot;删除了&quot;</span>+ints.length+<span class="string">&quot;条数据&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//批量删除</span></span><br><span class="line">List&lt;Object[]&gt; ids = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">Object[] id1 = &#123;<span class="string">&quot;7&quot;</span>&#125;;</span><br><span class="line">Object[] id2 = &#123;<span class="string">&quot;8&quot;</span>&#125;;</span><br><span class="line">Object[] id3 = &#123;<span class="string">&quot;9&quot;</span>&#125;;</span><br><span class="line">ids.add(id1);</span><br><span class="line">ids.add(id2);</span><br><span class="line">ids.add(id3);</span><br><span class="line">bookService.deleteBooks(ids);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>数据库</category>
      </categories>
  </entry>
  <entry>
    <title>MyBatis</title>
    <url>/posts/f1de.html</url>
    <content><![CDATA[<p><meta name="referrer" content="no-referrer" /></p>
<h1 id="Mybatis简介"><a href="#Mybatis简介" class="headerlink" title="Mybatis简介"></a>Mybatis简介</h1><h2 id="MyBatis历史"><a href="#MyBatis历史" class="headerlink" title="MyBatis历史"></a>MyBatis历史</h2><ul>
<li>MyBatis最初是Apache的一个开源项目iBatis, 2010年6月这个项目由Apache Software Foundation迁移到了Google Code。随着开发团队转投Google Code旗下，iBatis3.x正式更名为MyBatis。代码于2013年11月迁移到Github</li>
<li>iBatis一词来源于“internet”和“abatis”的组合，是一个基于Java的持久层框架。iBatis提供的持久层框架包括SQL Maps和Data Access Objects（DAO）<h2 id="MyBatis特性"><a href="#MyBatis特性" class="headerlink" title="MyBatis特性"></a>MyBatis特性</h2></li>
</ul>
<ol>
<li>MyBatis 是支持定制化 SQL、存储过程以及高级映射的优秀的持久层框架</li>
<li>MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集</li>
<li>MyBatis可以使用简单的XML或注解用于配置和原始映射，将接口和Java的POJO（Plain Old Java Objects，普通的Java对象）映射成数据库中的记录</li>
<li>MyBatis 是一个 半自动的ORM（Object Relation Mapping）框架<h2 id="MyBatis下载"><a href="#MyBatis下载" class="headerlink" title="MyBatis下载"></a>MyBatis下载</h2></li>
</ol>
<ul>
<li><a href="https://github.com/mybatis/mybatis-3">MyBatis下载地址</a></li>
<li><img src="Resources/MyBatis下载.png" alt=""><h2 id="和其它持久化层技术对比"><a href="#和其它持久化层技术对比" class="headerlink" title="和其它持久化层技术对比"></a>和其它持久化层技术对比</h2></li>
<li>JDBC  <ul>
<li>SQL 夹杂在Java代码中耦合度高，导致硬编码内伤  </li>
<li>维护不易且实际开发需求中 SQL 有变化，频繁修改的情况多见  </li>
<li>代码冗长，开发效率低</li>
</ul>
</li>
<li>Hibernate 和 JPA<ul>
<li>操作简便，开发效率高  </li>
<li>程序中的长难复杂 SQL 需要绕过框架  </li>
<li>内部自动生产的 SQL，不容易做特殊优化  </li>
<li>基于全映射的全自动框架，大量字段的 POJO 进行部分映射时比较困难。  </li>
<li>反射操作太多，导致数据库性能下降</li>
</ul>
</li>
<li>MyBatis<ul>
<li>轻量级，性能出色  </li>
<li>SQL 和 Java 编码分开，功能边界清晰。Java代码专注业务、SQL语句专注数据  </li>
<li>开发效率稍逊于HIbernate，但是完全能够接受<h1 id="搭建MyBatis"><a href="#搭建MyBatis" class="headerlink" title="搭建MyBatis"></a>搭建MyBatis</h1><h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2></li>
</ul>
</li>
<li>IDE：idea 2019.2  </li>
<li>构建工具：maven 3.5.4  </li>
<li>MySQL版本：MySQL 5.7  </li>
<li>MyBatis版本：MyBatis 3.5.7<h2 id="创建maven工程"><a href="#创建maven工程" class="headerlink" title="创建maven工程"></a>创建maven工程</h2></li>
<li>打包方式：jar</li>
<li>引入依赖  <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- Mybatis核心 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- junit测试 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- MySQL驱动 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="创建MyBatis的核心配置文件"><a href="#创建MyBatis的核心配置文件" class="headerlink" title="创建MyBatis的核心配置文件"></a>创建MyBatis的核心配置文件</h2><blockquote>
<p>习惯上命名为<code>mybatis-config.xml</code>，这个文件名仅仅只是建议，并非强制要求。将来整合Spring之后，这个配置文件可以省略，所以大家操作时可以直接复制、粘贴。<br>核心配置文件主要用于配置连接数据库的环境以及MyBatis的全局配置信息<br>核心配置文件存放的位置是src/main/resources目录下</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span>  </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span>  </span></span><br><span class="line"><span class="meta"><span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span>  </span></span><br><span class="line"><span class="meta"><span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span>  </span><br><span class="line">	<span class="comment">&lt;!--设置连接数据库的环境--&gt;</span>  </span><br><span class="line">	<span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span>  </span><br><span class="line">		<span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span>  </span><br><span class="line">			<span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span>  </span><br><span class="line">			<span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span>  </span><br><span class="line">				<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span>  </span><br><span class="line">				<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/MyBatis&quot;</span>/&gt;</span>  </span><br><span class="line">				<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span>  </span><br><span class="line">				<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span>  </span><br><span class="line">			<span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span>  </span><br><span class="line">		<span class="tag">&lt;/<span class="name">environment</span>&gt;</span>  </span><br><span class="line">	<span class="tag">&lt;/<span class="name">environments</span>&gt;</span>  </span><br><span class="line">	<span class="comment">&lt;!--引入映射文件--&gt;</span>  </span><br><span class="line">	<span class="tag">&lt;<span class="name">mappers</span>&gt;</span>  </span><br><span class="line">		<span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;mappers/UserMapper.xml&quot;</span>/&gt;</span>  </span><br><span class="line">	<span class="tag">&lt;/<span class="name">mappers</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="创建mapper接口"><a href="#创建mapper接口" class="headerlink" title="创建mapper接口"></a>创建mapper接口</h2><p>MyBatis中的mapper接口相当于以前的dao。但是区别在于，mapper仅仅是接口，我们不需要提供实现类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.mybatis.mapper;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;  </span><br><span class="line">	<span class="comment">/**  </span></span><br><span class="line"><span class="comment">	* 添加用户信息  </span></span><br><span class="line"><span class="comment">	*/</span>  </span><br><span class="line">	<span class="type">int</span> <span class="title function_">insertUser</span><span class="params">()</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="创建MyBatis的映射文件"><a href="#创建MyBatis的映射文件" class="headerlink" title="创建MyBatis的映射文件"></a>创建MyBatis的映射文件</h2></blockquote>
</li>
<li>相关概念：ORM（Object Relationship Mapping）对象关系映射。  <ul>
<li>对象：Java的实体类对象  </li>
<li>关系：关系型数据库  </li>
<li>映射：二者之间的对应关系</li>
</ul>
</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>Java概念</th>
<th>数据库概念</th>
</tr>
</thead>
<tbody>
<tr>
<td>类</td>
<td>表</td>
</tr>
<tr>
<td>属性</td>
<td>字段/列</td>
</tr>
<tr>
<td>对象</td>
<td>记录/行</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li>映射文件的命名规则<ul>
<li>表所对应的实体类的类名+Mapper.xml</li>
<li>例如：表t_user，映射的实体类为User，所对应的映射文件为UserMapper.xml </li>
<li>因此一个映射文件对应一个实体类，对应一张表的操作</li>
<li>MyBatis映射文件用于编写SQL，访问以及操作表中的数据</li>
<li>MyBatis映射文件存放的位置是src/main/resources/mappers目录下</li>
</ul>
</li>
<li>MyBatis中可以面向接口操作数据，要保证两个一致<ul>
<li>mapper接口的全类名和映射文件的命名空间（namespace）保持一致</li>
<li>mapper接口中方法的方法名和映射文件中编写SQL的标签的id属性保持一致<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span>  </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span>  </span></span><br><span class="line"><span class="meta"><span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span>  </span></span><br><span class="line"><span class="meta"><span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.atguigu.mybatis.mapper.UserMapper&quot;</span>&gt;</span>  </span><br><span class="line">	<span class="comment">&lt;!--int insertUser();--&gt;</span>  </span><br><span class="line">	<span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertUser&quot;</span>&gt;</span>  </span><br><span class="line">		insert into t_user values(null,&#x27;张三&#x27;,&#x27;123&#x27;,23,&#x27;女&#x27;)  </span><br><span class="line">	<span class="tag">&lt;/<span class="name">insert</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="通过junit测试功能"><a href="#通过junit测试功能" class="headerlink" title="通过junit测试功能"></a>通过junit测试功能</h2></li>
</ul>
</li>
<li>SqlSession：代表Java程序和数据库之间的会话。（HttpSession是Java程序和浏览器之间的会话）</li>
<li>SqlSessionFactory：是“生产”SqlSession的“工厂”</li>
<li>工厂模式：如果创建某一个对象，使用的过程基本固定，那么我们就可以把创建这个对象的相关代码封装到一个“工厂类”中，以后都使用这个工厂类来“生产”我们需要的对象<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInsertUser</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//读取MyBatis的核心配置文件</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">        <span class="comment">//获取SqlSessionFactoryBuilder对象</span></span><br><span class="line">        <span class="type">SqlSessionFactoryBuilder</span> <span class="variable">sqlSessionFactoryBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>();</span><br><span class="line">        <span class="comment">//通过核心配置文件所对应的字节输入流创建工厂类SqlSessionFactory，生产SqlSession对象</span></span><br><span class="line">        <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> sqlSessionFactoryBuilder.build(is);</span><br><span class="line">        <span class="comment">//获取sqlSession，此时通过SqlSession对象所操作的sql都必须手动提交或回滚事务</span></span><br><span class="line">        <span class="comment">//SqlSession sqlSession = sqlSessionFactory.openSession();</span></span><br><span class="line">	    <span class="comment">//创建SqlSession对象，此时通过SqlSession对象所操作的sql都会自动提交  </span></span><br><span class="line">		<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//通过代理模式创建UserMapper接口的代理实现类对象</span></span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        <span class="comment">//调用UserMapper接口中的方法，就可以根据UserMapper的全类名匹配元素文件，通过调用的方法名匹配映射文件中的SQL标签，并执行标签中的SQL语句</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.insertUser();</span><br><span class="line">        <span class="comment">//提交事务</span></span><br><span class="line">        <span class="comment">//sqlSession.commit();</span></span><br><span class="line">        System.out.println(<span class="string">&quot;result:&quot;</span> + result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>此时需要手动提交事务，如果要自动提交事务，则在获取sqlSession对象时，使用<code>SqlSession sqlSession = sqlSessionFactory.openSession(true);</code>，传入一个Boolean类型的参数，值为true，这样就可以自动提交<h2 id="加入log4j日志功能"><a href="#加入log4j日志功能" class="headerlink" title="加入log4j日志功能"></a>加入log4j日志功能</h2></li>
</ul>
<ol>
<li>加入依赖 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- log4j日志 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>加入log4j的配置文件<ul>
<li>log4j的配置文件名为log4j.xml，存放的位置是src/main/resources目录下</li>
<li>日志的级别：FATAL(致命)&gt;ERROR(错误)&gt;WARN(警告)&gt;INFO(信息)&gt;DEBUG(调试) 从左到右打印的内容越来越详细<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">log4j</span>:configuration <span class="keyword">SYSTEM</span> <span class="string">&quot;log4j.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">log4j:configuration</span> <span class="attr">xmlns:log4j</span>=<span class="string">&quot;http://jakarta.apache.org/log4j/&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;STDOUT&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.log4j.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;Encoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.log4j.PatternLayout&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;ConversionPattern&quot;</span> <span class="attr">value</span>=<span class="string">&quot;%-5p %d&#123;MM-dd HH:mm:ss,SSS&#125; %m (%F:%L) \n&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;java.sql&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">level</span> <span class="attr">value</span>=<span class="string">&quot;debug&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;org.apache.ibatis&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">level</span> <span class="attr">value</span>=<span class="string">&quot;info&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">level</span> <span class="attr">value</span>=<span class="string">&quot;debug&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;STDOUT&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">log4j:configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="核心配置文件详解"><a href="#核心配置文件详解" class="headerlink" title="核心配置文件详解"></a>核心配置文件详解</h1><blockquote>
<p>核心配置文件中的标签必须按照固定的顺序(有的标签可以不写，但顺序一定不能乱)：<br>properties、settings、typeAliases、typeHandlers、objectFactory、objectWrapperFactory、reflectorFactory、plugins、environments、databaseIdProvider、mappers</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//MyBatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://MyBatis.org/dtd/MyBatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--引入properties文件，此时就可以$&#123;属性名&#125;的方式访问属性值--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;jdbc.properties&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--将表中字段的下划线自动转换为驼峰--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;mapUnderscoreToCamelCase&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--开启延迟加载--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;lazyLoadingEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        typeAlias：设置某个具体的类型的别名</span></span><br><span class="line"><span class="comment">        属性：</span></span><br><span class="line"><span class="comment">        type：需要设置别名的类型的全类名</span></span><br><span class="line"><span class="comment">        alias：设置此类型的别名，且别名不区分大小写。若不设置此属性，该类型拥有默认的别名，即类名</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;typeAlias type=&quot;com.atguigu.mybatis.bean.User&quot;&gt;&lt;/typeAlias&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;typeAlias type=&quot;com.atguigu.mybatis.bean.User&quot; alias=&quot;user&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;/typeAlias&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--以包为单位，设置改包下所有的类型都拥有默认的别名，即类名且不区分大小写--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.atguigu.mybatis.bean&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    environments：设置多个连接数据库的环境</span></span><br><span class="line"><span class="comment">    属性：</span></span><br><span class="line"><span class="comment">	    default：设置默认使用的环境的id</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;mysql_test&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        environment：设置具体的连接数据库的环境信息</span></span><br><span class="line"><span class="comment">        属性：</span></span><br><span class="line"><span class="comment">	        id：设置环境的唯一标识，可通过environments标签中的default设置某一个环境的id，表示默认使用的环境</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;mysql_test&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            transactionManager：设置事务管理方式</span></span><br><span class="line"><span class="comment">            属性：</span></span><br><span class="line"><span class="comment">	            type：设置事务管理方式，type=&quot;JDBC|MANAGED&quot;</span></span><br><span class="line"><span class="comment">	            type=&quot;JDBC&quot;：设置当前环境的事务管理都必须手动处理</span></span><br><span class="line"><span class="comment">	            type=&quot;MANAGED&quot;：设置事务被管理，例如spring中的AOP</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            dataSource：设置数据源</span></span><br><span class="line"><span class="comment">            属性：</span></span><br><span class="line"><span class="comment">	            type：设置数据源的类型，type=&quot;POOLED|UNPOOLED|JNDI&quot;</span></span><br><span class="line"><span class="comment">	            type=&quot;POOLED&quot;：使用数据库连接池，即会将创建的连接进行缓存，下次使用可以从缓存中直接获取，不需要重新创建</span></span><br><span class="line"><span class="comment">	            type=&quot;UNPOOLED&quot;：不使用数据库连接池，即每次使用连接都需要重新创建</span></span><br><span class="line"><span class="comment">	            type=&quot;JNDI&quot;：调用上下文中的数据源</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--设置驱动类的全类名--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--设置连接数据库的连接地址--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--设置连接数据库的用户名--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--设置连接数据库的密码--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--引入映射文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;mapper resource=&quot;UserMapper.xml&quot;/&gt; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        以包为单位，将包下所有的映射文件引入核心配置文件</span></span><br><span class="line"><span class="comment">        注意：</span></span><br><span class="line"><span class="comment">			1. 此方式必须保证mapper接口和mapper映射文件必须在相同的包下</span></span><br><span class="line"><span class="comment">			2. mapper接口要和mapper映射文件的名字一致</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.atguigu.mybatis.mapper&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote>
</li>
</ul>
</li>
</ol>
<ul>
<li><img src="Resources/mapper接口和mapper映射文件在同一包下.png" alt=""><h1 id="默认的类型别名"><a href="#默认的类型别名" class="headerlink" title="默认的类型别名"></a>默认的类型别名</h1><img src="Resources/默认的类型别名1.png" alt=""><br><img src="Resources/默认的类型别名2.png" alt=""><h1 id="MyBatis的增删改查"><a href="#MyBatis的增删改查" class="headerlink" title="MyBatis的增删改查"></a>MyBatis的增删改查</h1></li>
</ul>
<ol>
<li>添加 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--int insertUser();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertUser&quot;</span>&gt;</span></span><br><span class="line">	insert into t_user values(null,&#x27;admin&#x27;,&#x27;123456&#x27;,23,&#x27;男&#x27;,&#x27;12345@qq.com&#x27;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>删除 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--int deleteUser();--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteUser&quot;</span>&gt;</span></span><br><span class="line">       delete from t_user where id = 6</span><br><span class="line">   <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>修改 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--int updateUser();--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser&quot;</span>&gt;</span></span><br><span class="line">       update t_user set username = &#x27;张三&#x27; where id = 5</span><br><span class="line">   <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>查询一个实体类对象 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">  <span class="comment">&lt;!--User getUserById();--&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.atguigu.mybatis.bean.User&quot;</span>&gt;</span>  </span><br><span class="line">	select * from t_user where id = 2  </span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>查询集合 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--List&lt;User&gt; getUserList();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.atguigu.mybatis.bean.User&quot;</span>&gt;</span></span><br><span class="line">	select * from t_user</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<ul>
<li>注意：<ol>
<li>查询的标签select必须设置属性resultType或resultMap，用于设置实体类和数据库表的映射关系  <ul>
<li>resultType：自动映射，用于属性名和表中字段名一致的情况  </li>
<li>resultMap：自定义映射，用于一对多或多对一或字段名和属性名不一致的情况  </li>
</ul>
</li>
<li>当查询的数据为多条时，不能使用实体类作为返回值，只能使用集合，否则会抛出异常TooManyResultsException；但是若查询的数据只有一条，可以使用实体类或集合作为返回值<h1 id="MyBatis获取参数值的两种方式（重点）"><a href="#MyBatis获取参数值的两种方式（重点）" class="headerlink" title="MyBatis获取参数值的两种方式（重点）"></a>MyBatis获取参数值的两种方式（重点）</h1></li>
</ol>
</li>
<li>MyBatis获取参数值的两种方式：${}和#{}  </li>
<li>${}的本质就是字符串拼接，#{}的本质就是占位符赋值  </li>
<li>${}使用字符串拼接的方式拼接sql，若为字符串类型或日期类型的字段进行赋值时，需要手动加单引号；但是#{}使用占位符赋值的方式拼接sql，此时为字符串类型或日期类型的字段进行赋值时，可以自动添加单引号<h2 id="单个字面量类型的参数"><a href="#单个字面量类型的参数" class="headerlink" title="单个字面量类型的参数"></a>单个字面量类型的参数</h2></li>
<li>若mapper接口中的方法参数为单个的字面量类型，此时可以使用${}和#{}以任意的名称（最好见名识意）获取参数的值，注意${}需要手动加单引号<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--User getUserByUsername(String username);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserByUsername&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">	select * from t_user where username = #&#123;username&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--User getUserByUsername(String username);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserByUsername&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span>  </span><br><span class="line">	select * from t_user where username = &#x27;$&#123;username&#125;&#x27;  </span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="多个字面量类型的参数"><a href="#多个字面量类型的参数" class="headerlink" title="多个字面量类型的参数"></a>多个字面量类型的参数</h2></li>
<li>若mapper接口中的方法参数为多个时，此时MyBatis会自动将这些参数放在一个map集合中<ol>
<li>以arg0,arg1…为键，以参数为值；</li>
<li>以param1,param2…为键，以参数为值；</li>
</ol>
</li>
<li>因此只需要通过${}和#{}访问map集合的键就可以获取相对应的值，注意${}需要手动加单引号。</li>
<li>使用arg或者param都行，要注意的是，arg是从arg0开始的，param是从param1开始的<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--User checkLogin(String username,String password);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;checkLogin&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span>  </span><br><span class="line">	select * from t_user where username = #&#123;arg0&#125; and password = #&#123;arg1&#125;  </span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--User checkLogin(String username,String password);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;checkLogin&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">	select * from t_user where username = &#x27;$&#123;param1&#125;&#x27; and password = &#x27;$&#123;param2&#125;&#x27;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="map集合类型的参数"><a href="#map集合类型的参数" class="headerlink" title="map集合类型的参数"></a>map集合类型的参数</h2></li>
<li>若mapper接口中的方法需要的参数为多个时，此时可以手动创建map集合，将这些数据放在map中只需要通过${}和#{}访问map集合的键就可以获取相对应的值，注意${}需要手动加单引号<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--User checkLoginByMap(Map&lt;String,Object&gt; map);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;checkLoginByMap&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">	select * from t_user where username = #&#123;username&#125; and password = #&#123;password&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">checkLoginByMap</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtils.getSqlSession();</span><br><span class="line">	<span class="type">ParameterMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(ParameterMapper.class);</span><br><span class="line">	Map&lt;String,Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">	map.put(<span class="string">&quot;usermane&quot;</span>,<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">	map.put(<span class="string">&quot;password&quot;</span>,<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">	<span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> mapper.checkLoginByMap(map);</span><br><span class="line">	System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="实体类类型的参数"><a href="#实体类类型的参数" class="headerlink" title="实体类类型的参数"></a>实体类类型的参数</h2></li>
<li>若mapper接口中的方法参数为实体类对象时此时可以使用${}和#{}，通过访问实体类对象中的属性名获取属性值，注意${}需要手动加单引号<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--int insertUser(User user);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertUser&quot;</span>&gt;</span></span><br><span class="line">	insert into t_user values(null,#&#123;username&#125;,#&#123;password&#125;,#&#123;age&#125;,#&#123;sex&#125;,#&#123;email&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insertUser</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtils.getSqlSession();</span><br><span class="line">	<span class="type">ParameterMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(ParameterMapper.class);</span><br><span class="line">	<span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="literal">null</span>,<span class="string">&quot;Tom&quot;</span>,<span class="string">&quot;123456&quot;</span>,<span class="number">12</span>,<span class="string">&quot;男&quot;</span>,<span class="string">&quot;123@321.com&quot;</span>);</span><br><span class="line">	mapper.insertUser(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="使用-Param标识参数"><a href="#使用-Param标识参数" class="headerlink" title="使用@Param标识参数"></a>使用@Param标识参数</h2></li>
<li>可以通过@Param注解标识mapper接口中的方法参数，此时，会将这些参数放在map集合中 <ol>
<li>以@Param注解的value属性值为键，以参数为值；</li>
<li>以param1,param2…为键，以参数为值；</li>
</ol>
</li>
<li>只需要通过${}和#{}访问map集合的键就可以获取相对应的值，注意${}需要手动加单引号<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--User CheckLoginByParam(@Param(&quot;username&quot;) String username, @Param(&quot;password&quot;) String password);--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;CheckLoginByParam&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        select * from t_user where username = #&#123;username&#125; and password = #&#123;password&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">checkLoginByParam</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtils.getSqlSession();</span><br><span class="line">	<span class="type">ParameterMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(ParameterMapper.class);</span><br><span class="line">	mapper.CheckLoginByParam(<span class="string">&quot;admin&quot;</span>,<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2></li>
<li>建议分成两种情况进行处理<ol>
<li>实体类类型的参数</li>
<li>使用@Param标识参数<h1 id="MyBatis的各种查询功能"><a href="#MyBatis的各种查询功能" class="headerlink" title="MyBatis的各种查询功能"></a>MyBatis的各种查询功能</h1></li>
</ol>
</li>
</ul>
<ol>
<li>如果查询出的数据只有一条，可以通过<ol>
<li>实体类对象接收</li>
<li>List集合接收</li>
<li>Map集合接收，结果<code>&#123;password=123456, sex=男, id=1, age=23, username=admin&#125;</code></li>
</ol>
</li>
<li>如果查询出的数据有多条，一定不能用实体类对象接收，会抛异常TooManyResultsException，可以通过<ol>
<li>实体类类型的LIst集合接收</li>
<li>Map类型的LIst集合接收</li>
<li>在mapper接口的方法上添加@MapKey注解<h2 id="查询一个实体类对象"><a href="#查询一个实体类对象" class="headerlink" title="查询一个实体类对象"></a>查询一个实体类对象</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据用户id查询用户信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">User <span class="title function_">getUserById</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span> <span class="type">int</span> id)</span>;</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--User getUserById(@Param(&quot;id&quot;) int id);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">	select * from t_user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="查询一个List集合"><a href="#查询一个List集合" class="headerlink" title="查询一个List集合"></a>查询一个List集合</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查询所有用户信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List&lt;User&gt; <span class="title function_">getUserList</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--List&lt;User&gt; getUserList();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">	select * from t_user</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="查询单个数据"><a href="#查询单个数据" class="headerlink" title="查询单个数据"></a>查询单个数据</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**  </span></span><br><span class="line"><span class="comment"> * 查询用户的总记录数  </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span>  </span></span><br><span class="line"><span class="comment"> * 在MyBatis中，对于Java中常用的类型都设置了类型别名  </span></span><br><span class="line"><span class="comment"> * 例如：java.lang.Integer--&gt;int|integer  </span></span><br><span class="line"><span class="comment"> * 例如：int--&gt;_int|_integer  </span></span><br><span class="line"><span class="comment"> * 例如：Map--&gt;map,List--&gt;list  </span></span><br><span class="line"><span class="comment"> */</span>  </span><br><span class="line"><span class="type">int</span> <span class="title function_">getCount</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--int getCount();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getCount&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;_integer&quot;</span>&gt;</span></span><br><span class="line">	select count(id) from t_user</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="查询一条数据为map集合"><a href="#查询一条数据为map集合" class="headerlink" title="查询一条数据为map集合"></a>查询一条数据为map集合</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**  </span></span><br><span class="line"><span class="comment"> * 根据用户id查询用户信息为map集合  </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id  </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span>  </span></span><br><span class="line"><span class="comment"> */</span>  </span><br><span class="line">Map&lt;String, Object&gt; <span class="title function_">getUserToMap</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span> <span class="type">int</span> id)</span>;</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--Map&lt;String, Object&gt; getUserToMap(@Param(&quot;id&quot;) int id);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserToMap&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">	select * from t_user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--结果：&#123;password=123456, sex=男, id=1, age=23, username=admin&#125;--&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="查询多条数据为map集合"><a href="#查询多条数据为map集合" class="headerlink" title="查询多条数据为map集合"></a>查询多条数据为map集合</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**  </span></span><br><span class="line"><span class="comment"> * 查询所有用户信息为map集合  </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span>  </span></span><br><span class="line"><span class="comment"> * 将表中的数据以map集合的方式查询，一条数据对应一个map；若有多条数据，就会产生多个map集合，此时可以将这些map放在一个list集合中获取  </span></span><br><span class="line"><span class="comment"> */</span>  </span><br><span class="line">List&lt;Map&lt;String, Object&gt;&gt; <span class="title function_">getAllUserToMap</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--Map&lt;String, Object&gt; getAllUserToMap();--&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getAllUserToMap&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;map&quot;</span>&gt;</span>  </span><br><span class="line">	select * from t_user  </span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">	结果：</span></span><br><span class="line"><span class="comment">	[&#123;password=123456, sex=男, id=1, age=23, username=admin&#125;,</span></span><br><span class="line"><span class="comment">	&#123;password=123456, sex=男, id=2, age=23, username=张三&#125;,</span></span><br><span class="line"><span class="comment">	&#123;password=123456, sex=男, id=3, age=23, username=张三&#125;]</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查询所有用户信息为map集合</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * 将表中的数据以map集合的方式查询，一条数据对应一个map；若有多条数据，就会产生多个map集合，并且最终要以一个map的方式返回数据，此时需要通过<span class="doctag">@MapKey</span>注解设置map集合的键，值是每条数据所对应的map集合</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@MapKey(&quot;id&quot;)</span></span><br><span class="line">Map&lt;String, Object&gt; <span class="title function_">getAllUserToMap</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--Map&lt;String, Object&gt; getAllUserToMap();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getAllUserToMap&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">	select * from t_user</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">	结果：</span></span><br><span class="line"><span class="comment">	&#123;</span></span><br><span class="line"><span class="comment">	1=&#123;password=123456, sex=男, id=1, age=23, username=admin&#125;,</span></span><br><span class="line"><span class="comment">	2=&#123;password=123456, sex=男, id=2, age=23, username=张三&#125;,</span></span><br><span class="line"><span class="comment">	3=&#123;password=123456, sex=男, id=3, age=23, username=张三&#125;</span></span><br><span class="line"><span class="comment">	&#125;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="特殊SQL的执行"><a href="#特殊SQL的执行" class="headerlink" title="特殊SQL的执行"></a>特殊SQL的执行</h1><h2 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据用户名进行模糊查询</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> username </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> java.util.List&lt;com.atguigu.mybatis.pojo.User&gt;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/2/26 21:56</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List&lt;User&gt; <span class="title function_">getUserByLike</span><span class="params">(<span class="meta">@Param(&quot;username&quot;)</span> String username)</span>;</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--List&lt;User&gt; getUserByLike(@Param(&quot;username&quot;) String username);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserByLike&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--select * from t_user where username like &#x27;%$&#123;mohu&#125;%&#x27;--&gt;</span>  </span><br><span class="line">	<span class="comment">&lt;!--select * from t_user where username like concat(&#x27;%&#x27;,#&#123;mohu&#125;,&#x27;%&#x27;)--&gt;</span>  </span><br><span class="line">	select * from t_user where username like &quot;%&quot;#&#123;mohu&#125;&quot;%&quot;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
</li>
</ol>
<ul>
<li>其中<code>select * from t_user where username like &quot;%&quot;#&#123;mohu&#125;&quot;%&quot;</code>是最常用的<h2 id="批量删除"><a href="#批量删除" class="headerlink" title="批量删除"></a>批量删除</h2></li>
<li>只能使用${}，如果使用#{}，则解析后的sql语句为<code>delete from t_user where id in (&#39;1,2,3&#39;)</code>，这样是将<code>1,2,3</code>看做是一个整体，只有id为<code>1,2,3</code>的数据会被删除。正确的语句应该是<code>delete from t_user where id in (1,2,3)</code>，或者<code>delete from t_user where id in (&#39;1&#39;,&#39;2&#39;,&#39;3&#39;)</code><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据id批量删除</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> ids </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/2/26 22:06</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">deleteMore</span><span class="params">(<span class="meta">@Param(&quot;ids&quot;)</span> String ids)</span>;</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteMore&quot;</span>&gt;</span></span><br><span class="line">	delete from t_user where id in ($&#123;ids&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//测试类</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteMore</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtils.getSqlSession();</span><br><span class="line">	<span class="type">SQLMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(SQLMapper.class);</span><br><span class="line">	<span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> mapper.deleteMore(<span class="string">&quot;1,2,3,8&quot;</span>);</span><br><span class="line">	System.out.println(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="动态设置表名"><a href="#动态设置表名" class="headerlink" title="动态设置表名"></a>动态设置表名</h2></li>
<li>只能使用${}，因为表名不能加单引号<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查询指定表中的数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> tableName </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> java.util.List&lt;com.atguigu.mybatis.pojo.User&gt;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/2/27 14:41</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List&lt;User&gt; <span class="title function_">getUserByTable</span><span class="params">(<span class="meta">@Param(&quot;tableName&quot;)</span> String tableName)</span>;</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--List&lt;User&gt; getUserByTable(@Param(&quot;tableName&quot;) String tableName);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserByTable&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">	select * from $&#123;tableName&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="添加功能获取自增的主键"><a href="#添加功能获取自增的主键" class="headerlink" title="添加功能获取自增的主键"></a>添加功能获取自增的主键</h2></li>
<li>使用场景<ul>
<li>t_clazz(clazz_id,clazz_name)  </li>
<li>t_student(student_id,student_name,clazz_id)  </li>
</ul>
<ol>
<li>添加班级信息  </li>
<li>获取新添加的班级的id  </li>
<li>为班级分配学生，即将某学的班级id修改为新添加的班级的id</li>
</ol>
</li>
<li>在mapper.xml中设置两个属性<ul>
<li>useGeneratedKeys：设置使用自增的主键  </li>
</ul>
<ul>
<li>keyProperty：因为增删改有统一的返回值是受影响的行数，因此只能将获取的自增的主键放在传输的参数user对象的某个属性中<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加用户信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> user </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/2/27 15:04</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">insertUser</span><span class="params">(User user)</span>;</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--void insertUser(User user);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertUser&quot;</span> <span class="attr">useGeneratedKeys</span>=<span class="string">&quot;true&quot;</span> <span class="attr">keyProperty</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">	insert into t_user values (null,#&#123;username&#125;,#&#123;password&#125;,#&#123;age&#125;,#&#123;sex&#125;,#&#123;email&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//测试类</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insertUser</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtils.getSqlSession();</span><br><span class="line">	<span class="type">SQLMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(SQLMapper.class);</span><br><span class="line">	<span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="literal">null</span>, <span class="string">&quot;ton&quot;</span>, <span class="string">&quot;123&quot;</span>, <span class="number">23</span>, <span class="string">&quot;男&quot;</span>, <span class="string">&quot;123@321.com&quot;</span>);</span><br><span class="line">	mapper.insertUser(user);</span><br><span class="line">	System.out.println(user);</span><br><span class="line">	<span class="comment">//输出：user&#123;id=10, username=&#x27;ton&#x27;, password=&#x27;123&#x27;, age=23, sex=&#x27;男&#x27;, email=&#x27;123@321.com&#x27;&#125;，自增主键存放到了user的id属性中</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="自定义映射resultMap"><a href="#自定义映射resultMap" class="headerlink" title="自定义映射resultMap"></a>自定义映射resultMap</h1><h2 id="resultMap处理字段和属性的映射关系"><a href="#resultMap处理字段和属性的映射关系" class="headerlink" title="resultMap处理字段和属性的映射关系"></a>resultMap处理字段和属性的映射关系</h2></li>
</ul>
</li>
<li>resultMap：设置自定义映射  <ul>
<li>属性：  <ul>
<li>id：表示自定义映射的唯一标识，不能重复</li>
<li>type：查询的数据要映射的实体类的类型  </li>
</ul>
</li>
<li>子标签：  <ul>
<li>id：设置主键的映射关系  </li>
<li>result：设置普通字段的映射关系  </li>
<li>子标签属性：  <ul>
<li>property：设置映射关系中实体类中的属性名  </li>
<li>column：设置映射关系中表中的字段名</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>若字段名和实体类中的属性名不一致，则可以通过resultMap设置自定义映射，即使字段名和属性名一致的属性也要映射，也就是全部属性都要列出来<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;empResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;eid&quot;</span> <span class="attr">column</span>=<span class="string">&quot;eid&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;empName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;emp_name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;age&quot;</span> <span class="attr">column</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sex&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;email&quot;</span> <span class="attr">column</span>=<span class="string">&quot;email&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--List&lt;Emp&gt; getAllEmp();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getAllEmp&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;empResultMap&quot;</span>&gt;</span></span><br><span class="line">	select * from t_emp</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>若字段名和实体类中的属性名不一致，但是字段名符合数据库的规则（使用_），实体类中的属性名符合Java的规则（使用驼峰）。此时也可通过以下两种方式处理字段名和实体类中的属性的映射关系  <ol>
<li>可以通过为字段起别名的方式，保证和实体类中的属性名保持一致   <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--List&lt;Emp&gt; getAllEmp();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getAllEmp&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">	select eid,emp_name empName,age,sex,email from t_emp</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>可以在MyBatis的核心配置文件中的<code>setting</code>标签中，设置一个全局配置信息mapUnderscoreToCamelCase，可以在查询表中数据时，自动将_类型的字段名转换为驼峰，例如：字段名user_name，设置了mapUnderscoreToCamelCase，此时字段名就会转换为userName。<a href="#核心配置文件详解">核心配置文件详解</a> <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;mapUnderscoreToCamelCase&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="多对一映射处理"><a href="#多对一映射处理" class="headerlink" title="多对一映射处理"></a>多对一映射处理</h2><blockquote>
<p>查询员工信息以及员工所对应的部门信息</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Emp</span> &#123;  </span><br><span class="line">	<span class="keyword">private</span> Integer eid;  </span><br><span class="line">	<span class="keyword">private</span> String empName;  </span><br><span class="line">	<span class="keyword">private</span> Integer age;  </span><br><span class="line">	<span class="keyword">private</span> String sex;  </span><br><span class="line">	<span class="keyword">private</span> String email;  </span><br><span class="line">	<span class="keyword">private</span> Dept dept;</span><br><span class="line">	<span class="comment">//...构造器、get、set方法等</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="级联方式处理映射关系"><a href="#级联方式处理映射关系" class="headerlink" title="级联方式处理映射关系"></a>级联方式处理映射关系</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;empAndDeptResultMapOne&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;eid&quot;</span> <span class="attr">column</span>=<span class="string">&quot;eid&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;empName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;emp_name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;age&quot;</span> <span class="attr">column</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sex&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;email&quot;</span> <span class="attr">column</span>=<span class="string">&quot;email&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;dept.did&quot;</span> <span class="attr">column</span>=<span class="string">&quot;did&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;dept.deptName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;dept_name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Emp getEmpAndDept(@Param(&quot;eid&quot;)Integer eid);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpAndDept&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;empAndDeptResultMapOne&quot;</span>&gt;</span></span><br><span class="line">	select * from t_emp left join t_dept on t_emp.eid = t_dept.did where t_emp.eid = #&#123;eid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="使用association处理映射关系"><a href="#使用association处理映射关系" class="headerlink" title="使用association处理映射关系"></a>使用association处理映射关系</h3></blockquote>
</li>
</ol>
</li>
<li>association：处理多对一的映射关系</li>
<li>property：需要处理多对的映射关系的属性名</li>
<li>javaType：该属性的类型<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;empAndDeptResultMapTwo&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;eid&quot;</span> <span class="attr">column</span>=<span class="string">&quot;eid&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;empName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;emp_name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;age&quot;</span> <span class="attr">column</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sex&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;email&quot;</span> <span class="attr">column</span>=<span class="string">&quot;email&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;dept&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Dept&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;did&quot;</span> <span class="attr">column</span>=<span class="string">&quot;did&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;deptName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;dept_name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Emp getEmpAndDept(@Param(&quot;eid&quot;)Integer eid);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpAndDept&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;empAndDeptResultMapTwo&quot;</span>&gt;</span></span><br><span class="line">	select * from t_emp left join t_dept on t_emp.eid = t_dept.did where t_emp.eid = #&#123;eid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="分步查询"><a href="#分步查询" class="headerlink" title="分步查询"></a>分步查询</h3><h4 id="1-查询员工信息"><a href="#1-查询员工信息" class="headerlink" title="1. 查询员工信息"></a>1. 查询员工信息</h4></li>
<li>select：设置分布查询的sql的唯一标识（namespace.SQLId或mapper接口的全类名.方法名）</li>
<li>column：设置分步查询的条件<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//EmpMapper里的方法</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过分步查询，员工及所对应的部门信息</span></span><br><span class="line"><span class="comment"> * 分步查询第一步：查询员工信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> com.atguigu.mybatis.pojo.Emp</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/2/27 20:17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Emp <span class="title function_">getEmpAndDeptByStepOne</span><span class="params">(<span class="meta">@Param(&quot;eid&quot;)</span> Integer eid)</span>;</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;empAndDeptByStepResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;eid&quot;</span> <span class="attr">column</span>=<span class="string">&quot;eid&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;empName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;emp_name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;age&quot;</span> <span class="attr">column</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sex&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;email&quot;</span> <span class="attr">column</span>=<span class="string">&quot;email&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;dept&quot;</span></span></span><br><span class="line"><span class="tag">				 <span class="attr">select</span>=<span class="string">&quot;com.atguigu.mybatis.mapper.DeptMapper.getEmpAndDeptByStepTwo&quot;</span></span></span><br><span class="line"><span class="tag">				 <span class="attr">column</span>=<span class="string">&quot;did&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Emp getEmpAndDeptByStepOne(@Param(&quot;eid&quot;) Integer eid);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpAndDeptByStepOne&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;empAndDeptByStepResultMap&quot;</span>&gt;</span></span><br><span class="line">	select * from t_emp where eid = #&#123;eid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="2-查询部门信息"><a href="#2-查询部门信息" class="headerlink" title="2. 查询部门信息"></a>2. 查询部门信息</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//DeptMapper里的方法</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过分步查询，员工及所对应的部门信息</span></span><br><span class="line"><span class="comment"> * 分步查询第二步：通过did查询员工对应的部门信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> com.atguigu.mybatis.pojo.Emp</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/2/27 20:23</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Dept <span class="title function_">getEmpAndDeptByStepTwo</span><span class="params">(<span class="meta">@Param(&quot;did&quot;)</span> Integer did)</span>;</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--此处的resultMap仅是处理字段和属性的映射关系--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;EmpAndDeptByStepTwoResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Dept&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;did&quot;</span> <span class="attr">column</span>=<span class="string">&quot;did&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;deptName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;dept_name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Dept getEmpAndDeptByStepTwo(@Param(&quot;did&quot;) Integer did);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpAndDeptByStepTwo&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;EmpAndDeptByStepTwoResultMap&quot;</span>&gt;</span></span><br><span class="line">	select * from t_dept where did = #&#123;did&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="一对多映射处理"><a href="#一对多映射处理" class="headerlink" title="一对多映射处理"></a>一对多映射处理</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Dept</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer did;</span><br><span class="line">    <span class="keyword">private</span> String deptName;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Emp&gt; emps;</span><br><span class="line">	<span class="comment">//...构造器、get、set方法等</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="collection"><a href="#collection" class="headerlink" title="collection"></a>collection</h3></li>
<li>collection：用来处理一对多的映射关系</li>
<li>ofType：表示该属性对饮的集合中存储的数据的类型<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;DeptAndEmpResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Dept&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;did&quot;</span> <span class="attr">column</span>=<span class="string">&quot;did&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;deptName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;dept_name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;emps&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;eid&quot;</span> <span class="attr">column</span>=<span class="string">&quot;eid&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;empName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;emp_name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;age&quot;</span> <span class="attr">column</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sex&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;email&quot;</span> <span class="attr">column</span>=<span class="string">&quot;email&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Dept getDeptAndEmp(@Param(&quot;did&quot;) Integer did);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getDeptAndEmp&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;DeptAndEmpResultMap&quot;</span>&gt;</span></span><br><span class="line">	select * from t_dept left join t_emp on t_dept.did = t_emp.did where t_dept.did = #&#123;did&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="分步查询-1"><a href="#分步查询-1" class="headerlink" title="分步查询"></a>分步查询</h3><h4 id="1-查询部门信息"><a href="#1-查询部门信息" class="headerlink" title="1. 查询部门信息"></a>1. 查询部门信息</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过分步查询，查询部门及对应的所有员工信息</span></span><br><span class="line"><span class="comment"> * 分步查询第一步：查询部门信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> did </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> com.atguigu.mybatis.pojo.Dept</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/2/27 22:04</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Dept <span class="title function_">getDeptAndEmpByStepOne</span><span class="params">(<span class="meta">@Param(&quot;did&quot;)</span> Integer did)</span>;</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;DeptAndEmpByStepOneResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Dept&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;did&quot;</span> <span class="attr">column</span>=<span class="string">&quot;did&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;deptName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;dept_name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;emps&quot;</span></span></span><br><span class="line"><span class="tag">				<span class="attr">select</span>=<span class="string">&quot;com.atguigu.mybatis.mapper.EmpMapper.getDeptAndEmpByStepTwo&quot;</span></span></span><br><span class="line"><span class="tag">				<span class="attr">column</span>=<span class="string">&quot;did&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Dept getDeptAndEmpByStepOne(@Param(&quot;did&quot;) Integer did);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getDeptAndEmpByStepOne&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;DeptAndEmpByStepOneResultMap&quot;</span>&gt;</span></span><br><span class="line">	select * from t_dept where did = #&#123;did&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="2-根据部门id查询部门中的所有员工"><a href="#2-根据部门id查询部门中的所有员工" class="headerlink" title="2. 根据部门id查询部门中的所有员工"></a>2. 根据部门id查询部门中的所有员工</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过分步查询，查询部门及对应的所有员工信息</span></span><br><span class="line"><span class="comment"> * 分步查询第二步：根据部门id查询部门中的所有员工</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> did</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> java.util.List&lt;com.atguigu.mybatis.pojo.Emp&gt;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/2/27 22:10</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List&lt;Emp&gt; <span class="title function_">getDeptAndEmpByStepTwo</span><span class="params">(<span class="meta">@Param(&quot;did&quot;)</span> Integer did)</span>;</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--List&lt;Emp&gt; getDeptAndEmpByStepTwo(@Param(&quot;did&quot;) Integer did);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getDeptAndEmpByStepTwo&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">	select * from t_emp where did = #&#123;did&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="延迟加载"><a href="#延迟加载" class="headerlink" title="延迟加载"></a>延迟加载</h2></li>
<li>分步查询的优点：可以实现延迟加载，但是必须在核心配置文件中设置全局配置信息：<ul>
<li>lazyLoadingEnabled：延迟加载的全局开关。当开启时，所有关联对象都会延迟加载  </li>
<li>aggressiveLazyLoading：当开启时，任何方法的调用都会加载该对象的所有属性。 否则，每个属性会按需加载  </li>
</ul>
</li>
<li>此时就可以实现按需加载，获取的数据是什么，就只会执行相应的sql。此时可通过association和collection中的fetchType属性设置当前的分步查询是否使用延迟加载，fetchType=”lazy(延迟加载)|eager(立即加载)”<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--开启延迟加载--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;lazyLoadingEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getEmpAndDeptByStepOne</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtils.getSqlSession();</span><br><span class="line">	<span class="type">EmpMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmpMapper.class);</span><br><span class="line">	<span class="type">Emp</span> <span class="variable">emp</span> <span class="operator">=</span> mapper.getEmpAndDeptByStepOne(<span class="number">1</span>);</span><br><span class="line">	System.out.println(emp.getEmpName());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>关闭延迟加载，两条SQL语句都运行了<img src="Resources/延迟加载测试1.png" alt=""></li>
<li>开启延迟加载，只运行获取emp的SQL语句<br><img src="Resources/延迟加载测试2.png" alt=""><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getEmpAndDeptByStepOne</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtils.getSqlSession();</span><br><span class="line">	<span class="type">EmpMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmpMapper.class);</span><br><span class="line">	<span class="type">Emp</span> <span class="variable">emp</span> <span class="operator">=</span> mapper.getEmpAndDeptByStepOne(<span class="number">1</span>);</span><br><span class="line">	System.out.println(emp.getEmpName());</span><br><span class="line">	System.out.println(<span class="string">&quot;----------------&quot;</span>);</span><br><span class="line">	System.out.println(emp.getDept());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>开启后，需要用到查询dept的时候才会调用相应的SQL语句<img src="Resources/延迟加载测试3.png" alt=""></li>
<li>fetchType：当开启了全局的延迟加载之后，可以通过该属性手动控制延迟加载的效果，fetchType=”lazy(延迟加载)|eager(立即加载)”  <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;empAndDeptByStepResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;eid&quot;</span> <span class="attr">column</span>=<span class="string">&quot;eid&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;empName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;emp_name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;age&quot;</span> <span class="attr">column</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sex&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;email&quot;</span> <span class="attr">column</span>=<span class="string">&quot;email&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;dept&quot;</span></span></span><br><span class="line"><span class="tag">				 <span class="attr">select</span>=<span class="string">&quot;com.atguigu.mybatis.mapper.DeptMapper.getEmpAndDeptByStepTwo&quot;</span></span></span><br><span class="line"><span class="tag">				 <span class="attr">column</span>=<span class="string">&quot;did&quot;</span></span></span><br><span class="line"><span class="tag">				 <span class="attr">fetchType</span>=<span class="string">&quot;lazy&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="动态SQL"><a href="#动态SQL" class="headerlink" title="动态SQL"></a>动态SQL</h1></li>
<li>Mybatis框架的动态SQL技术是一种根据特定条件动态拼装SQL语句的功能，它存在的意义是为了解决拼接SQL语句字符串时的痛点问题<h2 id="if"><a href="#if" class="headerlink" title="if"></a>if</h2></li>
<li>if标签可通过test属性（即传递过来的数据）的表达式进行判断，若表达式的结果为true，则标签中的内容会执行；反之标签中的内容不会执行</li>
<li>在where后面添加一个恒成立条件<code>1=1</code><ul>
<li>这个恒成立条件并不会影响查询的结果</li>
<li>这个<code>1=1</code>可以用来拼接<code>and</code>语句，例如：当empName为null时<ul>
<li>如果不加上恒成立条件，则SQL语句为<code>select * from t_emp where and age = ? and sex = ? and email = ?</code>，此时<code>where</code>会与<code>and</code>连用，SQL语句会报错</li>
<li>如果加上一个恒成立条件，则SQL语句为<code>select * from t_emp where 1= 1 and age = ? and sex = ? and email = ?</code>，此时不报错<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--List&lt;Emp&gt; getEmpByCondition(Emp emp);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpByCondition&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">	select * from t_emp where 1=1</span><br><span class="line">	<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;empName != null and empName !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">		and emp_name = #&#123;empName&#125;</span><br><span class="line">	<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;age != null and age !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">		and age = #&#123;age&#125;</span><br><span class="line">	<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;sex != null and sex !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">		and sex = #&#123;sex&#125;</span><br><span class="line">	<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;email != null and email !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">		and email = #&#123;email&#125;</span><br><span class="line">	<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="where"><a href="#where" class="headerlink" title="where"></a>where</h2></li>
</ul>
</li>
</ul>
</li>
<li>where和if一般结合使用：<ul>
<li>若where标签中的if条件都不满足，则where标签没有任何功能，即不会添加where关键字  </li>
<li>若where标签中的if条件满足，则where标签会自动添加where关键字，并将条件最前方多余的and/or去掉  <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--List&lt;Emp&gt; getEmpByCondition(Emp emp);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpByCondition&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">	select * from t_emp</span><br><span class="line">	<span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;empName != null and empName !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">			emp_name = #&#123;empName&#125;</span><br><span class="line">		<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;age != null and age !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">			and age = #&#123;age&#125;</span><br><span class="line">		<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;sex != null and sex !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">			and sex = #&#123;sex&#125;</span><br><span class="line">		<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;email != null and email !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">			and email = #&#123;email&#125;</span><br><span class="line">		<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li>注意：where标签不能去掉条件后多余的and/or  <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--这种用法是错误的，只能去掉条件前面的and/or，条件后面的不行--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;empName != null and empName !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">emp_name = #&#123;empName&#125; and</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;age != null and age !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">	age = #&#123;age&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="trim"><a href="#trim" class="headerlink" title="trim"></a>trim</h2></li>
<li>trim用于去掉或添加标签中的内容  </li>
<li>常用属性<ul>
<li>prefix：在trim标签中的内容的前面添加某些内容  </li>
<li>suffix：在trim标签中的内容的后面添加某些内容 </li>
<li>prefixOverrides：在trim标签中的内容的前面去掉某些内容  </li>
<li>suffixOverrides：在trim标签中的内容的后面去掉某些内容</li>
</ul>
</li>
<li>若trim中的标签都不满足条件，则trim标签没有任何效果，也就是只剩下<code>select * from t_emp</code><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--List&lt;Emp&gt; getEmpByCondition(Emp emp);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpByCondition&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">	select * from t_emp</span><br><span class="line">	<span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;where&quot;</span> <span class="attr">suffixOverrides</span>=<span class="string">&quot;and|or&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;empName != null and empName !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">			emp_name = #&#123;empName&#125; and</span><br><span class="line">		<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;age != null and age !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">			age = #&#123;age&#125; and</span><br><span class="line">		<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;sex != null and sex !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">			sex = #&#123;sex&#125; or</span><br><span class="line">		<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;email != null and email !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">			email = #&#123;email&#125;</span><br><span class="line">		<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//测试类</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getEmpByCondition</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtils.getSqlSession();</span><br><span class="line">	<span class="type">DynamicSQLMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(DynamicSQLMapper.class);</span><br><span class="line">	List&lt;Emp&gt; emps= mapper.getEmpByCondition(<span class="keyword">new</span> <span class="title class_">Emp</span>(<span class="literal">null</span>, <span class="string">&quot;张三&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>));</span><br><span class="line">	System.out.println(emps);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="Resources/trim测试结果.png" alt=""><h2 id="choose、when、otherwise"><a href="#choose、when、otherwise" class="headerlink" title="choose、when、otherwise"></a>choose、when、otherwise</h2></li>
<li><code>choose、when、otherwise</code>相当于<code>if...else if..else</code></li>
<li>when至少要有一个，otherwise至多只有一个<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpByChoose&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">	select * from t_emp</span><br><span class="line">	<span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;empName != null and empName != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">				emp_name = #&#123;empName&#125;</span><br><span class="line">			<span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;age != null and age != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">				age = #&#123;age&#125;</span><br><span class="line">			<span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;sex != null and sex != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">				sex = #&#123;sex&#125;</span><br><span class="line">			<span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;email != null and email != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">				email = #&#123;email&#125;</span><br><span class="line">			<span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">				did = 1</span><br><span class="line">			<span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getEmpByChoose</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtils.getSqlSession();</span><br><span class="line">	<span class="type">DynamicSQLMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(DynamicSQLMapper.class);</span><br><span class="line">	List&lt;Emp&gt; emps = mapper.getEmpByChoose(<span class="keyword">new</span> <span class="title class_">Emp</span>(<span class="literal">null</span>, <span class="string">&quot;张三&quot;</span>, <span class="number">23</span>, <span class="string">&quot;男&quot;</span>, <span class="string">&quot;123@qq.com&quot;</span>, <span class="literal">null</span>));</span><br><span class="line">	System.out.println(emps);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="Resources/choose测试结果.png" alt=""></li>
<li>相当于<code>if a else if b else if c else d</code>，只会执行其中一个<h2 id="foreach"><a href="#foreach" class="headerlink" title="foreach"></a>foreach</h2></li>
<li>属性：  <ul>
<li>collection：设置要循环的数组或集合  </li>
<li>item：表示集合或数组中的每一个数据  </li>
<li>separator：设置循环体之间的分隔符，分隔符前后默认有一个空格，如<code>,</code></li>
<li>open：设置foreach标签中的内容的开始符  </li>
<li>close：设置foreach标签中的内容的结束符</li>
</ul>
</li>
<li>批量删除  <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--int deleteMoreByArray(Integer[] eids);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteMoreByArray&quot;</span>&gt;</span></span><br><span class="line">	delete from t_emp where eid in</span><br><span class="line">	<span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;eids&quot;</span> <span class="attr">item</span>=<span class="string">&quot;eid&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span>&gt;</span></span><br><span class="line">		#&#123;eid&#125;</span><br><span class="line">	<span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteMoreByArray</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtils.getSqlSession();</span><br><span class="line">	<span class="type">DynamicSQLMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(DynamicSQLMapper.class);</span><br><span class="line">	<span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> mapper.deleteMoreByArray(<span class="keyword">new</span> <span class="title class_">Integer</span>[]&#123;<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;);</span><br><span class="line">	System.out.println(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
  <img src="Resources/foreach测试结果1.png" alt=""></li>
<li>批量添加  <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--int insertMoreByList(@Param(&quot;emps&quot;) List&lt;Emp&gt; emps);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertMoreByList&quot;</span>&gt;</span></span><br><span class="line">	insert into t_emp values</span><br><span class="line">	<span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;emps&quot;</span> <span class="attr">item</span>=<span class="string">&quot;emp&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line">		(null,#&#123;emp.empName&#125;,#&#123;emp.age&#125;,#&#123;emp.sex&#125;,#&#123;emp.email&#125;,null)</span><br><span class="line">	<span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insertMoreByList</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtils.getSqlSession();</span><br><span class="line">	<span class="type">DynamicSQLMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(DynamicSQLMapper.class);</span><br><span class="line">	<span class="type">Emp</span> <span class="variable">emp1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Emp</span>(<span class="literal">null</span>,<span class="string">&quot;a&quot;</span>,<span class="number">1</span>,<span class="string">&quot;男&quot;</span>,<span class="string">&quot;123@321.com&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">	<span class="type">Emp</span> <span class="variable">emp2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Emp</span>(<span class="literal">null</span>,<span class="string">&quot;b&quot;</span>,<span class="number">1</span>,<span class="string">&quot;男&quot;</span>,<span class="string">&quot;123@321.com&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">	<span class="type">Emp</span> <span class="variable">emp3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Emp</span>(<span class="literal">null</span>,<span class="string">&quot;c&quot;</span>,<span class="number">1</span>,<span class="string">&quot;男&quot;</span>,<span class="string">&quot;123@321.com&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">	List&lt;Emp&gt; emps = Arrays.asList(emp1, emp2, emp3);</span><br><span class="line">	<span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> mapper.insertMoreByList(emps);</span><br><span class="line">	System.out.println(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
  <img src="Resources/foreach测试结果2.png" alt=""><h2 id="SQL片段"><a href="#SQL片段" class="headerlink" title="SQL片段"></a>SQL片段</h2></li>
<li>sql片段，可以记录一段公共sql片段，在使用的地方通过include标签进行引入</li>
<li>声明sql片段：<code>&lt;sql&gt;</code>标签<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;empColumns&quot;</span>&gt;</span>eid,emp_name,age,sex,email<span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>引用sql片段：<code>&lt;include&gt;</code>标签<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--List&lt;Emp&gt; getEmpByCondition(Emp emp);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpByCondition&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">	select <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;empColumns&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span> from t_emp</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="MyBatis的缓存"><a href="#MyBatis的缓存" class="headerlink" title="MyBatis的缓存"></a>MyBatis的缓存</h1><h2 id="MyBatis的一级缓存"><a href="#MyBatis的一级缓存" class="headerlink" title="MyBatis的一级缓存"></a>MyBatis的一级缓存</h2></li>
<li>一级缓存是SqlSession级别的，通过同一个SqlSession查询的数据会被缓存，下次查询相同的数据，就会从缓存中直接获取，不会从数据库重新访问  </li>
<li>使一级缓存失效的四种情况：  <ol>
<li>不同的SqlSession对应不同的一级缓存  </li>
<li>同一个SqlSession但是查询条件不同</li>
<li>同一个SqlSession两次查询期间执行了任何一次增删改操作</li>
<li>同一个SqlSession两次查询期间手动清空了缓存<h2 id="MyBatis的二级缓存"><a href="#MyBatis的二级缓存" class="headerlink" title="MyBatis的二级缓存"></a>MyBatis的二级缓存</h2></li>
</ol>
</li>
<li>二级缓存是SqlSessionFactory级别，通过同一个SqlSessionFactory创建的SqlSession查询的结果会被缓存；此后若再次执行相同的查询语句，结果就会从缓存中获取  </li>
<li>二级缓存开启的条件<ol>
<li>在核心配置文件中，设置全局配置属性cacheEnabled=”true”，默认为true，不需要设置</li>
<li>在映射文件中设置标签<cache /></li>
<li>二级缓存必须在SqlSession关闭或提交之后有效</li>
<li>查询的数据所转换的实体类类型必须实现序列化的接口</li>
</ol>
</li>
<li>使二级缓存失效的情况：两次查询之间执行了任意的增删改，会使一级和二级缓存同时失效<h2 id="二级缓存的相关配置"><a href="#二级缓存的相关配置" class="headerlink" title="二级缓存的相关配置"></a>二级缓存的相关配置</h2></li>
<li>在mapper配置文件中添加的cache标签可以设置一些属性</li>
<li>eviction属性：缓存回收策略  <ul>
<li>LRU（Least Recently Used） – 最近最少使用的：移除最长时间不被使用的对象。  </li>
<li>FIFO（First in First out） – 先进先出：按对象进入缓存的顺序来移除它们。  </li>
<li>SOFT – 软引用：移除基于垃圾回收器状态和软引用规则的对象。  </li>
<li>WEAK – 弱引用：更积极地移除基于垃圾收集器状态和弱引用规则的对象。</li>
<li>默认的是 LRU</li>
</ul>
</li>
<li>flushInterval属性：刷新间隔，单位毫秒<ul>
<li>默认情况是不设置，也就是没有刷新间隔，缓存仅仅调用语句（增删改）时刷新</li>
</ul>
</li>
<li>size属性：引用数目，正整数<ul>
<li>代表缓存最多可以存储多少个对象，太大容易导致内存溢出</li>
</ul>
</li>
<li>readOnly属性：只读，true/false<ul>
<li>true：只读缓存；会给所有调用者返回缓存对象的相同实例。因此这些对象不能被修改。这提供了很重要的性能优势。  </li>
<li>false：读写缓存；会返回缓存对象的拷贝（通过序列化）。这会慢一些，但是安全，因此默认是false<h2 id="MyBatis缓存查询的顺序"><a href="#MyBatis缓存查询的顺序" class="headerlink" title="MyBatis缓存查询的顺序"></a>MyBatis缓存查询的顺序</h2></li>
</ul>
</li>
<li>先查询二级缓存，因为二级缓存中可能会有其他程序已经查出来的数据，可以拿来直接使用  </li>
<li>如果二级缓存没有命中，再查询一级缓存  </li>
<li>如果一级缓存也没有命中，则查询数据库  </li>
<li>SqlSession关闭之后，一级缓存中的数据会写入二级缓存<h2 id="整合第三方缓存EHCache（了解）"><a href="#整合第三方缓存EHCache（了解）" class="headerlink" title="整合第三方缓存EHCache（了解）"></a>整合第三方缓存EHCache（了解）</h2><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Mybatis EHCache整合包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.caches<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-ehcache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- slf4j日志门面的一个具体实现 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="各个jar包的功能"><a href="#各个jar包的功能" class="headerlink" title="各个jar包的功能"></a>各个jar包的功能</h3>| jar包名称 | 作用 |<br>| —- | —- |<br>| mybatis-ehcache | Mybatis和EHCache的整合包 |<br>| ehcache | EHCache核心包 |<br>| slf4j-api | SLF4J日志门面包 |<br>| logback-classic | 支持SLF4J门面接口的一个具体实现 |</li>
</ul>
<h3 id="创建EHCache的配置文件ehcache-xml"><a href="#创建EHCache的配置文件ehcache-xml" class="headerlink" title="创建EHCache的配置文件ehcache.xml"></a>创建EHCache的配置文件ehcache.xml</h3><ul>
<li>名字必须叫<code>ehcache.xml</code><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ehcache</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:noNamespaceSchemaLocation</span>=<span class="string">&quot;../config/ehcache.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 磁盘保存路径 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">diskStore</span> <span class="attr">path</span>=<span class="string">&quot;D:\atguigu\ehcache&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">defaultCache</span></span></span><br><span class="line"><span class="tag">            <span class="attr">maxElementsInMemory</span>=<span class="string">&quot;1000&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">maxElementsOnDisk</span>=<span class="string">&quot;10000000&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">eternal</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">overflowToDisk</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">timeToIdleSeconds</span>=<span class="string">&quot;120&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">timeToLiveSeconds</span>=<span class="string">&quot;120&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">diskExpiryThreadIntervalSeconds</span>=<span class="string">&quot;120&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">&quot;LRU&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">defaultCache</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ehcache</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="设置二级缓存的类型"><a href="#设置二级缓存的类型" class="headerlink" title="设置二级缓存的类型"></a>设置二级缓存的类型</h3></li>
<li>在xxxMapper.xml文件中设置二级缓存类型<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cache</span> <span class="attr">type</span>=<span class="string">&quot;org.mybatis.caches.ehcache.EhcacheCache&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="加入logback日志"><a href="#加入logback日志" class="headerlink" title="加入logback日志"></a>加入logback日志</h3></li>
<li>存在SLF4J时，作为简易日志的log4j将失效，此时我们需要借助SLF4J的具体实现logback来打印日志。创建logback的配置文件<code>logback.xml</code>，名字固定，不可改变<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">debug</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定日志输出的位置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;STDOUT&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 日志输出的格式 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 按照顺序分别是：时间、日志级别、线程名称、打印日志的类、日志主体内容、换行 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>[%d&#123;HH:mm:ss.SSS&#125;] [%-5level] [%thread] [%logger] [%msg]%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 设置全局日志级别。日志级别按顺序分别是：DEBUG、INFO、WARN、ERROR --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定任何一个日志级别都只打印当前级别和后面级别的日志。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;DEBUG&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 指定打印日志的appender，这里通过“STDOUT”引用了前面配置的appender --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;STDOUT&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 根据特殊需求指定局部日志级别 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;com.atguigu.crowd.mapper&quot;</span> <span class="attr">level</span>=<span class="string">&quot;DEBUG&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="EHCache配置文件说明"><a href="#EHCache配置文件说明" class="headerlink" title="EHCache配置文件说明"></a>EHCache配置文件说明</h3>| 属性名 | 是否必须 | 作用 |<br>| —- | —- | —- |<br>| maxElementsInMemory | 是 | 在内存中缓存的element的最大数目 |<br>| maxElementsOnDisk | 是 | 在磁盘上缓存的element的最大数目，若是0表示无穷大 |<br>| eternal | 是 | 设定缓存的elements是否永远不过期。 如果为true，则缓存的数据始终有效， 如果为false那么还要根据timeToIdleSeconds、timeToLiveSeconds判断 |<br>| overflowToDisk | 是 | 设定当内存缓存溢出的时候是否将过期的element缓存到磁盘上 |<br>| timeToIdleSeconds | 否 | 当缓存在EhCache中的数据前后两次访问的时间超过timeToIdleSeconds的属性取值时， 这些数据便会删除，默认值是0,也就是可闲置时间无穷大 |<br>| timeToLiveSeconds | 否 | 缓存element的有效生命期，默认是0.,也就是element存活时间无穷大 |<br>| diskSpoolBufferSizeMB | 否 | DiskStore(磁盘缓存)的缓存区大小。默认是30MB。每个Cache都应该有自己的一个缓冲区 |<br>| diskPersistent | 否 | 在VM重启的时候是否启用磁盘保存EhCache中的数据，默认是false |<br>| diskExpiryThreadIntervalSeconds | 否 | 磁盘缓存的清理线程运行间隔，默认是120秒。每个120s， 相应的线程会进行一次EhCache中数据的清理工作 |<br>| memoryStoreEvictionPolicy | 否 | 当内存缓存达到最大，有新的element加入的时候， 移除缓存中element的策略。 默认是LRU（最近最少使用），可选的有LFU（最不常使用）和FIFO（先进先出 |<h1 id="MyBatis的逆向工程"><a href="#MyBatis的逆向工程" class="headerlink" title="MyBatis的逆向工程"></a>MyBatis的逆向工程</h1></li>
<li>正向工程：先创建Java实体类，由框架负责根据实体类生成数据库表。Hibernate是支持正向工程的</li>
<li>逆向工程：先创建数据库表，由框架负责根据数据库表，反向生成如下资源：  <ul>
<li>Java实体类  </li>
<li>Mapper接口  </li>
<li>Mapper映射文件<h2 id="创建逆向工程的步骤"><a href="#创建逆向工程的步骤" class="headerlink" title="创建逆向工程的步骤"></a>创建逆向工程的步骤</h2><h3 id="添加依赖和插件"><a href="#添加依赖和插件" class="headerlink" title="添加依赖和插件"></a>添加依赖和插件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- MyBatis核心依赖包 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- junit测试 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- MySQL驱动 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.27<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- log4j日志 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 控制Maven在构建过程中相关配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 构建过程中用到的插件 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 具体插件，逆向工程的操作是以构建过程中插件形式出现的 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 插件的依赖 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 逆向工程的核心依赖 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 数据库连接池 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mchange<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- MySQL驱动 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.27<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="创建MyBatis的核心配置文件-1"><a href="#创建MyBatis的核心配置文件-1" class="headerlink" title="创建MyBatis的核心配置文件"></a>创建MyBatis的核心配置文件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="创建逆向工程的配置文件"><a href="#创建逆向工程的配置文件" class="headerlink" title="创建逆向工程的配置文件"></a>创建逆向工程的配置文件</h3></li>
</ul>
</li>
<li>文件名必须是：<code>generatorConfig.xml</code><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">generatorConfiguration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    targetRuntime: 执行生成的逆向工程的版本</span></span><br><span class="line"><span class="comment">    MyBatis3Simple: 生成基本的CRUD（清新简洁版）</span></span><br><span class="line"><span class="comment">    MyBatis3: 生成带条件的CRUD（奢华尊享版）</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">&quot;DB2Tables&quot;</span> <span class="attr">targetRuntime</span>=<span class="string">&quot;MyBatis3Simple&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 数据库的连接信息 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">connectionURL</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">userId</span>=<span class="string">&quot;root&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">password</span>=<span class="string">&quot;123456&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- javaBean的生成策略--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;com.atguigu.mybatis.pojo&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;.\src\main\java&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;trimStrings&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- SQL映射文件的生成策略 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;com.atguigu.mybatis.mapper&quot;</span></span></span><br><span class="line"><span class="tag">                         <span class="attr">targetProject</span>=<span class="string">&quot;.\src\main\resources&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Mapper接口的生成策略 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">&quot;XMLMAPPER&quot;</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">targetPackage</span>=<span class="string">&quot;com.atguigu.mybatis.mapper&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;.\src\main\java&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 逆向分析的表 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- tableName设置为*号，可以对应所有表，此时不写domainObjectName --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- domainObjectName属性指定生成出来的实体类的类名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;t_emp&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;Emp&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;t_dept&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;Dept&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="执行MBG插件的generate目标"><a href="#执行MBG插件的generate目标" class="headerlink" title="执行MBG插件的generate目标"></a>执行MBG插件的generate目标</h3></li>
<li><img src="Resources/执行MBG插件的generate目标.png" alt=""></li>
<li>如果出现报错：<code>Exception getting JDBC Driver</code>，可能是pom.xml中，数据库驱动配置错误<ul>
<li>dependency中的驱动<img src="Resources/dependency中的驱动.png" alt=""></li>
<li>mybatis-generator-maven-plugin插件中的驱动<img src="Resources/插件中的驱动.png" alt=""></li>
<li>两者的驱动版本应该相同</li>
</ul>
</li>
<li>执行结果<img src="Resources/逆向执行结果.png" alt=""><h2 id="QBC"><a href="#QBC" class="headerlink" title="QBC"></a>QBC</h2><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3></li>
<li><code>selectByExample</code>：按条件查询，需要传入一个example对象或者null；如果传入一个null，则表示没有条件，也就是查询所有数据</li>
<li><code>example.createCriteria().xxx</code>：创建条件对象，通过andXXX方法为SQL添加查询添加，每个条件之间是and关系</li>
<li><code>example.or().xxx</code>：将之前添加的条件通过or拼接其他条件<br><img src="Resources/example的方法.png" alt=""><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testMBG</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">	<span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">	<span class="type">SqlSessionFactoryBuilder</span> <span class="variable">sqlSessionFactoryBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>();</span><br><span class="line">	<span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> sqlSessionFactoryBuilder.build(is);</span><br><span class="line">	<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">	<span class="type">EmpMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmpMapper.class);</span><br><span class="line">	<span class="type">EmpExample</span> <span class="variable">example</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EmpExample</span>();</span><br><span class="line">	<span class="comment">//名字为张三，且年龄大于等于20</span></span><br><span class="line">	example.createCriteria().andEmpNameEqualTo(<span class="string">&quot;张三&quot;</span>).andAgeGreaterThanOrEqualTo(<span class="number">20</span>);</span><br><span class="line">	<span class="comment">//或者did不为空</span></span><br><span class="line">	example.or().andDidIsNotNull();</span><br><span class="line">	List&lt;Emp&gt; emps = mapper.selectByExample(example);</span><br><span class="line">	emps.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="Resources/example测试结果.png" alt=""><h3 id="增改"><a href="#增改" class="headerlink" title="增改"></a>增改</h3></li>
<li><code>updateByPrimaryKey</code>：通过主键进行数据修改，如果某一个值为null，也会将对应的字段改为null<ul>
<li><code>mapper.updateByPrimaryKey(new Emp(1,&quot;admin&quot;,22,null,&quot;456@qq.com&quot;,3));</code></li>
<li><img src="Resources/增删改测试结果1.png" alt=""></li>
</ul>
</li>
<li><code>updateByPrimaryKeySelective()</code>：通过主键进行选择性数据修改，如果某个值为null，则不修改这个字段<ul>
<li><code>mapper.updateByPrimaryKeySelective(new Emp(2,&quot;admin2&quot;,22,null,&quot;456@qq.com&quot;,3));</code></li>
<li><img src="Resources/增删改测试结果2.png" alt=""><h1 id="分页插件"><a href="#分页插件" class="headerlink" title="分页插件"></a>分页插件</h1><h2 id="分页插件使用步骤"><a href="#分页插件使用步骤" class="headerlink" title="分页插件使用步骤"></a>分页插件使用步骤</h2><h3 id="添加依赖-1"><a href="#添加依赖-1" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.github.pagehelper/pagehelper --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="配置分页插件"><a href="#配置分页插件" class="headerlink" title="配置分页插件"></a>配置分页插件</h3></li>
</ul>
</li>
<li>在MyBatis的核心配置文件（mybatis-config.xml）中配置插件</li>
<li><img src="Resources/配置分页插件.png" alt=""><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--设置分页插件--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">&quot;com.github.pagehelper.PageInterceptor&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="分页插件的使用"><a href="#分页插件的使用" class="headerlink" title="分页插件的使用"></a>分页插件的使用</h2><h3 id="开启分页功能"><a href="#开启分页功能" class="headerlink" title="开启分页功能"></a>开启分页功能</h3></li>
<li>在查询功能之前使用<code>PageHelper.startPage(int pageNum, int pageSize)</code>开启分页功能<ul>
<li>pageNum：当前页的页码  </li>
<li>pageSize：每页显示的条数<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPageHelper</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">	<span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">	<span class="type">SqlSessionFactoryBuilder</span> <span class="variable">sqlSessionFactoryBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>();</span><br><span class="line">	<span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> sqlSessionFactoryBuilder.build(is);</span><br><span class="line">	<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">	<span class="type">EmpMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmpMapper.class);</span><br><span class="line">	<span class="comment">//访问第一页，每页四条数据</span></span><br><span class="line">	PageHelper.startPage(<span class="number">1</span>,<span class="number">4</span>);</span><br><span class="line">	List&lt;Emp&gt; emps = mapper.selectByExample(<span class="literal">null</span>);</span><br><span class="line">	emps.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<p><img src="Resources/分页测试结果.png" alt=""></p>
<h3 id="分页相关数据"><a href="#分页相关数据" class="headerlink" title="分页相关数据"></a>分页相关数据</h3><h4 id="方法一：直接输出"><a href="#方法一：直接输出" class="headerlink" title="方法一：直接输出"></a>方法一：直接输出</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPageHelper</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">	<span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">	<span class="type">SqlSessionFactoryBuilder</span> <span class="variable">sqlSessionFactoryBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>();</span><br><span class="line">	<span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> sqlSessionFactoryBuilder.build(is);</span><br><span class="line">	<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">	<span class="type">EmpMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmpMapper.class);</span><br><span class="line">	<span class="comment">//访问第一页，每页四条数据</span></span><br><span class="line">	Page&lt;Object&gt; page = PageHelper.startPage(<span class="number">1</span>, <span class="number">4</span>);</span><br><span class="line">	List&lt;Emp&gt; emps = mapper.selectByExample(<span class="literal">null</span>);</span><br><span class="line">	<span class="comment">//在查询到List集合后，打印分页数据</span></span><br><span class="line">	System.out.println(page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>分页相关数据：  <figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">Page&#123;<span class="attribute">count</span>=<span class="literal">true</span>, <span class="attribute">pageNum</span>=1, <span class="attribute">pageSize</span>=4, <span class="attribute">startRow</span>=0, <span class="attribute">endRow</span>=4, <span class="attribute">total</span>=8, <span class="attribute">pages</span>=2, <span class="attribute">reasonable</span>=<span class="literal">false</span>, <span class="attribute">pageSizeZero</span>=<span class="literal">false</span>&#125;[Emp&#123;<span class="attribute">eid</span>=1, <span class="attribute">empName</span>=<span class="string">&#x27;admin&#x27;</span>, <span class="attribute">age</span>=22, <span class="attribute">sex</span>=<span class="string">&#x27;男&#x27;</span>, <span class="attribute">email</span>=<span class="string">&#x27;456@qq.com&#x27;</span>, <span class="attribute">did</span>=3&#125;, Emp&#123;<span class="attribute">eid</span>=2, <span class="attribute">empName</span>=<span class="string">&#x27;admin2&#x27;</span>, <span class="attribute">age</span>=22, <span class="attribute">sex</span>=<span class="string">&#x27;男&#x27;</span>, <span class="attribute">email</span>=<span class="string">&#x27;456@qq.com&#x27;</span>, <span class="attribute">did</span>=3&#125;, Emp&#123;<span class="attribute">eid</span>=3, <span class="attribute">empName</span>=<span class="string">&#x27;王五&#x27;</span>, <span class="attribute">age</span>=12, <span class="attribute">sex</span>=<span class="string">&#x27;女&#x27;</span>, <span class="attribute">email</span>=<span class="string">&#x27;123@qq.com&#x27;</span>, <span class="attribute">did</span>=3&#125;, Emp&#123;<span class="attribute">eid</span>=4, <span class="attribute">empName</span>=<span class="string">&#x27;赵六&#x27;</span>, <span class="attribute">age</span>=32, <span class="attribute">sex</span>=<span class="string">&#x27;男&#x27;</span>, <span class="attribute">email</span>=<span class="string">&#x27;123@qq.com&#x27;</span>, <span class="attribute">did</span>=1&#125;]</span><br></pre></td></tr></table></figure>
<h4 id="方法二使用PageInfo"><a href="#方法二使用PageInfo" class="headerlink" title="方法二使用PageInfo"></a>方法二使用PageInfo</h4></li>
<li>在查询获取list集合之后，使用<code>PageInfo&lt;T&gt; pageInfo = new PageInfo&lt;&gt;(List&lt;T&gt; list, intnavigatePages)</code>获取分页相关数据<ul>
<li>list：分页之后的数据  </li>
<li>navigatePages：导航分页的页码数<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPageHelper</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">	<span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">	<span class="type">SqlSessionFactoryBuilder</span> <span class="variable">sqlSessionFactoryBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>();</span><br><span class="line">	<span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> sqlSessionFactoryBuilder.build(is);</span><br><span class="line">	<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">	<span class="type">EmpMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmpMapper.class);</span><br><span class="line">	PageHelper.startPage(<span class="number">1</span>, <span class="number">4</span>);</span><br><span class="line">	List&lt;Emp&gt; emps = mapper.selectByExample(<span class="literal">null</span>);</span><br><span class="line">	PageInfo&lt;Emp&gt; page = <span class="keyword">new</span> <span class="title class_">PageInfo</span>&lt;&gt;(emps,<span class="number">5</span>);</span><br><span class="line">	System.out.println(page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li>分页相关数据：  <figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">PageInfo&#123;</span><br><span class="line"><span class="attribute">pageNum</span>=1, <span class="attribute">pageSize</span>=4, <span class="attribute">size</span>=4, <span class="attribute">startRow</span>=1, <span class="attribute">endRow</span>=4, <span class="attribute">total</span>=8, <span class="attribute">pages</span>=2, </span><br><span class="line"><span class="attribute">list</span>=Page&#123;<span class="attribute">count</span>=<span class="literal">true</span>, <span class="attribute">pageNum</span>=1, <span class="attribute">pageSize</span>=4, <span class="attribute">startRow</span>=0, <span class="attribute">endRow</span>=4, <span class="attribute">total</span>=8, <span class="attribute">pages</span>=2, <span class="attribute">reasonable</span>=<span class="literal">false</span>, <span class="attribute">pageSizeZero</span>=<span class="literal">false</span>&#125;[Emp&#123;<span class="attribute">eid</span>=1, <span class="attribute">empName</span>=<span class="string">&#x27;admin&#x27;</span>, <span class="attribute">age</span>=22, <span class="attribute">sex</span>=<span class="string">&#x27;男&#x27;</span>, <span class="attribute">email</span>=<span class="string">&#x27;456@qq.com&#x27;</span>, <span class="attribute">did</span>=3&#125;, Emp&#123;<span class="attribute">eid</span>=2, <span class="attribute">empName</span>=<span class="string">&#x27;admin2&#x27;</span>, <span class="attribute">age</span>=22, <span class="attribute">sex</span>=<span class="string">&#x27;男&#x27;</span>, <span class="attribute">email</span>=<span class="string">&#x27;456@qq.com&#x27;</span>, <span class="attribute">did</span>=3&#125;, Emp&#123;<span class="attribute">eid</span>=3, <span class="attribute">empName</span>=<span class="string">&#x27;王五&#x27;</span>, <span class="attribute">age</span>=12, <span class="attribute">sex</span>=<span class="string">&#x27;女&#x27;</span>, <span class="attribute">email</span>=<span class="string">&#x27;123@qq.com&#x27;</span>, <span class="attribute">did</span>=3&#125;, Emp&#123;<span class="attribute">eid</span>=4, <span class="attribute">empName</span>=<span class="string">&#x27;赵六&#x27;</span>, <span class="attribute">age</span>=32, <span class="attribute">sex</span>=<span class="string">&#x27;男&#x27;</span>, <span class="attribute">email</span>=<span class="string">&#x27;123@qq.com&#x27;</span>, <span class="attribute">did</span>=1&#125;], </span><br><span class="line"><span class="attribute">prePage</span>=0, <span class="attribute">nextPage</span>=2, <span class="attribute">isFirstPage</span>=<span class="literal">true</span>, <span class="attribute">isLastPage</span>=<span class="literal">false</span>, <span class="attribute">hasPreviousPage</span>=<span class="literal">false</span>, <span class="attribute">hasNextPage</span>=<span class="literal">true</span>, <span class="attribute">navigatePages</span>=5, <span class="attribute">navigateFirstPage</span>=1, <span class="attribute">navigateLastPage</span>=2, navigatepageNums=[1, 2]&#125;</span><br></pre></td></tr></table></figure></li>
<li>其中list中的数据等同于方法一中直接输出的page数据<h4 id="常用数据："><a href="#常用数据：" class="headerlink" title="常用数据："></a>常用数据：</h4></li>
<li>pageNum：当前页的页码  </li>
<li>pageSize：每页显示的条数  </li>
<li>size：当前页显示的真实条数  </li>
<li>total：总记录数  </li>
<li>pages：总页数  </li>
<li>prePage：上一页的页码  </li>
<li>nextPage：下一页的页码</li>
<li>isFirstPage/isLastPage：是否为第一页/最后一页  </li>
<li>hasPreviousPage/hasNextPage：是否存在上一页/下一页  </li>
<li>navigatePages：导航分页的页码数  </li>
<li>navigatepageNums：导航分页的页码，[1,2,3,4,5]</li>
</ul>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
  </entry>
  <entry>
    <title>SpringMVC</title>
    <url>/posts/12ac.html</url>
    <content><![CDATA[<meta name="referrer" content="no-referrer" />

<p>[TOC]</p>
<h1 id="一、SpringMVC简介"><a href="#一、SpringMVC简介" class="headerlink" title="一、SpringMVC简介"></a>一、SpringMVC简介</h1><h3 id="1、什么是MVC"><a href="#1、什么是MVC" class="headerlink" title="1、什么是MVC"></a>1、什么是MVC</h3><p>MVC是一种软件架构的思想，将软件按照模型、视图、控制器来划分</p>
<p>M：Model，模型层，指工程中的JavaBean，作用是处理数据</p>
<p>JavaBean分为两类：</p>
<ul>
<li>一类称为实体类Bean：专门存储业务数据的，如 Student、User 等</li>
<li>一类称为业务处理 Bean：指 Service 或 Dao 对象，专门用于处理业务逻辑和数据访问。</li>
</ul>
<p>V：View，视图层，指工程中的html或jsp等页面，作用是与用户进行交互，展示数据</p>
<p>C：Controller，控制层，指工程中的servlet，作用是接收请求和响应浏览器</p>
<p>MVC的工作流程：<br>用户通过视图层发送请求到服务器，在服务器中请求被Controller接收，Controller调用相应的Model层处理请求，处理完毕将结果返回到Controller，Controller再根据请求处理的结果找到相应的View视图，渲染数据后最终响应给浏览器</p>
<h3 id="2、什么是SpringMVC"><a href="#2、什么是SpringMVC" class="headerlink" title="2、什么是SpringMVC"></a>2、什么是SpringMVC</h3><p>SpringMVC是Spring的一个后续产品，是Spring的一个子项目</p>
<p>SpringMVC 是 Spring 为表述层开发提供的一整套完备的解决方案。在表述层框架历经 Strust、WebWork、Strust2 等诸多产品的历代更迭之后，目前业界普遍选择了 SpringMVC 作为 Java EE 项目表述层开发的<strong>首选方案</strong>。</p>
<blockquote>
<p>注：三层架构分为表述层（或表示层）、业务逻辑层、数据访问层，表述层表示前台页面和后台servlet</p>
</blockquote>
<h3 id="3、SpringMVC的特点"><a href="#3、SpringMVC的特点" class="headerlink" title="3、SpringMVC的特点"></a>3、SpringMVC的特点</h3><ul>
<li><strong>Spring 家族原生产品</strong>，与 IOC 容器等基础设施无缝对接</li>
<li><strong>基于原生的Servlet</strong>，通过了功能强大的<strong>前端控制器DispatcherServlet</strong>，对请求和响应进行统一处理</li>
<li>表述层各细分领域需要解决的问题<strong>全方位覆盖</strong>，提供<strong>全面解决方案</strong></li>
<li><strong>代码清新简洁</strong>，大幅度提升开发效率</li>
<li>内部组件化程度高，可插拔式组件<strong>即插即用</strong>，想要什么功能配置相应组件即可</li>
<li><strong>性能卓著</strong>，尤其适合现代大型、超大型互联网项目要求</li>
</ul>
<h1 id="二、HelloWorld"><a href="#二、HelloWorld" class="headerlink" title="二、HelloWorld"></a>二、HelloWorld</h1><h3 id="1、开发环境"><a href="#1、开发环境" class="headerlink" title="1、开发环境"></a>1、开发环境</h3><p>IDE：idea 2019.2</p>
<p>构建工具：maven3.5.4</p>
<p>服务器：tomcat7</p>
<p>Spring版本：5.3.1</p>
<h3 id="2、创建maven工程"><a href="#2、创建maven工程" class="headerlink" title="2、创建maven工程"></a>2、创建maven工程</h3><h5 id="a-gt-添加web模块"><a href="#a-gt-添加web模块" class="headerlink" title="a&gt;添加web模块"></a>a&gt;添加web模块</h5><h5 id="b-gt-打包方式：war"><a href="#b-gt-打包方式：war" class="headerlink" title="b&gt;打包方式：war"></a>b&gt;打包方式：war</h5><h5 id="c-gt-引入依赖"><a href="#c-gt-引入依赖" class="headerlink" title="c&gt;引入依赖"></a>c&gt;引入依赖</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- SpringMVC --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 日志 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- ServletAPI --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Spring5和Thymeleaf整合包 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.thymeleaf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-spring5<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.12.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>注：由于 Maven 的传递性，我们不必将所有需要的包全部配置依赖，而是配置最顶端的依赖，其他靠传递性导入。</p>
<p><img src="img\img001.png" alt="images"></p>
<h3 id="3、配置web-xml"><a href="#3、配置web-xml" class="headerlink" title="3、配置web.xml"></a>3、配置web.xml</h3><p>注册SpringMVC的前端控制器DispatcherServlet</p>
<h5 id="a-gt-默认配置方式"><a href="#a-gt-默认配置方式" class="headerlink" title="a&gt;默认配置方式"></a>a&gt;默认配置方式</h5><p>此配置作用下，SpringMVC的配置文件默认位于WEB-INF下，默认名称为\<servlet-name>-servlet.xml，例如，以下配置所对应SpringMVC的配置文件位于WEB-INF下，文件名为springMVC-servlet.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置SpringMVC的前端控制器，对浏览器发送的请求统一进行处理 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        设置springMVC的核心控制器所能处理的请求的请求路径</span></span><br><span class="line"><span class="comment">        /所匹配的请求可以是/login或.html或.js或.css方式的请求路径</span></span><br><span class="line"><span class="comment">        但是/不能匹配.jsp请求路径的请求</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="b-gt-扩展配置方式"><a href="#b-gt-扩展配置方式" class="headerlink" title="b&gt;扩展配置方式"></a>b&gt;扩展配置方式</h5><p>可通过init-param标签设置SpringMVC配置文件的位置和名称，通过load-on-startup标签设置SpringMVC前端控制器DispatcherServlet的初始化时间</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置SpringMVC的前端控制器，对浏览器发送的请求统一进行处理 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 通过初始化参数指定SpringMVC配置文件的位置和名称 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- contextConfigLocation为固定值 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 使用classpath:表示从类路径查找配置文件，例如maven工程中的src/main/resources --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springMVC.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment"> 		作为框架的核心组件，在启动过程中有大量的初始化操作要做</span></span><br><span class="line"><span class="comment">		而这些操作放在第一次请求时才执行会严重影响访问速度</span></span><br><span class="line"><span class="comment">		因此需要通过此标签将启动控制DispatcherServlet的初始化时间提前到服务器启动时</span></span><br><span class="line"><span class="comment">	--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        设置springMVC的核心控制器所能处理的请求的请求路径</span></span><br><span class="line"><span class="comment">        /所匹配的请求可以是/login或.html或.js或.css方式的请求路径</span></span><br><span class="line"><span class="comment">        但是/不能匹配.jsp请求路径的请求</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：</p>
<p>\<url-pattern>标签中使用/和/*的区别：</p>
<p>/所匹配的请求可以是/login或.html或.js或.css方式的请求路径，但是/不能匹配.jsp请求路径的请求</p>
<p>因此就可以避免在访问jsp页面时，该请求被DispatcherServlet处理，从而找不到相应的页面</p>
<p>/<em>则能够匹配所有请求，例如在使用过滤器时，若需要对所有请求进行过滤，就需要使用/\</em>的写法</p>
</blockquote>
<h3 id="4、创建请求控制器"><a href="#4、创建请求控制器" class="headerlink" title="4、创建请求控制器"></a>4、创建请求控制器</h3><p>由于前端控制器对浏览器发送的请求进行了统一的处理，但是具体的请求有不同的处理过程，因此需要创建处理具体请求的类，即请求控制器</p>
<p>请求控制器中每一个处理请求的方法成为控制器方法</p>
<p>因为SpringMVC的控制器由一个POJO（普通的Java类）担任，因此需要通过@Controller注解将其标识为一个控制层组件，交给Spring的IoC容器管理，此时SpringMVC才能够识别控制器的存在</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloController</span> &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="5、创建springMVC的配置文件"><a href="#5、创建springMVC的配置文件" class="headerlink" title="5、创建springMVC的配置文件"></a>5、创建springMVC的配置文件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 自动扫描包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.atguigu.mvc.controller&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置Thymeleaf视图解析器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;viewResolver&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.thymeleaf.spring5.view.ThymeleafViewResolver&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;order&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;characterEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;templateEngine&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.thymeleaf.spring5.SpringTemplateEngine&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;templateResolver&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">                    <span class="comment">&lt;!-- 视图前缀 --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/templates/&quot;</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">                    <span class="comment">&lt;!-- 视图后缀 --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.html&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;templateMode&quot;</span> <span class="attr">value</span>=<span class="string">&quot;HTML5&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;characterEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">   处理静态资源，例如html、js、css、jpg</span></span><br><span class="line"><span class="comment">  若只设置该标签，则只能访问静态资源，其他请求则无法访问</span></span><br><span class="line"><span class="comment">  此时必须设置&lt;mvc:annotation-driven/&gt;解决问题</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 开启mvc注解驱动 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 处理响应中文内容乱码 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.StringHttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;defaultCharset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;supportedMediaTypes&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>text/html<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>application/json<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="6、测试HelloWorld"><a href="#6、测试HelloWorld" class="headerlink" title="6、测试HelloWorld"></a>6、测试HelloWorld</h3><h5 id="a-gt-实现对首页的访问"><a href="#a-gt-实现对首页的访问" class="headerlink" title="a&gt;实现对首页的访问"></a>a&gt;实现对首页的访问</h5><p>在请求控制器中创建处理请求的方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// @RequestMapping注解：处理请求和控制器方法之间的映射关系</span></span><br><span class="line"><span class="comment">// @RequestMapping注解的value属性可以通过请求地址匹配请求，/表示的当前工程的上下文路径</span></span><br><span class="line"><span class="comment">// localhost:8080/springMVC/</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">index</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//设置视图名称</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="b-gt-通过超链接跳转到指定页面"><a href="#b-gt-通过超链接跳转到指定页面" class="headerlink" title="b&gt;通过超链接跳转到指定页面"></a>b&gt;通过超链接跳转到指定页面</h5><p>在主页index.html中设置超链接</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/hello&#125;&quot;</span>&gt;</span>HelloWorld<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>在请求控制器中创建处理请求的方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">HelloWorld</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;target&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="7、总结"><a href="#7、总结" class="headerlink" title="7、总结"></a>7、总结</h3><p>浏览器发送请求，若请求地址符合前端控制器的url-pattern，该请求就会被前端控制器DispatcherServlet处理。前端控制器会读取SpringMVC的核心配置文件，通过扫描组件找到控制器，将请求地址和控制器中@RequestMapping注解的value属性值进行匹配，若匹配成功，该注解所标识的控制器方法就是处理请求的方法。处理请求的方法需要返回一个字符串类型的视图名称，该视图名称会被视图解析器解析，加上前缀和后缀组成视图的路径，通过Thymeleaf对视图进行渲染，最终转发到视图所对应页面</p>
<h1 id="三、-RequestMapping注解"><a href="#三、-RequestMapping注解" class="headerlink" title="三、@RequestMapping注解"></a>三、@RequestMapping注解</h1><h3 id="1、-RequestMapping注解的功能"><a href="#1、-RequestMapping注解的功能" class="headerlink" title="1、@RequestMapping注解的功能"></a>1、@RequestMapping注解的功能</h3><p>从注解名称上我们可以看到，@RequestMapping注解的作用就是将请求和处理请求的控制器方法关联起来，建立映射关系。</p>
<p>SpringMVC 接收到指定的请求，就会来找到在映射关系中对应的控制器方法来处理这个请求。</p>
<h3 id="2、-RequestMapping注解的位置"><a href="#2、-RequestMapping注解的位置" class="headerlink" title="2、@RequestMapping注解的位置"></a>2、@RequestMapping注解的位置</h3><p>@RequestMapping标识一个类：设置映射请求的请求路径的初始信息</p>
<p>@RequestMapping标识一个方法：设置映射请求请求路径的具体信息</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RequestMappingController</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//此时请求映射所映射的请求的请求路径为：/test/testRequestMapping</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/testRequestMapping&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">testRequestMapping</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3、-RequestMapping注解的value属性"><a href="#3、-RequestMapping注解的value属性" class="headerlink" title="3、@RequestMapping注解的value属性"></a>3、@RequestMapping注解的value属性</h3><p>@RequestMapping注解的value属性通过请求的请求地址匹配请求映射</p>
<p>@RequestMapping注解的value属性是一个字符串类型的数组，表示该请求映射能够匹配多个请求地址所对应的请求</p>
<p>@RequestMapping注解的value属性必须设置，至少通过请求地址匹配请求映射</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/testRequestMapping&#125;&quot;</span>&gt;</span>测试@RequestMapping的value属性--&gt;/testRequestMapping<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/test&#125;&quot;</span>&gt;</span>测试@RequestMapping的value属性--&gt;/test<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(</span></span><br><span class="line"><span class="meta">        value = &#123;&quot;/testRequestMapping&quot;, &quot;/test&quot;&#125;</span></span><br><span class="line"><span class="meta">)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testRequestMapping</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4、-RequestMapping注解的method属性"><a href="#4、-RequestMapping注解的method属性" class="headerlink" title="4、@RequestMapping注解的method属性"></a>4、@RequestMapping注解的method属性</h3><p>@RequestMapping注解的method属性通过请求的请求方式（get或post）匹配请求映射</p>
<p>@RequestMapping注解的method属性是一个RequestMethod类型的数组，表示该请求映射能够匹配多种请求方式的请求</p>
<p>若当前请求的请求地址满足请求映射的value属性，但是请求方式不满足method属性，则浏览器报错405：Request method ‘POST’ not supported</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/test&#125;&quot;</span>&gt;</span>测试@RequestMapping的value属性--&gt;/test<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/test&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(</span></span><br><span class="line"><span class="meta">        value = &#123;&quot;/testRequestMapping&quot;, &quot;/test&quot;&#125;,</span></span><br><span class="line"><span class="meta">        method = &#123;RequestMethod.GET, RequestMethod.POST&#125;</span></span><br><span class="line"><span class="meta">)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testRequestMapping</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：</p>
<p>1、对于处理指定请求方式的控制器方法，SpringMVC中提供了@RequestMapping的派生注解</p>
<p>处理get请求的映射—&gt;@GetMapping</p>
<p>处理post请求的映射—&gt;@PostMapping</p>
<p>处理put请求的映射—&gt;@PutMapping</p>
<p>处理delete请求的映射—&gt;@DeleteMapping</p>
<p>2、常用的请求方式有get，post，put，delete</p>
<p>但是目前浏览器只支持get和post，若在form表单提交时，为method设置了其他请求方式的字符串（put或delete），则按照默认的请求方式get处理</p>
<p>若要发送put和delete请求，则需要通过spring提供的过滤器HiddenHttpMethodFilter，在RESTful部分会讲到</p>
</blockquote>
<h3 id="5、-RequestMapping注解的params属性（了解）"><a href="#5、-RequestMapping注解的params属性（了解）" class="headerlink" title="5、@RequestMapping注解的params属性（了解）"></a>5、@RequestMapping注解的params属性（了解）</h3><p>@RequestMapping注解的params属性通过请求的请求参数匹配请求映射</p>
<p>@RequestMapping注解的params属性是一个字符串类型的数组，可以通过四种表达式设置请求参数和请求映射的匹配关系</p>
<p>“param”：要求请求映射所匹配的请求必须携带param请求参数</p>
<p>“!param”：要求请求映射所匹配的请求必须不能携带param请求参数</p>
<p>“param=value”：要求请求映射所匹配的请求必须携带param请求参数且param=value</p>
<p>“param!=value”：要求请求映射所匹配的请求必须携带param请求参数但是param!=value</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/test(username=&#x27;admin&#x27;,password=123456)&quot;</span>&gt;</span>测试@RequestMapping的params属性--&gt;/test<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(</span></span><br><span class="line"><span class="meta">        value = &#123;&quot;/testRequestMapping&quot;, &quot;/test&quot;&#125;</span></span><br><span class="line"><span class="meta">        ,method = &#123;RequestMethod.GET, RequestMethod.POST&#125;</span></span><br><span class="line"><span class="meta">        ,params = &#123;&quot;username&quot;,&quot;password!=123456&quot;&#125;</span></span><br><span class="line"><span class="meta">)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testRequestMapping</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：</p>
<p>若当前请求满足@RequestMapping注解的value和method属性，但是不满足params属性，此时页面回报错400：Parameter conditions “username, password!=123456” not met for actual request parameters: username={admin}, password={123456}</p>
</blockquote>
<h3 id="6、-RequestMapping注解的headers属性（了解）"><a href="#6、-RequestMapping注解的headers属性（了解）" class="headerlink" title="6、@RequestMapping注解的headers属性（了解）"></a>6、@RequestMapping注解的headers属性（了解）</h3><p>@RequestMapping注解的headers属性通过请求的请求头信息匹配请求映射</p>
<p>@RequestMapping注解的headers属性是一个字符串类型的数组，可以通过四种表达式设置请求头信息和请求映射的匹配关系</p>
<p>“header”：要求请求映射所匹配的请求必须携带header请求头信息</p>
<p>“!header”：要求请求映射所匹配的请求必须不能携带header请求头信息</p>
<p>“header=value”：要求请求映射所匹配的请求必须携带header请求头信息且header=value</p>
<p>“header!=value”：要求请求映射所匹配的请求必须携带header请求头信息且header!=value</p>
<p>若当前请求满足@RequestMapping注解的value和method属性，但是不满足headers属性，此时页面显示404错误，即资源未找到</p>
<h3 id="7、SpringMVC支持ant风格的路径"><a href="#7、SpringMVC支持ant风格的路径" class="headerlink" title="7、SpringMVC支持ant风格的路径"></a>7、SpringMVC支持ant风格的路径</h3><p>？：表示任意的单个字符</p>
<p>*：表示任意的0个或多个字符</p>
<p>**：表示任意的一层或多层目录</p>
<p>注意：在使用*<em>时，只能使用/*</em>/xxx的方式</p>
<h3 id="8、SpringMVC支持路径中的占位符（重点）"><a href="#8、SpringMVC支持路径中的占位符（重点）" class="headerlink" title="8、SpringMVC支持路径中的占位符（重点）"></a>8、SpringMVC支持路径中的占位符（重点）</h3><p>原始方式：/deleteUser?id=1</p>
<p>rest方式：/deleteUser/1</p>
<p>SpringMVC路径中的占位符常用于RESTful风格中，当请求路径中将某些数据通过路径的方式传输到服务器中，就可以在相应的@RequestMapping注解的value属性中通过占位符{xxx}表示传输的数据，在通过@PathVariable注解，将占位符所表示的数据赋值给控制器方法的形参</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/testRest/1/admin&#125;&quot;</span>&gt;</span>测试路径中的占位符--&gt;/testRest<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testRest/&#123;id&#125;/&#123;username&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testRest</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> String id, <span class="meta">@PathVariable(&quot;username&quot;)</span> String username)</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;id:&quot;</span>+id+<span class="string">&quot;,username:&quot;</span>+username);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//最终输出的内容为--&gt;id:1,username:admin</span></span><br></pre></td></tr></table></figure>
<h1 id="四、SpringMVC获取请求参数"><a href="#四、SpringMVC获取请求参数" class="headerlink" title="四、SpringMVC获取请求参数"></a>四、SpringMVC获取请求参数</h1><h3 id="1、通过ServletAPI获取"><a href="#1、通过ServletAPI获取" class="headerlink" title="1、通过ServletAPI获取"></a>1、通过ServletAPI获取</h3><p>将HttpServletRequest作为控制器方法的形参，此时HttpServletRequest类型的参数表示封装了当前请求的请求报文的对象</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testParam&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testParam</span><span class="params">(HttpServletRequest request)</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;username:&quot;</span>+username+<span class="string">&quot;,password:&quot;</span>+password);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2、通过控制器方法的形参获取请求参数"><a href="#2、通过控制器方法的形参获取请求参数" class="headerlink" title="2、通过控制器方法的形参获取请求参数"></a>2、通过控制器方法的形参获取请求参数</h3><p>在控制器方法的形参位置，设置和请求参数同名的形参，当浏览器发送请求，匹配到请求映射时，在DispatcherServlet中就会将请求参数赋值给相应的形参</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/testParam(username=&#x27;admin&#x27;,password=123456)&#125;&quot;</span>&gt;</span>测试获取请求参数--&gt;/testParam<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testParam&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testParam</span><span class="params">(String username, String password)</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;username:&quot;</span>+username+<span class="string">&quot;,password:&quot;</span>+password);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：</p>
<p>若请求所传输的请求参数中有多个同名的请求参数，此时可以在控制器方法的形参中设置字符串数组或者字符串类型的形参接收此请求参数</p>
<p>若使用字符串数组类型的形参，此参数的数组中包含了每一个数据</p>
<p>若使用字符串类型的形参，此参数的值为每个数据中间使用逗号拼接的结果</p>
</blockquote>
<h3 id="3、-RequestParam"><a href="#3、-RequestParam" class="headerlink" title="3、@RequestParam"></a>3、@RequestParam</h3><p>@RequestParam是将请求参数和控制器方法的形参创建映射关系</p>
<p>@RequestParam注解一共有三个属性：</p>
<p>value：指定为形参赋值的请求参数的参数名</p>
<p>required：设置是否必须传输此请求参数，默认值为true</p>
<p>若设置为true时，则当前请求必须传输value所指定的请求参数，若没有传输该请求参数，且没有设置defaultValue属性，则页面报错400：Required String parameter ‘xxx’ is not present；若设置为false，则当前请求不是必须传输value所指定的请求参数，若没有传输，则注解所标识的形参的值为null</p>
<p>defaultValue：不管required属性值为true或false，当value所指定的请求参数没有传输或传输的值为””时，则使用默认值为形参赋值</p>
<h3 id="4、-RequestHeader"><a href="#4、-RequestHeader" class="headerlink" title="4、@RequestHeader"></a>4、@RequestHeader</h3><p>@RequestHeader是将请求头信息和控制器方法的形参创建映射关系</p>
<p>@RequestHeader注解一共有三个属性：value、required、defaultValue，用法同@RequestParam</p>
<h3 id="5、-CookieValue"><a href="#5、-CookieValue" class="headerlink" title="5、@CookieValue"></a>5、@CookieValue</h3><p>@CookieValue是将cookie数据和控制器方法的形参创建映射关系</p>
<p>@CookieValue注解一共有三个属性：value、required、defaultValue，用法同@RequestParam</p>
<h3 id="6、通过POJO获取请求参数"><a href="#6、通过POJO获取请求参数" class="headerlink" title="6、通过POJO获取请求参数"></a>6、通过POJO获取请求参数</h3><p>可以在控制器方法的形参位置设置一个实体类类型的形参，此时若浏览器传输的请求参数的参数名和实体类中的属性名一致，那么请求参数就会为此属性赋值</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/testpojo&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    性别：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span>&gt;</span>男<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    邮箱：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testpojo&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testPOJO</span><span class="params">(User user)</span>&#123;</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//最终结果--&gt;User&#123;id=null, username=&#x27;张三&#x27;, password=&#x27;123&#x27;, age=23, sex=&#x27;男&#x27;, email=&#x27;123@qq.com&#x27;&#125;</span></span><br></pre></td></tr></table></figure>
<h3 id="7、解决获取请求参数的乱码问题"><a href="#7、解决获取请求参数的乱码问题" class="headerlink" title="7、解决获取请求参数的乱码问题"></a>7、解决获取请求参数的乱码问题</h3><p>解决获取请求参数的乱码问题，可以使用SpringMVC提供的编码过滤器CharacterEncodingFilter，但是必须在web.xml中进行注册</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置springMVC的编码过滤器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceResponseEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：</p>
<p>SpringMVC中处理编码的过滤器一定要配置到其他过滤器之前，否则无效</p>
</blockquote>
<h1 id="五、域对象共享数据"><a href="#五、域对象共享数据" class="headerlink" title="五、域对象共享数据"></a>五、域对象共享数据</h1><h3 id="1、使用ServletAPI向request域对象共享数据"><a href="#1、使用ServletAPI向request域对象共享数据" class="headerlink" title="1、使用ServletAPI向request域对象共享数据"></a>1、使用ServletAPI向request域对象共享数据</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testServletAPI&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testServletAPI</span><span class="params">(HttpServletRequest request)</span>&#123;</span><br><span class="line">    request.setAttribute(<span class="string">&quot;testScope&quot;</span>, <span class="string">&quot;hello,servletAPI&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2、使用ModelAndView向request域对象共享数据"><a href="#2、使用ModelAndView向request域对象共享数据" class="headerlink" title="2、使用ModelAndView向request域对象共享数据"></a>2、使用ModelAndView向request域对象共享数据</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testModelAndView&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ModelAndView <span class="title function_">testModelAndView</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * ModelAndView有Model和View的功能</span></span><br><span class="line"><span class="comment">     * Model主要用于向请求域共享数据</span></span><br><span class="line"><span class="comment">     * View主要用于设置视图，实现页面跳转</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">ModelAndView</span> <span class="variable">mav</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>();</span><br><span class="line">    <span class="comment">//向请求域共享数据</span></span><br><span class="line">    mav.addObject(<span class="string">&quot;testScope&quot;</span>, <span class="string">&quot;hello,ModelAndView&quot;</span>);</span><br><span class="line">    <span class="comment">//设置视图，实现页面跳转</span></span><br><span class="line">    mav.setViewName(<span class="string">&quot;success&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> mav;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3、使用Model向request域对象共享数据"><a href="#3、使用Model向request域对象共享数据" class="headerlink" title="3、使用Model向request域对象共享数据"></a>3、使用Model向request域对象共享数据</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testModel&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testModel</span><span class="params">(Model model)</span>&#123;</span><br><span class="line">    model.addAttribute(<span class="string">&quot;testScope&quot;</span>, <span class="string">&quot;hello,Model&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4、使用map向request域对象共享数据"><a href="#4、使用map向request域对象共享数据" class="headerlink" title="4、使用map向request域对象共享数据"></a>4、使用map向request域对象共享数据</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testMap&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testMap</span><span class="params">(Map&lt;String, Object&gt; map)</span>&#123;</span><br><span class="line">    map.put(<span class="string">&quot;testScope&quot;</span>, <span class="string">&quot;hello,Map&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="5、使用ModelMap向request域对象共享数据"><a href="#5、使用ModelMap向request域对象共享数据" class="headerlink" title="5、使用ModelMap向request域对象共享数据"></a>5、使用ModelMap向request域对象共享数据</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testModelMap&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testModelMap</span><span class="params">(ModelMap modelMap)</span>&#123;</span><br><span class="line">    modelMap.addAttribute(<span class="string">&quot;testScope&quot;</span>, <span class="string">&quot;hello,ModelMap&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="6、Model、ModelMap、Map的关系"><a href="#6、Model、ModelMap、Map的关系" class="headerlink" title="6、Model、ModelMap、Map的关系"></a>6、Model、ModelMap、Map的关系</h3><p>Model、ModelMap、Map类型的参数其实本质上都是 BindingAwareModelMap 类型的</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">public interface <span class="type">Model</span>&#123;&#125;</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">ModelMap</span> <span class="keyword">extends</span> <span class="title">LinkedHashMap&lt;String</span>, <span class="title">Object&gt;</span> </span>&#123;&#125;</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">ExtendedModelMap</span> <span class="keyword">extends</span> <span class="title">ModelMap</span> <span class="title">implements</span> <span class="title">Model</span> </span>&#123;&#125;</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">BindingAwareModelMap</span> <span class="keyword">extends</span> <span class="title">ExtendedModelMap</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure>
<h3 id="7、向session域共享数据"><a href="#7、向session域共享数据" class="headerlink" title="7、向session域共享数据"></a>7、向session域共享数据</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testSession&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testSession</span><span class="params">(HttpSession session)</span>&#123;</span><br><span class="line">    session.setAttribute(<span class="string">&quot;testSessionScope&quot;</span>, <span class="string">&quot;hello,session&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="8、向application域共享数据"><a href="#8、向application域共享数据" class="headerlink" title="8、向application域共享数据"></a>8、向application域共享数据</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testApplication&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testApplication</span><span class="params">(HttpSession session)</span>&#123;</span><br><span class="line">	<span class="type">ServletContext</span> <span class="variable">application</span> <span class="operator">=</span> session.getServletContext();</span><br><span class="line">    application.setAttribute(<span class="string">&quot;testApplicationScope&quot;</span>, <span class="string">&quot;hello,application&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="六、SpringMVC的视图"><a href="#六、SpringMVC的视图" class="headerlink" title="六、SpringMVC的视图"></a>六、SpringMVC的视图</h1><p>SpringMVC中的视图是View接口，视图的作用渲染数据，将模型Model中的数据展示给用户</p>
<p>SpringMVC视图的种类很多，默认有转发视图和重定向视图</p>
<p>当工程引入jstl的依赖，转发视图会自动转换为JstlView</p>
<p>若使用的视图技术为Thymeleaf，在SpringMVC的配置文件中配置了Thymeleaf的视图解析器，由此视图解析器解析之后所得到的是ThymeleafView</p>
<h3 id="1、ThymeleafView"><a href="#1、ThymeleafView" class="headerlink" title="1、ThymeleafView"></a>1、ThymeleafView</h3><p>当控制器方法中所设置的视图名称没有任何前缀时，此时的视图名称会被SpringMVC配置文件中所配置的视图解析器解析，视图名称拼接视图前缀和视图后缀所得到的最终路径，会通过转发的方式实现跳转</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testHello&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testHello</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="img/img002.png" alt=""></p>
<h3 id="2、转发视图"><a href="#2、转发视图" class="headerlink" title="2、转发视图"></a>2、转发视图</h3><p>SpringMVC中默认的转发视图是InternalResourceView</p>
<p>SpringMVC中创建转发视图的情况：</p>
<p>当控制器方法中所设置的视图名称以”forward:”为前缀时，创建InternalResourceView视图，此时的视图名称不会被SpringMVC配置文件中所配置的视图解析器解析，而是会将前缀”forward:”去掉，剩余部分作为最终路径通过转发的方式实现跳转</p>
<p>例如”forward:/“，”forward:/employee”</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testForward&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testForward</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;forward:/testHello&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="img/img003.png" alt="image-20210706201316593"></p>
<h3 id="3、重定向视图"><a href="#3、重定向视图" class="headerlink" title="3、重定向视图"></a>3、重定向视图</h3><p>SpringMVC中默认的重定向视图是RedirectView</p>
<p>当控制器方法中所设置的视图名称以”redirect:”为前缀时，创建RedirectView视图，此时的视图名称不会被SpringMVC配置文件中所配置的视图解析器解析，而是会将前缀”redirect:”去掉，剩余部分作为最终路径通过重定向的方式实现跳转</p>
<p>例如”redirect:/“，”redirect:/employee”</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testRedirect&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testRedirect</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;redirect:/testHello&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="img/img004.png" alt="image-20210706201602267"></p>
<blockquote>
<p>注：</p>
<p>重定向视图在解析时，会先将redirect:前缀去掉，然后会判断剩余部分是否以/开头，若是则会自动拼接上下文路径</p>
</blockquote>
<h3 id="4、视图控制器view-controller"><a href="#4、视图控制器view-controller" class="headerlink" title="4、视图控制器view-controller"></a>4、视图控制器view-controller</h3><p>当控制器方法中，仅仅用来实现页面跳转，即只需要设置视图名称时，可以将处理器方法使用view-controller标签进行表示</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">	path：设置处理的请求地址</span></span><br><span class="line"><span class="comment">	view-name：设置请求地址所对应的视图名称</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/testView&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;success&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">mvc:view-controller</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：</p>
<p>当SpringMVC中设置任何一个view-controller时，其他控制器中的请求映射将全部失效，此时需要在SpringMVC的核心配置文件中设置开启mvc注解驱动的标签：</p>
<mvc:annotation-driven />

</blockquote>
<h1 id="七、RESTful"><a href="#七、RESTful" class="headerlink" title="七、RESTful"></a>七、RESTful</h1><h3 id="1、RESTful简介"><a href="#1、RESTful简介" class="headerlink" title="1、RESTful简介"></a>1、RESTful简介</h3><p>REST：<strong>Re</strong>presentational <strong>S</strong>tate <strong>T</strong>ransfer，表现层资源状态转移。</p>
<h5 id="a-gt-资源"><a href="#a-gt-资源" class="headerlink" title="a&gt;资源"></a>a&gt;资源</h5><p>资源是一种看待服务器的方式，即，将服务器看作是由很多离散的资源组成。每个资源是服务器上一个可命名的抽象概念。因为资源是一个抽象的概念，所以它不仅仅能代表服务器文件系统中的一个文件、数据库中的一张表等等具体的东西，可以将资源设计的要多抽象有多抽象，只要想象力允许而且客户端应用开发者能够理解。与面向对象设计类似，资源是以名词为核心来组织的，首先关注的是名词。一个资源可以由一个或多个URI来标识。URI既是资源的名称，也是资源在Web上的地址。对某个资源感兴趣的客户端应用，可以通过资源的URI与其进行交互。</p>
<h5 id="b-gt-资源的表述"><a href="#b-gt-资源的表述" class="headerlink" title="b&gt;资源的表述"></a>b&gt;资源的表述</h5><p>资源的表述是一段对于资源在某个特定时刻的状态的描述。可以在客户端-服务器端之间转移（交换）。资源的表述可以有多种格式，例如HTML/XML/JSON/纯文本/图片/视频/音频等等。资源的表述格式可以通过协商机制来确定。请求-响应方向的表述通常使用不同的格式。</p>
<h5 id="c-gt-状态转移"><a href="#c-gt-状态转移" class="headerlink" title="c&gt;状态转移"></a>c&gt;状态转移</h5><p>状态转移说的是：在客户端和服务器端之间转移（transfer）代表资源状态的表述。通过转移和操作资源的表述，来间接实现操作资源的目的。</p>
<h3 id="2、RESTful的实现"><a href="#2、RESTful的实现" class="headerlink" title="2、RESTful的实现"></a>2、RESTful的实现</h3><p>具体说，就是 HTTP 协议里面，四个表示操作方式的动词：GET、POST、PUT、DELETE。</p>
<p>它们分别对应四种基本操作：GET 用来获取资源，POST 用来新建资源，PUT 用来更新资源，DELETE 用来删除资源。</p>
<p>REST 风格提倡 URL 地址使用统一的风格设计，从前到后各个单词使用斜杠分开，不使用问号键值对方式携带请求参数，而是将要发送给服务器的数据作为 URL 地址的一部分，以保证整体风格的一致性。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>操作</th>
<th>传统方式</th>
<th>REST风格</th>
</tr>
</thead>
<tbody>
<tr>
<td>查询操作</td>
<td>getUserById?id=1</td>
<td>user/1—&gt;get请求方式</td>
</tr>
<tr>
<td>保存操作</td>
<td>saveUser</td>
<td>user—&gt;post请求方式</td>
</tr>
<tr>
<td>删除操作</td>
<td>deleteUser?id=1</td>
<td>user/1—&gt;delete请求方式</td>
</tr>
<tr>
<td>更新操作</td>
<td>updateUser</td>
<td>user—&gt;put请求方式</td>
</tr>
</tbody>
</table>
</div>
<h3 id="3、HiddenHttpMethodFilter"><a href="#3、HiddenHttpMethodFilter" class="headerlink" title="3、HiddenHttpMethodFilter"></a>3、HiddenHttpMethodFilter</h3><p>由于浏览器只支持发送get和post方式的请求，那么该如何发送put和delete请求呢？</p>
<p>SpringMVC 提供了 <strong>HiddenHttpMethodFilter</strong> 帮助我们<strong>将 POST 请求转换为 DELETE 或 PUT 请求</strong></p>
<p><strong>HiddenHttpMethodFilter</strong> 处理put和delete请求的条件：</p>
<p>a&gt;当前请求的请求方式必须为post</p>
<p>b&gt;当前请求必须传输请求参数_method</p>
<p>满足以上条件，<strong>HiddenHttpMethodFilter</strong> 过滤器就会将当前请求的请求方式转换为请求参数_method的值，因此请求参数_method的值才是最终的请求方式</p>
<p>在web.xml中注册<strong>HiddenHttpMethodFilter</strong> </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：</p>
<p>目前为止，SpringMVC中提供了两个过滤器：CharacterEncodingFilter和HiddenHttpMethodFilter</p>
<p>在web.xml中注册时，必须先注册CharacterEncodingFilter，再注册HiddenHttpMethodFilter</p>
<p>原因：</p>
<ul>
<li><p>在 CharacterEncodingFilter 中通过 request.setCharacterEncoding(encoding) 方法设置字符集的</p>
</li>
<li><p>request.setCharacterEncoding(encoding) 方法要求前面不能有任何获取请求参数的操作</p>
</li>
<li><p>而 HiddenHttpMethodFilter 恰恰有一个获取请求方式的操作：</p>
</li>
<li><p>```<br>String paramValue = request.getParameter(this.methodParam);</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 八、RESTful案例</span><br><span class="line"></span><br><span class="line">### <span class="number">1</span>、准备工作</span><br><span class="line"></span><br><span class="line">和传统 CRUD 一样，实现对员工信息的增删改查。</span><br><span class="line"></span><br><span class="line">- 搭建环境</span><br><span class="line"></span><br><span class="line">- 准备实体类</span><br><span class="line"></span><br><span class="line"> ```java</span><br><span class="line"> package com.atguigu.mvc.bean;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Employee</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> lastName;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> email;</span><br><span class="line">    <span class="comment">//1 male, 0 female</span></span><br><span class="line">    <span class="keyword">private</span> Integer gender;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="type">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="type">String</span> <span class="title">getLastName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> lastName;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="type">void</span> <span class="title">setLastName</span><span class="params">(<span class="type">String</span> lastName)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">this</span>.lastName = lastName;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="type">String</span> <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="type">void</span> <span class="title">setEmail</span><span class="params">(<span class="type">String</span> email)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getGender</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> gender;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="type">void</span> <span class="title">setGender</span><span class="params">(Integer gender)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Employee</span><span class="params">(Integer id, <span class="type">String</span> lastName, <span class="type">String</span> email, Integer gender)</span> </span>&#123;</span><br><span class="line">       <span class="built_in">super</span>();</span><br><span class="line">       <span class="keyword">this</span>.id = id;</span><br><span class="line">       <span class="keyword">this</span>.lastName = lastName;</span><br><span class="line">       <span class="keyword">this</span>.email = email;</span><br><span class="line">       <span class="keyword">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Employee</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<ul>
<li><p>准备dao模拟数据</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.mvc.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.mvc.bean.Employee;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmployeeDao</span> &#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;Integer, Employee&gt; employees = <span class="literal">null</span>;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">static</span>&#123;</span><br><span class="line">      employees = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;Integer, Employee&gt;();</span><br><span class="line"></span><br><span class="line">      employees.put(<span class="number">1001</span>, <span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="number">1001</span>, <span class="string">&quot;E-AA&quot;</span>, <span class="string">&quot;aa@163.com&quot;</span>, <span class="number">1</span>));</span><br><span class="line">      employees.put(<span class="number">1002</span>, <span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="number">1002</span>, <span class="string">&quot;E-BB&quot;</span>, <span class="string">&quot;bb@163.com&quot;</span>, <span class="number">1</span>));</span><br><span class="line">      employees.put(<span class="number">1003</span>, <span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="number">1003</span>, <span class="string">&quot;E-CC&quot;</span>, <span class="string">&quot;cc@163.com&quot;</span>, <span class="number">0</span>));</span><br><span class="line">      employees.put(<span class="number">1004</span>, <span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="number">1004</span>, <span class="string">&quot;E-DD&quot;</span>, <span class="string">&quot;dd@163.com&quot;</span>, <span class="number">0</span>));</span><br><span class="line">      employees.put(<span class="number">1005</span>, <span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="number">1005</span>, <span class="string">&quot;E-EE&quot;</span>, <span class="string">&quot;ee@163.com&quot;</span>, <span class="number">1</span>));</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Integer</span> <span class="variable">initId</span> <span class="operator">=</span> <span class="number">1006</span>;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">(Employee employee)</span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(employee.getId() == <span class="literal">null</span>)&#123;</span><br><span class="line">         employee.setId(initId++);</span><br><span class="line">      &#125;</span><br><span class="line">      employees.put(employee.getId(), employee);</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">public</span> Collection&lt;Employee&gt; <span class="title function_">getAll</span><span class="params">()</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> employees.values();</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">public</span> Employee <span class="title function_">get</span><span class="params">(Integer id)</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> employees.get(id);</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(Integer id)</span>&#123;</span><br><span class="line">      employees.remove(id);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="2、功能清单"><a href="#2、功能清单" class="headerlink" title="2、功能清单"></a>2、功能清单</h3><div class="table-container">
<table>
<thead>
<tr>
<th>功能</th>
<th>URL 地址</th>
<th>请求方式</th>
</tr>
</thead>
<tbody>
<tr>
<td>访问首页√</td>
<td>/</td>
<td>GET</td>
</tr>
<tr>
<td>查询全部数据√</td>
<td>/employee</td>
<td>GET</td>
</tr>
<tr>
<td>删除√</td>
<td>/employee/2</td>
<td>DELETE</td>
</tr>
<tr>
<td>跳转到添加数据页面√</td>
<td>/toAdd</td>
<td>GET</td>
</tr>
<tr>
<td>执行保存√</td>
<td>/employee</td>
<td>POST</td>
</tr>
<tr>
<td>跳转到更新数据页面√</td>
<td>/employee/2</td>
<td>GET</td>
</tr>
<tr>
<td>执行更新√</td>
<td>/employee</td>
<td>PUT</td>
</tr>
</tbody>
</table>
</div>
<h3 id="3、具体功能：访问首页"><a href="#3、具体功能：访问首页" class="headerlink" title="3、具体功能：访问首页"></a>3、具体功能：访问首页</h3><h5 id="a-gt-配置view-controller"><a href="#a-gt-配置view-controller" class="headerlink" title="a&gt;配置view-controller"></a>a&gt;配置view-controller</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;index&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="b-gt-创建页面"><a href="#b-gt-创建页面" class="headerlink" title="b&gt;创建页面"></a>b&gt;创建页面</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/employee&#125;&quot;</span>&gt;</span>访问员工信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="4、具体功能：查询所有员工数据"><a href="#4、具体功能：查询所有员工数据" class="headerlink" title="4、具体功能：查询所有员工数据"></a>4、具体功能：查询所有员工数据</h3><h5 id="a-gt-控制器方法"><a href="#a-gt-控制器方法" class="headerlink" title="a&gt;控制器方法"></a>a&gt;控制器方法</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/employee&quot;, method = RequestMethod.GET)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getEmployeeList</span><span class="params">(Model model)</span>&#123;</span><br><span class="line">    Collection&lt;Employee&gt; employeeList = employeeDao.getAll();</span><br><span class="line">    model.addAttribute(<span class="string">&quot;employeeList&quot;</span>, employeeList);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;employee_list&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="b-gt-创建employee-list-html"><a href="#b-gt-创建employee-list-html" class="headerlink" title="b&gt;创建employee_list.html"></a>b&gt;创建employee_list.html</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Employee Info<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/static/js/vue.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;0&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;dataTable&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">&quot;5&quot;</span>&gt;</span>Employee Info<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>id<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>lastName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>options(<span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/toAdd&#125;&quot;</span>&gt;</span>add<span class="tag">&lt;/<span class="name">a</span>&gt;</span>)<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;employee : $&#123;employeeList&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;employee.id&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;employee.lastName&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;employee.email&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;employee.gender&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;deleteA&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;deleteEmployee&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;&#x27;/employee/&#x27;+$&#123;employee.id&#125;&#125;&quot;</span>&gt;</span>delete<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;&#x27;/employee/&#x27;+$&#123;employee.id&#125;&#125;&quot;</span>&gt;</span>update<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="5、具体功能：删除"><a href="#5、具体功能：删除" class="headerlink" title="5、具体功能：删除"></a>5、具体功能：删除</h3><h5 id="a-gt-创建处理delete请求方式的表单"><a href="#a-gt-创建处理delete请求方式的表单" class="headerlink" title="a&gt;创建处理delete请求方式的表单"></a>a&gt;创建处理delete请求方式的表单</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 作用：通过超链接控制表单的提交，将post请求转换为delete请求 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;delete_form&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- HiddenHttpMethodFilter要求：必须传输_method请求参数，并且值为最终的请求方式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;_method&quot;</span> <span class="attr">value</span>=<span class="string">&quot;delete&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="b-gt-删除超链接绑定点击事件"><a href="#b-gt-删除超链接绑定点击事件" class="headerlink" title="b&gt;删除超链接绑定点击事件"></a>b&gt;删除超链接绑定点击事件</h5><p>引入vue.js</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/static/js/vue.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>删除超链接</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;deleteA&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;deleteEmployee&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;&#x27;/employee/&#x27;+$&#123;employee.id&#125;&#125;&quot;</span>&gt;</span>delete<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>通过vue处理点击事件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> vue = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#dataTable&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//event表示当前事件</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">deleteEmployee</span>:<span class="keyword">function</span> (<span class="params">event</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//通过id获取表单标签</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> delete_form = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;delete_form&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//将触发事件的超链接的href属性为表单的action属性赋值</span></span></span><br><span class="line"><span class="language-javascript">                delete_form.<span class="property">action</span> = event.<span class="property">target</span>.<span class="property">href</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//提交表单</span></span></span><br><span class="line"><span class="language-javascript">                delete_form.<span class="title function_">submit</span>();</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//阻止超链接的默认跳转行为</span></span></span><br><span class="line"><span class="language-javascript">                event.<span class="title function_">preventDefault</span>();</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="c-gt-控制器方法"><a href="#c-gt-控制器方法" class="headerlink" title="c&gt;控制器方法"></a>c&gt;控制器方法</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/employee/&#123;id&#125;&quot;, method = RequestMethod.DELETE)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">deleteEmployee</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span>&#123;</span><br><span class="line">    employeeDao.delete(id);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;redirect:/employee&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="6、具体功能：跳转到添加数据页面"><a href="#6、具体功能：跳转到添加数据页面" class="headerlink" title="6、具体功能：跳转到添加数据页面"></a>6、具体功能：跳转到添加数据页面</h3><h5 id="a-gt-配置view-controller-1"><a href="#a-gt-配置view-controller-1" class="headerlink" title="a&gt;配置view-controller"></a>a&gt;配置view-controller</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/toAdd&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;employee_add&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">mvc:view-controller</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="b-gt-创建employee-add-html"><a href="#b-gt-创建employee-add-html" class="headerlink" title="b&gt;创建employee_add.html"></a>b&gt;创建employee_add.html</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Add Employee<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/employee&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    lastName:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;lastName&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    email:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    gender:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>male</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span>&gt;</span>female<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;add&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="7、具体功能：执行保存"><a href="#7、具体功能：执行保存" class="headerlink" title="7、具体功能：执行保存"></a>7、具体功能：执行保存</h3><h5 id="a-gt-控制器方法-1"><a href="#a-gt-控制器方法-1" class="headerlink" title="a&gt;控制器方法"></a>a&gt;控制器方法</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/employee&quot;, method = RequestMethod.POST)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">addEmployee</span><span class="params">(Employee employee)</span>&#123;</span><br><span class="line">    employeeDao.save(employee);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;redirect:/employee&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="8、具体功能：跳转到更新数据页面"><a href="#8、具体功能：跳转到更新数据页面" class="headerlink" title="8、具体功能：跳转到更新数据页面"></a>8、具体功能：跳转到更新数据页面</h3><h5 id="a-gt-修改超链接"><a href="#a-gt-修改超链接" class="headerlink" title="a&gt;修改超链接"></a>a&gt;修改超链接</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;&#x27;/employee/&#x27;+$&#123;employee.id&#125;&#125;&quot;</span>&gt;</span>update<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="b-gt-控制器方法"><a href="#b-gt-控制器方法" class="headerlink" title="b&gt;控制器方法"></a>b&gt;控制器方法</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/employee/&#123;id&#125;&quot;, method = RequestMethod.GET)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getEmployeeById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id, Model model)</span>&#123;</span><br><span class="line">    <span class="type">Employee</span> <span class="variable">employee</span> <span class="operator">=</span> employeeDao.get(id);</span><br><span class="line">    model.addAttribute(<span class="string">&quot;employee&quot;</span>, employee);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;employee_update&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="c-gt-创建employee-update-html"><a href="#c-gt-创建employee-update-html" class="headerlink" title="c&gt;创建employee_update.html"></a>c&gt;创建employee_update.html</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Update Employee<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/employee&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;_method&quot;</span> <span class="attr">value</span>=<span class="string">&quot;put&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;employee.id&#125;&quot;</span>&gt;</span></span><br><span class="line">    lastName:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;lastName&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;employee.lastName&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    email:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;employee.email&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        th:field=&quot;$&#123;employee.gender&#125;&quot;可用于单选框或复选框的回显</span></span><br><span class="line"><span class="comment">        若单选框的value和employee.gender的值一致，则添加checked=&quot;checked&quot;属性</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    gender:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> <span class="attr">th:field</span>=<span class="string">&quot;$&#123;employee.gender&#125;&quot;</span>&gt;</span>male</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> <span class="attr">th:field</span>=<span class="string">&quot;$&#123;employee.gender&#125;&quot;</span>&gt;</span>female<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;update&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="9、具体功能：执行更新"><a href="#9、具体功能：执行更新" class="headerlink" title="9、具体功能：执行更新"></a>9、具体功能：执行更新</h3><h5 id="a-gt-控制器方法-2"><a href="#a-gt-控制器方法-2" class="headerlink" title="a&gt;控制器方法"></a>a&gt;控制器方法</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/employee&quot;, method = RequestMethod.PUT)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">updateEmployee</span><span class="params">(Employee employee)</span>&#123;</span><br><span class="line">    employeeDao.save(employee);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;redirect:/employee&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="八、HttpMessageConverter"><a href="#八、HttpMessageConverter" class="headerlink" title="八、HttpMessageConverter"></a>八、HttpMessageConverter</h1><p>HttpMessageConverter，报文信息转换器，将请求报文转换为Java对象，或将Java对象转换为响应报文</p>
<p>HttpMessageConverter提供了两个注解和两个类型：@RequestBody，@ResponseBody，RequestEntity，</p>
<p>ResponseEntity</p>
<h3 id="1、-RequestBody"><a href="#1、-RequestBody" class="headerlink" title="1、@RequestBody"></a>1、@RequestBody</h3><p>@RequestBody可以获取请求体，需要在控制器方法设置一个形参，使用@RequestBody进行标识，当前请求的请求体就会为当前注解所标识的形参赋值</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/testRequestBody&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testRequestBody&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testRequestBody</span><span class="params">(<span class="meta">@RequestBody</span> String requestBody)</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;requestBody:&quot;</span>+requestBody);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<p>requestBody:username=admin&amp;password=123456</p>
<h3 id="2、RequestEntity"><a href="#2、RequestEntity" class="headerlink" title="2、RequestEntity"></a>2、RequestEntity</h3><p>RequestEntity封装请求报文的一种类型，需要在控制器方法的形参中设置该类型的形参，当前请求的请求报文就会赋值给该形参，可以通过getHeaders()获取请求头信息，通过getBody()获取请求体信息</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testRequestEntity&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testRequestEntity</span><span class="params">(RequestEntity&lt;String&gt; requestEntity)</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;requestHeader:&quot;</span>+requestEntity.getHeaders());</span><br><span class="line">    System.out.println(<span class="string">&quot;requestBody:&quot;</span>+requestEntity.getBody());</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出结果：<br>requestHeader:[host:”localhost:8080”, connection:”keep-alive”, content-length:”27”, cache-control:”max-age=0”, sec-ch-ua:”” Not A;Brand”;v=”99”, “Chromium”;v=”90”, “Google Chrome”;v=”90””, sec-ch-ua-mobile:”?0”, upgrade-insecure-requests:”1”, origin:”<a href="http://localhost:8080">http://localhost:8080</a>“, user-agent:”Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36”]<br>requestBody:username=admin&amp;password=123</p>
<h3 id="3、-ResponseBody"><a href="#3、-ResponseBody" class="headerlink" title="3、@ResponseBody"></a>3、@ResponseBody</h3><p>@ResponseBody用于标识一个控制器方法，可以将该方法的返回值直接作为响应报文的响应体响应到浏览器</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testResponseBody&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testResponseBody</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>结果：浏览器页面显示success</p>
<h3 id="4、SpringMVC处理json"><a href="#4、SpringMVC处理json" class="headerlink" title="4、SpringMVC处理json"></a>4、SpringMVC处理json</h3><p>@ResponseBody处理json的步骤：</p>
<p>a&gt;导入jackson的依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.12.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>b&gt;在SpringMVC的核心配置文件中开启mvc的注解驱动，此时在HandlerAdaptor中会自动装配一个消息转换器：MappingJackson2HttpMessageConverter，可以将响应到浏览器的Java对象转换为Json格式的字符串</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">&lt;<span class="symbol">mvc:</span><span class="keyword">annotation</span>-<span class="title">driven</span> /&gt;</span><br></pre></td></tr></table></figure>
<p>c&gt;在处理器方法上使用@ResponseBody注解进行标识</p>
<p>d&gt;将Java对象直接作为控制器方法的返回值返回，就会自动转换为Json格式的字符串</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testResponseUser&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> User <span class="title function_">testResponseUser</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">1001</span>,<span class="string">&quot;admin&quot;</span>,<span class="string">&quot;123456&quot;</span>,<span class="number">23</span>,<span class="string">&quot;男&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>浏览器的页面中展示的结果：</p>
<p>{“id”:1001,”username”:”admin”,”password”:”123456”,”age”:23,”sex”:”男”}</p>
<h3 id="5、SpringMVC处理ajax"><a href="#5、SpringMVC处理ajax" class="headerlink" title="5、SpringMVC处理ajax"></a>5、SpringMVC处理ajax</h3><p>a&gt;请求超链接：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/testAjax&#125;&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;testAjax&quot;</span>&gt;</span>testAjax<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>b&gt;通过vue和axios处理点击事件：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/static/js/vue.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/static/js/axios.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> vue = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">testAjax</span>:<span class="keyword">function</span> (<span class="params">event</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">axios</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">method</span>:<span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">url</span>:event.<span class="property">target</span>.<span class="property">href</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">params</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">username</span>:<span class="string">&quot;admin&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">password</span>:<span class="string">&quot;123456&quot;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">response</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">alert</span>(response.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript">                event.<span class="title function_">preventDefault</span>();</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>c&gt;控制器方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testAjax&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testAjax</span><span class="params">(String username, String password)</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;username:&quot;</span>+username+<span class="string">&quot;,password:&quot;</span>+password);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;hello,ajax&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="6、-RestController注解"><a href="#6、-RestController注解" class="headerlink" title="6、@RestController注解"></a>6、@RestController注解</h3><p>@RestController注解是springMVC提供的一个复合注解，标识在控制器的类上，就相当于为类添加了@Controller注解，并且为其中的每个方法添加了@ResponseBody注解</p>
<h3 id="7、ResponseEntity"><a href="#7、ResponseEntity" class="headerlink" title="7、ResponseEntity"></a>7、ResponseEntity</h3><p>ResponseEntity用于控制器方法的返回值类型，该控制器方法的返回值就是响应到浏览器的响应报文</p>
<h1 id="九、文件上传和下载"><a href="#九、文件上传和下载" class="headerlink" title="九、文件上传和下载"></a>九、文件上传和下载</h1><h3 id="1、文件下载"><a href="#1、文件下载" class="headerlink" title="1、文件下载"></a>1、文件下载</h3><p>使用ResponseEntity实现下载文件的功能</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testDown&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseEntity&lt;<span class="type">byte</span>[]&gt; testResponseEntity(HttpSession session) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="comment">//获取ServletContext对象</span></span><br><span class="line">    <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> session.getServletContext();</span><br><span class="line">    <span class="comment">//获取服务器中文件的真实路径</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">realPath</span> <span class="operator">=</span> servletContext.getRealPath(<span class="string">&quot;/static/img/1.jpg&quot;</span>);</span><br><span class="line">    <span class="comment">//创建输入流</span></span><br><span class="line">    <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(realPath);</span><br><span class="line">    <span class="comment">//创建字节数组</span></span><br><span class="line">    <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[is.available()];</span><br><span class="line">    <span class="comment">//将流读到字节数组中</span></span><br><span class="line">    is.read(bytes);</span><br><span class="line">    <span class="comment">//创建HttpHeaders对象设置响应头信息</span></span><br><span class="line">    MultiValueMap&lt;String, String&gt; headers = <span class="keyword">new</span> <span class="title class_">HttpHeaders</span>();</span><br><span class="line">    <span class="comment">//设置要下载方式以及下载文件的名字</span></span><br><span class="line">    headers.add(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;filename=1.jpg&quot;</span>);</span><br><span class="line">    <span class="comment">//设置响应状态码</span></span><br><span class="line">    <span class="type">HttpStatus</span> <span class="variable">statusCode</span> <span class="operator">=</span> HttpStatus.OK;</span><br><span class="line">    <span class="comment">//创建ResponseEntity对象</span></span><br><span class="line">    ResponseEntity&lt;<span class="type">byte</span>[]&gt; responseEntity = <span class="keyword">new</span> <span class="title class_">ResponseEntity</span>&lt;&gt;(bytes, headers, statusCode);</span><br><span class="line">    <span class="comment">//关闭输入流</span></span><br><span class="line">    is.close();</span><br><span class="line">    <span class="keyword">return</span> responseEntity;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2、文件上传"><a href="#2、文件上传" class="headerlink" title="2、文件上传"></a>2、文件上传</h3><p>文件上传要求form表单的请求方式必须为post，并且添加属性enctype=”multipart/form-data”</p>
<p>SpringMVC中将上传的文件封装到MultipartFile对象中，通过此对象可以获取文件相关信息</p>
<p>上传步骤：</p>
<p>a&gt;添加依赖：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>b&gt;在SpringMVC的配置文件中添加配置：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--必须通过文件解析器的解析才能将文件转换为MultipartFile对象--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;multipartResolver&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>c&gt;控制器方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testUp&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testUp</span><span class="params">(MultipartFile photo, HttpSession session)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="comment">//获取上传的文件的文件名</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> photo.getOriginalFilename();</span><br><span class="line">    <span class="comment">//处理文件重名问题</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">hzName</span> <span class="operator">=</span> fileName.substring(fileName.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">    fileName = UUID.randomUUID().toString() + hzName;</span><br><span class="line">    <span class="comment">//获取服务器中photo目录的路径</span></span><br><span class="line">    <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> session.getServletContext();</span><br><span class="line">    <span class="type">String</span> <span class="variable">photoPath</span> <span class="operator">=</span> servletContext.getRealPath(<span class="string">&quot;photo&quot;</span>);</span><br><span class="line">    <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(photoPath);</span><br><span class="line">    <span class="keyword">if</span>(!file.exists())&#123;</span><br><span class="line">        file.mkdir();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">String</span> <span class="variable">finalPath</span> <span class="operator">=</span> photoPath + File.separator + fileName;</span><br><span class="line">    <span class="comment">//实现上传功能</span></span><br><span class="line">    photo.transferTo(<span class="keyword">new</span> <span class="title class_">File</span>(finalPath));</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="十、拦截器"><a href="#十、拦截器" class="headerlink" title="十、拦截器"></a>十、拦截器</h1><h3 id="1、拦截器的配置"><a href="#1、拦截器的配置" class="headerlink" title="1、拦截器的配置"></a>1、拦截器的配置</h3><p>SpringMVC中的拦截器用于拦截控制器方法的执行</p>
<p>SpringMVC中的拦截器需要实现HandlerInterceptor</p>
<p>SpringMVC的拦截器必须在SpringMVC的配置文件中进行配置：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.interceptor.FirstInterceptor&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;firstInterceptor&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 以上两种配置方式都是对DispatcherServlet所处理的所有的请求进行拦截 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">&quot;/**&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:exclude-mapping</span> <span class="attr">path</span>=<span class="string">&quot;/testRequestEntity&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;firstInterceptor&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">	以上配置方式可以通过ref或bean标签设置拦截器，通过mvc:mapping设置需要拦截的请求，通过mvc:exclude-mapping设置需要排除的请求，即不需要拦截的请求</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2、拦截器的三个抽象方法"><a href="#2、拦截器的三个抽象方法" class="headerlink" title="2、拦截器的三个抽象方法"></a>2、拦截器的三个抽象方法</h3><p>SpringMVC中的拦截器有三个抽象方法：</p>
<p>preHandle：控制器方法执行之前执行preHandle()，其boolean类型的返回值表示是否拦截或放行，返回true为放行，即调用控制器方法；返回false表示拦截，即不调用控制器方法</p>
<p>postHandle：控制器方法执行之后执行postHandle()</p>
<p>afterComplation：处理完视图和模型数据，渲染视图完毕之后执行afterComplation()</p>
<h3 id="3、多个拦截器的执行顺序"><a href="#3、多个拦截器的执行顺序" class="headerlink" title="3、多个拦截器的执行顺序"></a>3、多个拦截器的执行顺序</h3><p>a&gt;若每个拦截器的preHandle()都返回true</p>
<p>此时多个拦截器的执行顺序和拦截器在SpringMVC的配置文件的配置顺序有关：</p>
<p>preHandle()会按照配置的顺序执行，而postHandle()和afterComplation()会按照配置的反序执行</p>
<p>b&gt;若某个拦截器的preHandle()返回了false</p>
<p>preHandle()返回false和它之前的拦截器的preHandle()都会执行，postHandle()都不执行，返回false的拦截器之前的拦截器的afterComplation()会执行</p>
<h1 id="十一、异常处理器"><a href="#十一、异常处理器" class="headerlink" title="十一、异常处理器"></a>十一、异常处理器</h1><h3 id="1、基于配置的异常处理"><a href="#1、基于配置的异常处理" class="headerlink" title="1、基于配置的异常处理"></a>1、基于配置的异常处理</h3><p>SpringMVC提供了一个处理控制器方法执行过程中所出现的异常的接口：HandlerExceptionResolver</p>
<p>HandlerExceptionResolver接口的实现类有：DefaultHandlerExceptionResolver和SimpleMappingExceptionResolver</p>
<p>SpringMVC提供了自定义的异常处理器SimpleMappingExceptionResolver，使用方式：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.handler.SimpleMappingExceptionResolver&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;exceptionMappings&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">        	<span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        		properties的键表示处理器方法执行过程中出现的异常</span></span><br><span class="line"><span class="comment">        		properties的值表示若出现指定异常时，设置一个新的视图名称，跳转到指定页面</span></span><br><span class="line"><span class="comment">        	--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;java.lang.ArithmeticException&quot;</span>&gt;</span>error<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    	exceptionAttribute属性设置一个属性名，将出现的异常信息在请求域中进行共享</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;exceptionAttribute&quot;</span> <span class="attr">value</span>=<span class="string">&quot;ex&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2、基于注解的异常处理"><a href="#2、基于注解的异常处理" class="headerlink" title="2、基于注解的异常处理"></a>2、基于注解的异常处理</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//@ControllerAdvice将当前类标识为异常处理的组件</span></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExceptionController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//@ExceptionHandler用于设置所标识方法处理的异常</span></span><br><span class="line">    <span class="meta">@ExceptionHandler(ArithmeticException.class)</span></span><br><span class="line">    <span class="comment">//ex表示当前请求处理中出现的异常对象</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">handleArithmeticException</span><span class="params">(Exception ex, Model model)</span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;ex&quot;</span>, ex);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;error&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="十二、注解配置SpringMVC"><a href="#十二、注解配置SpringMVC" class="headerlink" title="十二、注解配置SpringMVC"></a>十二、注解配置SpringMVC</h1><p>使用配置类和注解代替web.xml和SpringMVC配置文件的功能</p>
<h3 id="1、创建初始化类，代替web-xml"><a href="#1、创建初始化类，代替web-xml" class="headerlink" title="1、创建初始化类，代替web.xml"></a>1、创建初始化类，代替web.xml</h3><p>在Servlet3.0环境中，容器会在类路径中查找实现javax.servlet.ServletContainerInitializer接口的类，如果找到的话就用它来配置Servlet容器。<br>Spring提供了这个接口的实现，名为SpringServletContainerInitializer，这个类反过来又会查找实现WebApplicationInitializer的类并将配置的任务交给它们来完成。Spring3.2引入了一个便利的WebApplicationInitializer基础实现，名为AbstractAnnotationConfigDispatcherServletInitializer，当我们的类扩展了AbstractAnnotationConfigDispatcherServletInitializer并将其部署到Servlet3.0容器的时候，容器会自动发现它，并用它来配置Servlet上下文。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebInit</span> <span class="keyword">extends</span> <span class="title class_">AbstractAnnotationConfigDispatcherServletInitializer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 指定spring的配置类</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;?&gt;[] getRootConfigClasses() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;SpringConfig.class&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 指定SpringMVC的配置类</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;?&gt;[] getServletConfigClasses() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;WebConfig.class&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 指定DispatcherServlet的映射规则，即url-pattern</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> String[] getServletMappings() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;/&quot;</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加过滤器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Filter[] getServletFilters() &#123;</span><br><span class="line">        <span class="type">CharacterEncodingFilter</span> <span class="variable">encodingFilter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CharacterEncodingFilter</span>();</span><br><span class="line">        encodingFilter.setEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        encodingFilter.setForceRequestEncoding(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">HiddenHttpMethodFilter</span> <span class="variable">hiddenHttpMethodFilter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HiddenHttpMethodFilter</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Filter</span>[]&#123;encodingFilter, hiddenHttpMethodFilter&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2、创建SpringConfig配置类，代替spring的配置文件"><a href="#2、创建SpringConfig配置类，代替spring的配置文件" class="headerlink" title="2、创建SpringConfig配置类，代替spring的配置文件"></a>2、创建SpringConfig配置类，代替spring的配置文件</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringConfig</span> &#123;</span><br><span class="line">	<span class="comment">//ssm整合之后，spring的配置信息写在此类中</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3、创建WebConfig配置类，代替SpringMVC的配置文件"><a href="#3、创建WebConfig配置类，代替SpringMVC的配置文件" class="headerlink" title="3、创建WebConfig配置类，代替SpringMVC的配置文件"></a>3、创建WebConfig配置类，代替SpringMVC的配置文件</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="comment">//扫描组件</span></span><br><span class="line"><span class="meta">@ComponentScan(&quot;com.atguigu.mvc.controller&quot;)</span></span><br><span class="line"><span class="comment">//开启MVC注解驱动</span></span><br><span class="line"><span class="meta">@EnableWebMvc</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用默认的servlet处理静态资源</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">configureDefaultServletHandling</span><span class="params">(DefaultServletHandlerConfigurer configurer)</span> &#123;</span><br><span class="line">        configurer.enable();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置文件上传解析器</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> CommonsMultipartResolver <span class="title function_">multipartResolver</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CommonsMultipartResolver</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置拦截器</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> &#123;</span><br><span class="line">        <span class="type">FirstInterceptor</span> <span class="variable">firstInterceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FirstInterceptor</span>();</span><br><span class="line">        registry.addInterceptor(firstInterceptor).addPathPatterns(<span class="string">&quot;/**&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//配置视图控制</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*@Override</span></span><br><span class="line"><span class="comment">    public void addViewControllers(ViewControllerRegistry registry) &#123;</span></span><br><span class="line"><span class="comment">        registry.addViewController(&quot;/&quot;).setViewName(&quot;index&quot;);</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//配置异常映射</span></span><br><span class="line">    <span class="comment">/*@Override</span></span><br><span class="line"><span class="comment">    public void configureHandlerExceptionResolvers(List&lt;HandlerExceptionResolver&gt; resolvers) &#123;</span></span><br><span class="line"><span class="comment">        SimpleMappingExceptionResolver exceptionResolver = new SimpleMappingExceptionResolver();</span></span><br><span class="line"><span class="comment">        Properties prop = new Properties();</span></span><br><span class="line"><span class="comment">        prop.setProperty(&quot;java.lang.ArithmeticException&quot;, &quot;error&quot;);</span></span><br><span class="line"><span class="comment">        //设置异常映射</span></span><br><span class="line"><span class="comment">        exceptionResolver.setExceptionMappings(prop);</span></span><br><span class="line"><span class="comment">        //设置共享异常信息的键</span></span><br><span class="line"><span class="comment">        exceptionResolver.setExceptionAttribute(&quot;ex&quot;);</span></span><br><span class="line"><span class="comment">        resolvers.add(exceptionResolver);</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置生成模板解析器</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ITemplateResolver <span class="title function_">templateResolver</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">WebApplicationContext</span> <span class="variable">webApplicationContext</span> <span class="operator">=</span> ContextLoader.getCurrentWebApplicationContext();</span><br><span class="line">        <span class="comment">// ServletContextTemplateResolver需要一个ServletContext作为构造参数，可通过WebApplicationContext 的方法获得</span></span><br><span class="line">        <span class="type">ServletContextTemplateResolver</span> <span class="variable">templateResolver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServletContextTemplateResolver</span>(</span><br><span class="line">                webApplicationContext.getServletContext());</span><br><span class="line">        templateResolver.setPrefix(<span class="string">&quot;/WEB-INF/templates/&quot;</span>);</span><br><span class="line">        templateResolver.setSuffix(<span class="string">&quot;.html&quot;</span>);</span><br><span class="line">        templateResolver.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        templateResolver.setTemplateMode(TemplateMode.HTML);</span><br><span class="line">        <span class="keyword">return</span> templateResolver;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//生成模板引擎并为模板引擎注入模板解析器</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> SpringTemplateEngine <span class="title function_">templateEngine</span><span class="params">(ITemplateResolver templateResolver)</span> &#123;</span><br><span class="line">        <span class="type">SpringTemplateEngine</span> <span class="variable">templateEngine</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpringTemplateEngine</span>();</span><br><span class="line">        templateEngine.setTemplateResolver(templateResolver);</span><br><span class="line">        <span class="keyword">return</span> templateEngine;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//生成视图解析器并未解析器注入模板引擎</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ViewResolver <span class="title function_">viewResolver</span><span class="params">(SpringTemplateEngine templateEngine)</span> &#123;</span><br><span class="line">        <span class="type">ThymeleafViewResolver</span> <span class="variable">viewResolver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThymeleafViewResolver</span>();</span><br><span class="line">        viewResolver.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        viewResolver.setTemplateEngine(templateEngine);</span><br><span class="line">        <span class="keyword">return</span> viewResolver;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4、测试功能"><a href="#4、测试功能" class="headerlink" title="4、测试功能"></a>4、测试功能</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">index</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="十三、SpringMVC执行流程"><a href="#十三、SpringMVC执行流程" class="headerlink" title="十三、SpringMVC执行流程"></a>十三、SpringMVC执行流程</h1><h3 id="1、SpringMVC常用组件"><a href="#1、SpringMVC常用组件" class="headerlink" title="1、SpringMVC常用组件"></a>1、SpringMVC常用组件</h3><ul>
<li>DispatcherServlet：<strong>前端控制器</strong>，不需要工程师开发，由框架提供</li>
</ul>
<p>作用：统一处理请求和响应，整个流程控制的中心，由它调用其它组件处理用户的请求</p>
<ul>
<li>HandlerMapping：<strong>处理器映射器</strong>，不需要工程师开发，由框架提供</li>
</ul>
<p>作用：根据请求的url、method等信息查找Handler，即控制器方法</p>
<ul>
<li>Handler：<strong>处理器</strong>，需要工程师开发</li>
</ul>
<p>作用：在DispatcherServlet的控制下Handler对具体的用户请求进行处理</p>
<ul>
<li>HandlerAdapter：<strong>处理器适配器</strong>，不需要工程师开发，由框架提供</li>
</ul>
<p>作用：通过HandlerAdapter对处理器（控制器方法）进行执行</p>
<ul>
<li>ViewResolver：<strong>视图解析器</strong>，不需要工程师开发，由框架提供</li>
</ul>
<p>作用：进行视图解析，得到相应的视图，例如：ThymeleafView、InternalResourceView、RedirectView</p>
<ul>
<li>View：<strong>视图</strong></li>
</ul>
<p>作用：将模型数据通过页面展示给用户</p>
<h3 id="2、DispatcherServlet初始化过程"><a href="#2、DispatcherServlet初始化过程" class="headerlink" title="2、DispatcherServlet初始化过程"></a>2、DispatcherServlet初始化过程</h3><p>DispatcherServlet 本质上是一个 Servlet，所以天然的遵循 Servlet 的生命周期。所以宏观上是 Servlet 生命周期来进行调度。</p>
<p><img src="img/img005.png" alt="images"></p>
<h5 id="a-gt-初始化WebApplicationContext"><a href="#a-gt-初始化WebApplicationContext" class="headerlink" title="a&gt;初始化WebApplicationContext"></a>a&gt;初始化WebApplicationContext</h5><p>所在类：org.springframework.web.servlet.FrameworkServlet</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> WebApplicationContext <span class="title function_">initWebApplicationContext</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">WebApplicationContext</span> <span class="variable">rootContext</span> <span class="operator">=</span></span><br><span class="line">        WebApplicationContextUtils.getWebApplicationContext(getServletContext());</span><br><span class="line">    <span class="type">WebApplicationContext</span> <span class="variable">wac</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.webApplicationContext != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="comment">// A context instance was injected at construction time -&gt; use it</span></span><br><span class="line">        wac = <span class="built_in">this</span>.webApplicationContext;</span><br><span class="line">        <span class="keyword">if</span> (wac <span class="keyword">instanceof</span> ConfigurableWebApplicationContext) &#123;</span><br><span class="line">            <span class="type">ConfigurableWebApplicationContext</span> <span class="variable">cwac</span> <span class="operator">=</span> (ConfigurableWebApplicationContext) wac;</span><br><span class="line">            <span class="keyword">if</span> (!cwac.isActive()) &#123;</span><br><span class="line">                <span class="comment">// The context has not yet been refreshed -&gt; provide services such as</span></span><br><span class="line">                <span class="comment">// setting the parent context, setting the application context id, etc</span></span><br><span class="line">                <span class="keyword">if</span> (cwac.getParent() == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="comment">// The context instance was injected without an explicit parent -&gt; set</span></span><br><span class="line">                    <span class="comment">// the root application context (if any; may be null) as the parent</span></span><br><span class="line">                    cwac.setParent(rootContext);</span><br><span class="line">                &#125;</span><br><span class="line">                configureAndRefreshWebApplicationContext(cwac);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (wac == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="comment">// No context instance was injected at construction time -&gt; see if one</span></span><br><span class="line">        <span class="comment">// has been registered in the servlet context. If one exists, it is assumed</span></span><br><span class="line">        <span class="comment">// that the parent context (if any) has already been set and that the</span></span><br><span class="line">        <span class="comment">// user has performed any initialization such as setting the context id</span></span><br><span class="line">        wac = findWebApplicationContext();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (wac == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="comment">// No context instance is defined for this servlet -&gt; create a local one</span></span><br><span class="line">        <span class="comment">// 创建WebApplicationContext</span></span><br><span class="line">        wac = createWebApplicationContext(rootContext);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">this</span>.refreshEventReceived) &#123;</span><br><span class="line">        <span class="comment">// Either the context is not a ConfigurableApplicationContext with refresh</span></span><br><span class="line">        <span class="comment">// support or the context injected at construction time had already been</span></span><br><span class="line">        <span class="comment">// refreshed -&gt; trigger initial onRefresh manually here.</span></span><br><span class="line">        <span class="keyword">synchronized</span> (<span class="built_in">this</span>.onRefreshMonitor) &#123;</span><br><span class="line">            <span class="comment">// 刷新WebApplicationContext</span></span><br><span class="line">            onRefresh(wac);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.publishContext) &#123;</span><br><span class="line">        <span class="comment">// Publish the context as a servlet context attribute.</span></span><br><span class="line">        <span class="comment">// 将IOC容器在应用域共享</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">attrName</span> <span class="operator">=</span> getServletContextAttributeName();</span><br><span class="line">        getServletContext().setAttribute(attrName, wac);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> wac;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="b-gt-创建WebApplicationContext"><a href="#b-gt-创建WebApplicationContext" class="headerlink" title="b&gt;创建WebApplicationContext"></a>b&gt;创建WebApplicationContext</h5><p>所在类：org.springframework.web.servlet.FrameworkServlet</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> WebApplicationContext <span class="title function_">createWebApplicationContext</span><span class="params">(<span class="meta">@Nullable</span> ApplicationContext parent)</span> &#123;</span><br><span class="line">    Class&lt;?&gt; contextClass = getContextClass();</span><br><span class="line">    <span class="keyword">if</span> (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ApplicationContextException</span>(</span><br><span class="line">            <span class="string">&quot;Fatal initialization error in servlet with name &#x27;&quot;</span> + getServletName() +</span><br><span class="line">            <span class="string">&quot;&#x27;: custom WebApplicationContext class [&quot;</span> + contextClass.getName() +</span><br><span class="line">            <span class="string">&quot;] is not of type ConfigurableWebApplicationContext&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 通过反射创建 IOC 容器对象</span></span><br><span class="line">    <span class="type">ConfigurableWebApplicationContext</span> <span class="variable">wac</span> <span class="operator">=</span></span><br><span class="line">        (ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass);</span><br><span class="line"></span><br><span class="line">    wac.setEnvironment(getEnvironment());</span><br><span class="line">    <span class="comment">// 设置父容器</span></span><br><span class="line">    wac.setParent(parent);</span><br><span class="line">    <span class="type">String</span> <span class="variable">configLocation</span> <span class="operator">=</span> getContextConfigLocation();</span><br><span class="line">    <span class="keyword">if</span> (configLocation != <span class="literal">null</span>) &#123;</span><br><span class="line">        wac.setConfigLocation(configLocation);</span><br><span class="line">    &#125;</span><br><span class="line">    configureAndRefreshWebApplicationContext(wac);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> wac;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="c-gt-DispatcherServlet初始化策略"><a href="#c-gt-DispatcherServlet初始化策略" class="headerlink" title="c&gt;DispatcherServlet初始化策略"></a>c&gt;DispatcherServlet初始化策略</h5><p>FrameworkServlet创建WebApplicationContext后，刷新容器，调用onRefresh(wac)，此方法在DispatcherServlet中进行了重写，调用了initStrategies(context)方法，初始化策略，即初始化DispatcherServlet的各个组件</p>
<p>所在类：org.springframework.web.servlet.DispatcherServlet</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">initStrategies</span><span class="params">(ApplicationContext context)</span> &#123;</span><br><span class="line">   initMultipartResolver(context);</span><br><span class="line">   initLocaleResolver(context);</span><br><span class="line">   initThemeResolver(context);</span><br><span class="line">   initHandlerMappings(context);</span><br><span class="line">   initHandlerAdapters(context);</span><br><span class="line">   initHandlerExceptionResolvers(context);</span><br><span class="line">   initRequestToViewNameTranslator(context);</span><br><span class="line">   initViewResolvers(context);</span><br><span class="line">   initFlashMapManager(context);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3、DispatcherServlet调用组件处理请求"><a href="#3、DispatcherServlet调用组件处理请求" class="headerlink" title="3、DispatcherServlet调用组件处理请求"></a>3、DispatcherServlet调用组件处理请求</h3><h5 id="a-gt-processRequest"><a href="#a-gt-processRequest" class="headerlink" title="a&gt;processRequest()"></a>a&gt;processRequest()</h5><p>FrameworkServlet重写HttpServlet中的service()和doXxx()，这些方法中调用了processRequest(request, response)</p>
<p>所在类：org.springframework.web.servlet.FrameworkServlet</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">processRequest</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line">    <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">long</span> <span class="variable">startTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">    <span class="type">Throwable</span> <span class="variable">failureCause</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">LocaleContext</span> <span class="variable">previousLocaleContext</span> <span class="operator">=</span> LocaleContextHolder.getLocaleContext();</span><br><span class="line">    <span class="type">LocaleContext</span> <span class="variable">localeContext</span> <span class="operator">=</span> buildLocaleContext(request);</span><br><span class="line"></span><br><span class="line">    <span class="type">RequestAttributes</span> <span class="variable">previousAttributes</span> <span class="operator">=</span> RequestContextHolder.getRequestAttributes();</span><br><span class="line">    <span class="type">ServletRequestAttributes</span> <span class="variable">requestAttributes</span> <span class="operator">=</span> buildRequestAttributes(request, response, previousAttributes);</span><br><span class="line"></span><br><span class="line">    <span class="type">WebAsyncManager</span> <span class="variable">asyncManager</span> <span class="operator">=</span> WebAsyncUtils.getAsyncManager(request);</span><br><span class="line">    asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), <span class="keyword">new</span> <span class="title class_">RequestBindingInterceptor</span>());</span><br><span class="line"></span><br><span class="line">    initContextHolders(request, localeContext, requestAttributes);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">		<span class="comment">// 执行服务，doService()是一个抽象方法，在DispatcherServlet中进行了重写</span></span><br><span class="line">        doService(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (ServletException | IOException ex) &#123;</span><br><span class="line">        failureCause = ex;</span><br><span class="line">        <span class="keyword">throw</span> ex;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Throwable ex) &#123;</span><br><span class="line">        failureCause = ex;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NestedServletException</span>(<span class="string">&quot;Request processing failed&quot;</span>, ex);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">finally</span> &#123;</span><br><span class="line">        resetContextHolders(request, previousLocaleContext, previousAttributes);</span><br><span class="line">        <span class="keyword">if</span> (requestAttributes != <span class="literal">null</span>) &#123;</span><br><span class="line">            requestAttributes.requestCompleted();</span><br><span class="line">        &#125;</span><br><span class="line">        logResult(request, response, failureCause, asyncManager);</span><br><span class="line">        publishRequestHandledEvent(request, response, startTime, failureCause);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="b-gt-doService"><a href="#b-gt-doService" class="headerlink" title="b&gt;doService()"></a>b&gt;doService()</h5><p>所在类：org.springframework.web.servlet.DispatcherServlet</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doService</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    logRequest(request);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Keep a snapshot of the request attributes in case of an include,</span></span><br><span class="line">    <span class="comment">// to be able to restore the original attributes after the include.</span></span><br><span class="line">    Map&lt;String, Object&gt; attributesSnapshot = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (WebUtils.isIncludeRequest(request)) &#123;</span><br><span class="line">        attributesSnapshot = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        Enumeration&lt;?&gt; attrNames = request.getAttributeNames();</span><br><span class="line">        <span class="keyword">while</span> (attrNames.hasMoreElements()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">attrName</span> <span class="operator">=</span> (String) attrNames.nextElement();</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.cleanupAfterInclude || attrName.startsWith(DEFAULT_STRATEGIES_PREFIX)) &#123;</span><br><span class="line">                attributesSnapshot.put(attrName, request.getAttribute(attrName));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Make framework objects available to handlers and view objects.</span></span><br><span class="line">    request.setAttribute(WEB_APPLICATION_CONTEXT_ATTRIBUTE, getWebApplicationContext());</span><br><span class="line">    request.setAttribute(LOCALE_RESOLVER_ATTRIBUTE, <span class="built_in">this</span>.localeResolver);</span><br><span class="line">    request.setAttribute(THEME_RESOLVER_ATTRIBUTE, <span class="built_in">this</span>.themeResolver);</span><br><span class="line">    request.setAttribute(THEME_SOURCE_ATTRIBUTE, getThemeSource());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.flashMapManager != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="type">FlashMap</span> <span class="variable">inputFlashMap</span> <span class="operator">=</span> <span class="built_in">this</span>.flashMapManager.retrieveAndUpdate(request, response);</span><br><span class="line">        <span class="keyword">if</span> (inputFlashMap != <span class="literal">null</span>) &#123;</span><br><span class="line">            request.setAttribute(INPUT_FLASH_MAP_ATTRIBUTE, Collections.unmodifiableMap(inputFlashMap));</span><br><span class="line">        &#125;</span><br><span class="line">        request.setAttribute(OUTPUT_FLASH_MAP_ATTRIBUTE, <span class="keyword">new</span> <span class="title class_">FlashMap</span>());</span><br><span class="line">        request.setAttribute(FLASH_MAP_MANAGER_ATTRIBUTE, <span class="built_in">this</span>.flashMapManager);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">RequestPath</span> <span class="variable">requestPath</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.parseRequestPath &amp;&amp; !ServletRequestPathUtils.hasParsedRequestPath(request)) &#123;</span><br><span class="line">        requestPath = ServletRequestPathUtils.parseAndCache(request);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 处理请求和响应</span></span><br><span class="line">        doDispatch(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!WebAsyncUtils.getAsyncManager(request).isConcurrentHandlingStarted()) &#123;</span><br><span class="line">            <span class="comment">// Restore the original attribute snapshot, in case of an include.</span></span><br><span class="line">            <span class="keyword">if</span> (attributesSnapshot != <span class="literal">null</span>) &#123;</span><br><span class="line">                restoreAttributesAfterInclude(request, attributesSnapshot);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (requestPath != <span class="literal">null</span>) &#123;</span><br><span class="line">            ServletRequestPathUtils.clearParsedRequestPath(request);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="c-gt-doDispatch"><a href="#c-gt-doDispatch" class="headerlink" title="c&gt;doDispatch()"></a>c&gt;doDispatch()</h5><p>所在类：org.springframework.web.servlet.DispatcherServlet</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doDispatch</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="type">HttpServletRequest</span> <span class="variable">processedRequest</span> <span class="operator">=</span> request;</span><br><span class="line">    <span class="type">HandlerExecutionChain</span> <span class="variable">mappedHandler</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">multipartRequestParsed</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">WebAsyncManager</span> <span class="variable">asyncManager</span> <span class="operator">=</span> WebAsyncUtils.getAsyncManager(request);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">ModelAndView</span> <span class="variable">mv</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Exception</span> <span class="variable">dispatchException</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            processedRequest = checkMultipart(request);</span><br><span class="line">            multipartRequestParsed = (processedRequest != request);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Determine handler for the current request.</span></span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            	mappedHandler：调用链</span></span><br><span class="line"><span class="comment">                包含handler、interceptorList、interceptorIndex</span></span><br><span class="line"><span class="comment">            	handler：浏览器发送的请求所匹配的控制器方法</span></span><br><span class="line"><span class="comment">            	interceptorList：处理控制器方法的所有拦截器集合</span></span><br><span class="line"><span class="comment">            	interceptorIndex：拦截器索引，控制拦截器afterCompletion()的执行</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">            mappedHandler = getHandler(processedRequest);</span><br><span class="line">            <span class="keyword">if</span> (mappedHandler == <span class="literal">null</span>) &#123;</span><br><span class="line">                noHandlerFound(processedRequest, response);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Determine handler adapter for the current request.</span></span><br><span class="line">           	<span class="comment">// 通过控制器方法创建相应的处理器适配器，调用所对应的控制器方法</span></span><br><span class="line">            <span class="type">HandlerAdapter</span> <span class="variable">ha</span> <span class="operator">=</span> getHandlerAdapter(mappedHandler.getHandler());</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Process last-modified header, if supported by the handler.</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">method</span> <span class="operator">=</span> request.getMethod();</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">isGet</span> <span class="operator">=</span> <span class="string">&quot;GET&quot;</span>.equals(method);</span><br><span class="line">            <span class="keyword">if</span> (isGet || <span class="string">&quot;HEAD&quot;</span>.equals(method)) &#123;</span><br><span class="line">                <span class="type">long</span> <span class="variable">lastModified</span> <span class="operator">=</span> ha.getLastModified(request, mappedHandler.getHandler());</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">new</span> <span class="title class_">ServletWebRequest</span>(request, response).checkNotModified(lastModified) &amp;&amp; isGet) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">			</span><br><span class="line">            <span class="comment">// 调用拦截器的preHandle()</span></span><br><span class="line">            <span class="keyword">if</span> (!mappedHandler.applyPreHandle(processedRequest, response)) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Actually invoke the handler.</span></span><br><span class="line">            <span class="comment">// 由处理器适配器调用具体的控制器方法，最终获得ModelAndView对象</span></span><br><span class="line">            mv = ha.handle(processedRequest, response, mappedHandler.getHandler());</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (asyncManager.isConcurrentHandlingStarted()) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            applyDefaultViewName(processedRequest, mv);</span><br><span class="line">            <span class="comment">// 调用拦截器的postHandle()</span></span><br><span class="line">            mappedHandler.applyPostHandle(processedRequest, response, mv);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">            dispatchException = ex;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Throwable err) &#123;</span><br><span class="line">            <span class="comment">// As of 4.3, we&#x27;re processing Errors thrown from handler methods as well,</span></span><br><span class="line">            <span class="comment">// making them available for @ExceptionHandler methods and other scenarios.</span></span><br><span class="line">            dispatchException = <span class="keyword">new</span> <span class="title class_">NestedServletException</span>(<span class="string">&quot;Handler dispatch failed&quot;</span>, err);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 后续处理：处理模型数据和渲染视图</span></span><br><span class="line">        processDispatchResult(processedRequest, response, mappedHandler, mv, dispatchException);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">        triggerAfterCompletion(processedRequest, response, mappedHandler, ex);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Throwable err) &#123;</span><br><span class="line">        triggerAfterCompletion(processedRequest, response, mappedHandler,</span><br><span class="line">                               <span class="keyword">new</span> <span class="title class_">NestedServletException</span>(<span class="string">&quot;Handler processing failed&quot;</span>, err));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (asyncManager.isConcurrentHandlingStarted()) &#123;</span><br><span class="line">            <span class="comment">// Instead of postHandle and afterCompletion</span></span><br><span class="line">            <span class="keyword">if</span> (mappedHandler != <span class="literal">null</span>) &#123;</span><br><span class="line">                mappedHandler.applyAfterConcurrentHandlingStarted(processedRequest, response);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// Clean up any resources used by a multipart request.</span></span><br><span class="line">            <span class="keyword">if</span> (multipartRequestParsed) &#123;</span><br><span class="line">                cleanupMultipart(processedRequest);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="d-gt-processDispatchResult"><a href="#d-gt-processDispatchResult" class="headerlink" title="d&gt;processDispatchResult()"></a>d&gt;processDispatchResult()</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">processDispatchResult</span><span class="params">(HttpServletRequest request, HttpServletResponse response,</span></span><br><span class="line"><span class="params">                                   <span class="meta">@Nullable</span> HandlerExecutionChain mappedHandler, <span class="meta">@Nullable</span> ModelAndView mv,</span></span><br><span class="line"><span class="params">                                   <span class="meta">@Nullable</span> Exception exception)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">errorView</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (exception != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (exception <span class="keyword">instanceof</span> ModelAndViewDefiningException) &#123;</span><br><span class="line">            logger.debug(<span class="string">&quot;ModelAndViewDefiningException encountered&quot;</span>, exception);</span><br><span class="line">            mv = ((ModelAndViewDefiningException) exception).getModelAndView();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">Object</span> <span class="variable">handler</span> <span class="operator">=</span> (mappedHandler != <span class="literal">null</span> ? mappedHandler.getHandler() : <span class="literal">null</span>);</span><br><span class="line">            mv = processHandlerException(request, response, handler, exception);</span><br><span class="line">            errorView = (mv != <span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Did the handler return a view to render?</span></span><br><span class="line">    <span class="keyword">if</span> (mv != <span class="literal">null</span> &amp;&amp; !mv.wasCleared()) &#123;</span><br><span class="line">        <span class="comment">// 处理模型数据和渲染视图</span></span><br><span class="line">        render(mv, request, response);</span><br><span class="line">        <span class="keyword">if</span> (errorView) &#123;</span><br><span class="line">            WebUtils.clearErrorRequestAttributes(request);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (logger.isTraceEnabled()) &#123;</span><br><span class="line">            logger.trace(<span class="string">&quot;No view rendering, null ModelAndView returned.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (WebAsyncUtils.getAsyncManager(request).isConcurrentHandlingStarted()) &#123;</span><br><span class="line">        <span class="comment">// Concurrent handling started during a forward</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mappedHandler != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="comment">// Exception (if any) is already handled..</span></span><br><span class="line">        <span class="comment">// 调用拦截器的afterCompletion()</span></span><br><span class="line">        mappedHandler.triggerAfterCompletion(request, response, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4、SpringMVC的执行流程"><a href="#4、SpringMVC的执行流程" class="headerlink" title="4、SpringMVC的执行流程"></a>4、SpringMVC的执行流程</h3><p>1) 用户向服务器发送请求，请求被SpringMVC 前端控制器 DispatcherServlet捕获。</p>
<p>2) DispatcherServlet对请求URL进行解析，得到请求资源标识符（URI），判断请求URI对应的映射：</p>
<p>a) 不存在</p>
<p>i. 再判断是否配置了mvc:default-servlet-handler</p>
<p>ii. 如果没配置，则控制台报映射查找不到，客户端展示404错误</p>
<p><img src="img/img006.png" alt="image-20210709214911404"></p>
<p><img src="img/img007.png" alt="image-20210709214947432"></p>
<p>iii. 如果有配置，则访问目标资源（一般为静态资源，如：JS,CSS,HTML），找不到客户端也会展示404错误</p>
<p><img src="img/img008.png" alt="image-20210709215255693"></p>
<p><img src="img/img009.png" alt="image-20210709215336097"></p>
<p>b) 存在则执行下面的流程</p>
<p>3) 根据该URI，调用HandlerMapping获得该Handler配置的所有相关的对象（包括Handler对象以及Handler对象对应的拦截器），最后以HandlerExecutionChain执行链对象的形式返回。</p>
<p>4) DispatcherServlet 根据获得的Handler，选择一个合适的HandlerAdapter。</p>
<p>5) 如果成功获得HandlerAdapter，此时将开始执行拦截器的preHandler(…)方法【正向】</p>
<p>6) 提取Request中的模型数据，填充Handler入参，开始执行Handler（Controller)方法，处理请求。在填充Handler的入参过程中，根据你的配置，Spring将帮你做一些额外的工作：</p>
<p>a) HttpMessageConveter： 将请求消息（如Json、xml等数据）转换成一个对象，将对象转换为指定的响应信息</p>
<p>b) 数据转换：对请求消息进行数据转换。如String转换成Integer、Double等</p>
<p>c) 数据格式化：对请求消息进行数据格式化。 如将字符串转换成格式化数字或格式化日期等</p>
<p>d) 数据验证： 验证数据的有效性（长度、格式等），验证结果存储到BindingResult或Error中</p>
<p>7) Handler执行完成后，向DispatcherServlet 返回一个ModelAndView对象。</p>
<p>8) 此时将开始执行拦截器的postHandle(…)方法【逆向】。</p>
<p>9) 根据返回的ModelAndView（此时会判断是否存在异常：如果存在异常，则执行HandlerExceptionResolver进行异常处理）选择一个适合的ViewResolver进行视图解析，根据Model和View，来渲染视图。</p>
<p>10) 渲染视图完毕执行拦截器的afterCompletion(…)方法【逆向】。</p>
<p>11) 将渲染结果返回给客户端。</p>
]]></content>
      <categories>
        <category>Spring全家桶</category>
      </categories>
  </entry>
  <entry>
    <title>Spring</title>
    <url>/posts/46eb.html</url>
    <content><![CDATA[<p><meta name="referrer" content="no-referrer" /></p>
<h1 id="Spring5框架"><a href="#Spring5框架" class="headerlink" title="Spring5框架"></a>Spring5框架</h1><h2 id="一、Spring框架概述"><a href="#一、Spring框架概述" class="headerlink" title="一、Spring框架概述"></a>一、Spring框架概述</h2><h3 id="1、Spring概述"><a href="#1、Spring概述" class="headerlink" title="1、Spring概述"></a>1、Spring概述</h3><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Spring是轻量级的开源的<span class="keyword">JavaEE应用程序框架。</span></span><br><span class="line"><span class="keyword"></span><span class="number">2</span>、Spring可以解决企业应用开发的复杂性。</span><br><span class="line"><span class="number">3</span>、Spring有两个核心部分：IOC和Aop</span><br><span class="line">（<span class="number">1</span>）IOC：控制反转，把创建对象过程交给Spring进行管理。</span><br><span class="line">（<span class="number">2</span>）Aop：面向切面，不修改源代码进行功能增强。</span><br><span class="line"><span class="number">4</span>、Spring特点：</span><br><span class="line">（<span class="number">1</span>）方便解耦，简化开发。</span><br><span class="line">（<span class="number">2</span>）Aop编程支持</span><br><span class="line">（<span class="number">3</span>）方便程序的测试</span><br><span class="line">（<span class="number">4</span>）可以方便和其他框架进行整合</span><br><span class="line">（<span class="number">5</span>）方便进行事务操作</span><br><span class="line">（<span class="number">6</span>）降低API开发难度</span><br><span class="line"><span class="number">5</span>、现在课程中，选取Spring版本<span class="number">5</span>.x</span><br><span class="line"><span class="number">6</span>、什么是<span class="keyword">bean？</span></span><br><span class="line"><span class="keyword"></span>在Spring中，构成应用程序主干并且由Spring IOC容器所管理的对象称为<span class="keyword">bean，bean一个由Spring </span>IOC容器实例化、组装和管理的对象。</span><br></pre></td></tr></table></figure>
<h3 id="2、入门案例"><a href="#2、入门案例" class="headerlink" title="2、入门案例"></a>2、入门案例</h3><p>1、下载Spring5</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">spring.<span class="built_in">io</span>官网</span><br><span class="line">点击小猫（官方文件保存在Github）</span><br><span class="line">然后找文件进行下载</span><br></pre></td></tr></table></figure>
<p>2、打开idea工具，创建普通java工程</p>
<p>3、导入Spring5相关jar包</p>
<p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220520174525331.png" alt="image-20220520174525331"></p>
<p>至少需要Core Container 里四个包</p>
<p>4、创建一个普通类，在类中创建一个普通方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lxg.spring5;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;add...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>5、创建Spring配置文件，在配置文件中配置创建的对象</p>
<p>（1）Spring配置文件使用xml格式</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置User对象创建--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lxg.spring5.User&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>6、进行测试代码编写</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lxg.spring5.testDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.lxg.spring5.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestSpring5</span> &#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAdd</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//1.加载Spring配置文件</span></span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;bean1.xml&quot;</span>);</span><br><span class="line">        <span class="comment">//2.获取配置创建的对象</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;user&quot;</span>, User.class);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">        user.add();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="二、IOC容器"><a href="#二、IOC容器" class="headerlink" title="二、IOC容器"></a>二、IOC容器</h2><h3 id="1、IOC底层原理"><a href="#1、IOC底层原理" class="headerlink" title="1、IOC底层原理"></a>1、IOC底层原理</h3><h4 id="IOC（概念和原理）"><a href="#IOC（概念和原理）" class="headerlink" title="IOC（概念和原理）"></a>IOC（概念和原理）</h4><figure class="highlight lasso"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、什么是IOC？</span><br><span class="line">（<span class="number">1</span>）控制反转，把对象的创建和对象之间的调用过程，交给Spring进行管理。</span><br><span class="line">（<span class="number">2</span>)使用IOC的目的：为了耦合度降低</span><br><span class="line">（<span class="number">3</span>）做入门案例就是IOC实现</span><br><span class="line"><span class="number">2</span>、IOC底层原理</span><br><span class="line">（<span class="number">1</span>）<span class="built_in">xml</span>解析，工厂模式、反射</span><br><span class="line"><span class="number">3</span>、画图讲解IOC底层原理</span><br><span class="line">如下：</span><br></pre></td></tr></table></figure>
<p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220520184126709.png" alt="image-20220520184126709"></p>
<p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220520185016239.png" alt="image-20220520185016239"></p>
<p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220520185631075.png" alt="image-20220520185631075"></p>
<p>进一步降低耦合度</p>
<h3 id="2、IOC接口（BeanFactory）"><a href="#2、IOC接口（BeanFactory）" class="headerlink" title="2、IOC接口（BeanFactory）"></a>2、IOC接口（BeanFactory）</h3><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、IOC思想基于IOC容器完成，IOC容器底层就是对象工厂</span><br><span class="line"><span class="number">2</span>、Spring提供了IOC容器实现的两种方式：（两个接口）</span><br><span class="line">（<span class="number">1</span>）<span class="keyword">BeanFactory：IOC容器基本实现，是Spring内部的使用接口，不提供开发人员进行使用</span></span><br><span class="line"><span class="keyword"></span>	加载配置文件时不会创建对象，在获取对象（使用）时采取创建对象。</span><br><span class="line">（<span class="number">2</span>）ApplicationContext：<span class="keyword">BeanFactory接口的子接口，提供更多更强大的功能，一般由开发人员进行使用。</span></span><br><span class="line"><span class="keyword"></span>	加载配置文件的时候就会把配置文件对象进行创建</span><br><span class="line"><span class="number">3</span>、ApplicationContext接口有实现类</span><br><span class="line">如下：</span><br></pre></td></tr></table></figure>
<p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220521090446626.png" alt="image-20220521090446626"></p>
<h3 id="3、IOC操作-Bean-管理"><a href="#3、IOC操作-Bean-管理" class="headerlink" title="3、IOC操作 Bean 管理"></a>3、IOC操作 Bean 管理</h3><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、什么是<span class="keyword">Bean管理</span></span><br><span class="line"><span class="keyword"></span>（<span class="number">0</span>）<span class="keyword">Bean管理指的就是两个操作</span></span><br><span class="line"><span class="keyword"></span>（<span class="number">1</span>）Spring创建对象</span><br><span class="line">（<span class="number">2</span>）Spring注入属性</span><br><span class="line"><span class="number">2</span>、<span class="keyword">Bean管理的两种方式</span></span><br><span class="line"><span class="keyword"></span>（<span class="number">1</span>）基于xml配置文件方式实现</span><br><span class="line">（<span class="number">2</span>）基于注解方式实现</span><br></pre></td></tr></table></figure>
<h4 id="3-1、IOC操作-Bean管理（基于xml方式）"><a href="#3-1、IOC操作-Bean管理（基于xml方式）" class="headerlink" title="3.1、IOC操作 Bean管理（基于xml方式）"></a>3.1、IOC操作 Bean管理（基于xml方式）</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">1、基于xml方式创建对象</span><br><span class="line">（1）在Spring配置文件中，使用Bean标签，标签里面添加对应属性，就可以实现对象创建</span><br><span class="line">（2）在bean标签有很多属性，介绍常用的属性：</span><br><span class="line">	①id属性：唯一标识</span><br><span class="line">	②class属性：类全路径（包类路径）</span><br><span class="line">	③name属性：功能跟id一样，name可以加特殊符号</span><br><span class="line">（3）创建对象时候，默认也是执行无参数构造方法完成对象创建</span><br><span class="line">2、基于xml方式注入属性</span><br><span class="line">（1）DI：是IOC的一个具体实现，依赖注入，就是注入属性</span><br><span class="line">（2）第一种注入方式：使用set方法进行注入</span><br><span class="line">	①创建类，定义属性和对应的set方法</span><br><span class="line">	public class Book &#123;</span><br><span class="line">    //创建属性</span><br><span class="line">    private String bname;</span><br><span class="line">    private String bauthor;</span><br><span class="line">    //创建属性对应的set方法</span><br><span class="line">    public void setBname(String bname) &#123;</span><br><span class="line">        this.bname = bname;</span><br><span class="line">    &#125;</span><br><span class="line">    public void setBauthor(String bauthor) &#123;</span><br><span class="line">        this.bauthor = bauthor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">	②在Spring配置文件配置对象创建，配置属性注入</span><br><span class="line">    <span class="comment">&lt;!--2、set方法注入属性--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lxg.spring5.Book&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--使用property完成属性注入</span></span><br><span class="line"><span class="comment">            name：类里面属性名称</span></span><br><span class="line"><span class="comment">            value：向属性注入的值</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;bname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;西游记&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;bauthor&quot;</span> <span class="attr">value</span>=<span class="string">&quot;吴承恩&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">（3）第二种注入方式：使用有参构造进行注入</span><br><span class="line">	①创建类，定义属性，创建属性对应的有参构造方法</span><br><span class="line">	public class Order &#123;</span><br><span class="line">    private String name;</span><br><span class="line">    private String address;</span><br><span class="line"></span><br><span class="line">    public Order(String name, String address) &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">        this.address = address;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">	②在Spring配置文件中进行配置</span><br><span class="line">	 <span class="comment">&lt;!--有参构造注入属性--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;orders&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lxg.spring5.Orders&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;电脑&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;address&quot;</span> <span class="attr">value</span>=<span class="string">&quot;中国&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">	注意：也可这么写</span><br><span class="line">	<span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">value</span>=<span class="string">&quot;电脑&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">（4）p名称空间注入（set方法注入的简化）</span><br><span class="line">	①使用p名称空间注入，可以简化基于xml配置方式</span><br><span class="line">	第一步添加p名称空间在配置文件中。</span><br><span class="line">	<span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line">	第二步进行属性注入，在bean标签里面进行操作</span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;book&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lxg.spring5.Book&quot;</span> <span class="attr">p:bname</span>=<span class="string">&quot;红楼梦&quot;</span> <span class="attr">p:bauthor</span>=<span class="string">&quot;曹雪芹&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="3-1-1、-IOC操作-Bean管理（xml注入其他类型属性）"><a href="#3-1-1、-IOC操作-Bean管理（xml注入其他类型属性）" class="headerlink" title="3.1.1、 IOC操作 Bean管理（xml注入其他类型属性）"></a>3.1.1、 IOC操作 Bean管理（xml注入其他类型属性）</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">1、字面量 name</span><br><span class="line">（1）null值</span><br><span class="line">	 <span class="comment">&lt;!--null值--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;address&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">null</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">（2）属性值包含特殊符号</span><br><span class="line">	<span class="comment">&lt;!--属性值包含特殊符号</span></span><br><span class="line"><span class="comment">               1.把&lt;&gt;进行转义 &amp;lt; &amp;gt;</span></span><br><span class="line"><span class="comment">               2.把带特殊符号内容写到CDATA中</span></span><br><span class="line"><span class="comment">			   3.格式：&lt;![CDATA[你想写的内容]]&gt;</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;address&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>&lt;![CDATA[&lt;&lt;南京&gt;&gt;]]&gt;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">2、注入属性-外部bean</span><br><span class="line">	（1）创建两个类service类和Dao类</span><br><span class="line">		public class UserService &#123;</span><br><span class="line"></span><br><span class="line">    public void setUserDao(UserDao userDao) &#123;</span><br><span class="line">        this.userDao = userDao;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //创建UserDao类型属性，生成set方法</span><br><span class="line">    private UserDao userDao;</span><br><span class="line"></span><br><span class="line">    public void add() &#123;</span><br><span class="line">        System.out.println(&quot;service add...&quot;);</span><br><span class="line">        //原始的方法</span><br><span class="line">//        UserDao userDao = new UserDaoImpl();</span><br><span class="line">//        userDao.update();</span><br><span class="line">        //使用set方法注入</span><br><span class="line">        userDao.update();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">	（2）在service中调用dao里面的方法</span><br><span class="line">	（3）在Spring配置文件中进行配置</span><br><span class="line">		<span class="comment">&lt;!--1、service和dao对象创建--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lxg.spring5.service.UserService&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--注入userDao对象</span></span><br><span class="line"><span class="comment">            name:类中的属性名称</span></span><br><span class="line"><span class="comment">            ref:引用的bean的id(创建userDao对象bean标签的id值)</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;userDaoImpl&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDaoImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lxg.spring5.dao.UserDaoImpl&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">	（4）测试</span><br><span class="line">		 @Test</span><br><span class="line">    public void testAdd() &#123;</span><br><span class="line">        //加载Spring配置文件</span><br><span class="line">        ApplicationContext context =</span><br><span class="line">                new ClassPathXmlApplicationContext(&quot;bean2.xml&quot;);</span><br><span class="line">        //获取bean</span><br><span class="line">         UserService userService = context.getBean(&quot;userService&quot;, UserService.class);</span><br><span class="line">        //调用方法</span><br><span class="line">        userService.add();</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">3、注入属性-内部bean</span><br><span class="line">（1）一对多关系：部门和员工</span><br><span class="line">	一个部门可以有多个员工，一个员工属于一个部门</span><br><span class="line">	部门是一，员工是多。</span><br><span class="line">（2）在实体类之间表示一对多关系</span><br><span class="line">//部门类</span><br><span class="line">public class Dept &#123;</span><br><span class="line">    private String deptName;</span><br><span class="line"></span><br><span class="line">    public void setDeptName(String deptName) &#123;</span><br><span class="line">        this.deptName = deptName;</span><br><span class="line">    &#125;</span><br><span class="line">	public String getDname() &#123;</span><br><span class="line">        return dname;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">//员工类</span><br><span class="line">public class Emp &#123;</span><br><span class="line">    private String ename;</span><br><span class="line">    private String job;</span><br><span class="line">    //员工属于某一个部门，使用对象形式表示</span><br><span class="line">    private Dept dept;</span><br><span class="line"></span><br><span class="line">    public void setDept(Dept dept) &#123;</span><br><span class="line">        this.dept = dept;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setEname(String ename) &#123;</span><br><span class="line">        this.ename = ename;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setJob(String job) &#123;</span><br><span class="line">        this.job = job;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">（3）在Spring配置文件中进行配置</span><br><span class="line"><span class="comment">&lt;!--内部bean--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;emp&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lxg.spring5.bean.Emp&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--先设置两个普通的属性--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;ename&quot;</span> <span class="attr">value</span>=<span class="string">&quot;lxg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;job&quot;</span> <span class="attr">value</span>=<span class="string">&quot;java&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--设置对象类型属性--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dept&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span> = <span class="string">&quot;dept&quot;</span> <span class="attr">class</span> = <span class="string">&quot;com.lxg.spring5.bean.Dept&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span> =<span class="string">&quot;dname&quot;</span> <span class="attr">value</span> = <span class="string">&quot;程序员&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">4、注入属性-级联赋值</span><br><span class="line">（1）第一种写法</span><br><span class="line"><span class="comment">&lt;!--级联赋值--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;emp&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lxg.spring5.bean.Emp&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--先设置两个普通的属性--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;ename&quot;</span> <span class="attr">value</span>=<span class="string">&quot;xiaolin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;job&quot;</span> <span class="attr">value</span>=<span class="string">&quot;总经理&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--级联赋值--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dept&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dept&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dept&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lxg.spring5.bean.Dept&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;财务部&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">（2）第二种写法</span><br><span class="line">    对象必须有get方法</span><br><span class="line"><span class="comment">&lt;!--级联赋值--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;emp&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lxg.spring5.bean.Emp&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--先设置两个普通的属性--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;ename&quot;</span> <span class="attr">value</span>=<span class="string">&quot;xiaolin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;job&quot;</span> <span class="attr">value</span>=<span class="string">&quot;总经理&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--级联赋值--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dept&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dept&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dept.dname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;技术部&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dept&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lxg.spring5.bean.Dept&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="3-1-2-、IOC操作-Bean管理（xml注入集合属性）"><a href="#3-1-2-、IOC操作-Bean管理（xml注入集合属性）" class="headerlink" title="3.1.2 、IOC操作 Bean管理（xml注入集合属性）"></a>3.1.2 、IOC操作 Bean管理（xml注入集合属性）</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、注入数组类型属性</span><br><span class="line"><span class="number">2</span>、注入List集合类型属性</span><br><span class="line"><span class="number">3</span>、注入Map集合类型属性</span><br><span class="line"><span class="number">4</span>、注入Set集合类型属性</span><br><span class="line">（<span class="number">1</span>）创建类，定义属性和相关属性set方法</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Stu</span> &#123;</span><br><span class="line">    <span class="comment">//1、数组类型属性</span></span><br><span class="line">    <span class="keyword">private</span> String[] courses;</span><br><span class="line">    <span class="comment">//2、List类型属性</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; list;</span><br><span class="line">    <span class="comment">//3、Map类型属性</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,String&gt; maps;</span><br><span class="line">    <span class="comment">//4、Set类型属性</span></span><br><span class="line">    <span class="keyword">private</span> Set&lt;String&gt; sets;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCourses</span><span class="params">(String[] courses)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.courses = courses;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setList</span><span class="params">(List&lt;String&gt; list)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.list = list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMaps</span><span class="params">(Map&lt;String, String&gt; maps)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.maps = maps;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSets</span><span class="params">(Set&lt;String&gt; sets)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sets = sets;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">（2）在Spring配置文件进行配置</span><br><span class="line"><span class="comment">&lt;!--1、集合类型属性注入--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;stu&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lxg.spring5.collectiontype.Stu&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--1、数组类型属性注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;courses&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>java<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>c++<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>pyhton<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--2、数组类型属性注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>李四<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>王五<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--3、Map类型属性注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maps&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;张三&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;李四&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;王五&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--4、Set类型属性注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sets&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>MySQL<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>Web<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>Spring<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">5、在集合里面设置对象类型值</span><br><span class="line"><span class="comment">&lt;!--注入list集合类型，值是对象--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;coursesList&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;course1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;course2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--创建多个course对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;course1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lxg.spring5.collectiontype.Course&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Spring5框架&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;course2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lxg.spring5.collectiontype.Course&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;MyBatis框架&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">6、把集合注入部分提取出来共用</span><br><span class="line">（1）在Spring配置文件中引入一个名称空间util</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:util</span>=<span class="string">&quot;http://www.springframework.org/schema/util&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd&quot;</span>&gt;</span></span><br><span class="line">（2）用util标签完成list集合注入提取</span><br><span class="line">    <span class="comment">&lt;!--提取list集合类型属性注入--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">util:list</span> <span class="attr">id</span>=<span class="string">&quot;bookList&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>西游记<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>红楼梦<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>三国演义<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">util:list</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--怎么使用--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;book&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lxg.spring5.collectiontype.Book&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;list&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;bookList&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="3-1-3-、IOC-操作-Bean管理（FactoryBean）"><a href="#3-1-3-、IOC-操作-Bean管理（FactoryBean）" class="headerlink" title="3.1.3 、IOC 操作 Bean管理（FactoryBean）"></a>3.1.3 、IOC 操作 Bean管理（FactoryBean）</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Spring有两种bean,一种普通bean，另外一种工厂bean（FactoryBean）</span><br><span class="line"><span class="number">2</span>、普通bean：在配置文件中定义bean类型就是返回的类型</span><br><span class="line"><span class="number">3</span>、工厂bean：在配置文件中定义bean类型可以和返回类型不一样</span><br><span class="line">	第一步：创建类，让这个类作为工厂bean，实现接口FactoryBean</span><br><span class="line">	第二步：实现接口里面的方法，在实现的方法中定义返回的bean类型</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBean</span> <span class="keyword">implements</span> <span class="title class_">FactoryBean</span>&lt;Course&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义返回bean</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Course <span class="title function_">getObject</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Course</span> <span class="variable">course</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Course</span>();</span><br><span class="line">        course.setCname(<span class="string">&quot;java&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> course;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Class&lt;?&gt; getObjectType() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isSingleton</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> FactoryBean.<span class="built_in">super</span>.isSingleton();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testMyBean</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;bean3.xml&quot;</span>);</span><br><span class="line">        <span class="type">Course</span> <span class="variable">course</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;myBean&quot;</span>, Course.class);</span><br><span class="line">        System.out.println(course);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//配置文件</span></span><br><span class="line">&lt;bean id=<span class="string">&quot;myBean&quot;</span> class=<span class="string">&quot;com.lxg.spring5.factorybean.MyBean&quot;</span>&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br></pre></td></tr></table></figure>
<h5 id="3-1-4、-IOC-操作-Bean管理（bean的作用域）"><a href="#3-1-4、-IOC-操作-Bean管理（bean的作用域）" class="headerlink" title="3.1.4、 IOC 操作 Bean管理（bean的作用域）"></a>3.1.4、 IOC 操作 Bean管理（bean的作用域）</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、在Spring里面，设置创建bean实例是单实例还是多实例。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、在Spring里面，默认情况下，bean是一个单实例对象</span><br><span class="line"> <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testCollection2</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;bean2.xml&quot;</span>);</span><br><span class="line">        <span class="type">Book</span> <span class="variable">book1</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;book&quot;</span>, Book.class);</span><br><span class="line">        <span class="comment">//book.show();</span></span><br><span class="line">        Book book2= context.getBean(<span class="string">&quot;book&quot;</span>, Book.class);</span><br><span class="line">        System.out.println(book1);</span><br><span class="line">        System.out.println(book2);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//结果</span></span><br><span class="line">    com.lxg.spring5.collectiontype.Book@7bd7d6d6</span><br><span class="line">com.lxg.spring5.collectiontype.Book@7bd7d6d6</span><br><span class="line">        </span><br><span class="line"><span class="number">3</span>、如何设置单实例还是多实例</span><br><span class="line">（<span class="number">1</span>）在Spring配置文件bean标签里面有属性（scope）用于设置单实例还是多实例    </span><br><span class="line">（<span class="number">2</span>）scope属性值</span><br><span class="line">第一个值：默认值，singleton，表示单实例对象</span><br><span class="line">第二个prototype，表示是多实例对象</span><br><span class="line">        &lt;bean id=<span class="string">&quot;book&quot;</span> class=<span class="string">&quot;com.lxg.spring5.collectiontype.Book&quot;</span> scope=<span class="string">&quot;prototype&quot;</span>&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;list&quot;</span> ref=<span class="string">&quot;bookList&quot;</span>&gt;&lt;/property&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">            </span><br><span class="line"> <span class="comment">//结果</span></span><br><span class="line">com.lxg.spring5.collectiontype.Book@5b799640</span><br><span class="line">com.lxg.spring5.collectiontype.Book@6cb107fd</span><br><span class="line">（<span class="number">3</span>）singleton和prototype区别</span><br><span class="line">第一singleton单实例，prototype多实例</span><br><span class="line">第二设置scope值是singleton时候，加载Spring配置文件时就会创建单实例对象</span><br><span class="line">设置scope值是prototype时候，不是在加载Spring配置文件时候创建，在调用getBean方法时候创建多实例对象</span><br><span class="line">（<span class="number">4</span>）request和session（了解）  </span><br></pre></td></tr></table></figure>
<h5 id="3-1-5-、IOC操作Bean-管理（bean生命周期）"><a href="#3-1-5-、IOC操作Bean-管理（bean生命周期）" class="headerlink" title="3.1.5 、IOC操作Bean 管理（bean生命周期）"></a>3.1.5 、IOC操作Bean 管理（bean生命周期）</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、生命周期</span><br><span class="line">（<span class="number">1</span>）从对象创建到对象销毁的过程</span><br><span class="line"><span class="number">2</span>、bean生命周期</span><br><span class="line">（<span class="number">1</span>）通过构造器创建bean实例(无参数构造)</span><br><span class="line">（<span class="number">2</span>）为bean的属性设置值和其他bean的引用（调用set方法）</span><br><span class="line">（<span class="number">3</span>）调用bean的初始化的方法（需要进行配置初始化的方法）</span><br><span class="line">（<span class="number">4</span>）bean可以使用了（对象获取到了）</span><br><span class="line">（<span class="number">5</span>）当容器关闭时候，调用bean的销毁方法（需要进行配置销毁的方法）</span><br><span class="line"><span class="number">3</span>、演示bean的生命周期</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Orders</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Orders</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;第一步执行无参数构造方法创建bean实例&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String oname;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOname</span><span class="params">(String oname)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.oname = oname;</span><br><span class="line">        System.out.println(<span class="string">&quot;第二步执行set方法设置属性值&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建执行的初始化方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initMethod</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;第三步执行初始化方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//创建执行的销毁方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroyMethod</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;第五步执行销毁方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">测试：</span><br><span class="line">     <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testMyBean3</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">/*ApplicationContext context =</span></span><br><span class="line"><span class="comment">                new ClassPathXmlApplicationContext(&quot;bean4.xml&quot;);*/</span></span><br><span class="line">        <span class="type">ClassPathXmlApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;bean4.xml&quot;</span>);</span><br><span class="line">        <span class="type">Orders</span> <span class="variable">orders</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;orders&quot;</span>, Orders.class);</span><br><span class="line">        System.out.println(<span class="string">&quot;第四步：获取创建的bean实例对象&quot;</span>);</span><br><span class="line">        System.out.println(orders);</span><br><span class="line">        <span class="comment">//执行销毁方法</span></span><br><span class="line"><span class="comment">//        ((ClassPathXmlApplicationContext) context).close();</span></span><br><span class="line">        context.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">配置文件：</span><br><span class="line">     &lt;bean id=<span class="string">&quot;orders&quot;</span> class=<span class="string">&quot;com.lxg.spring5.bean.Orders&quot;</span> init-method=<span class="string">&quot;initMethod&quot;</span> destroy-method=<span class="string">&quot;destroyMethod&quot;</span>&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;oname&quot;</span> value=<span class="string">&quot;手机&quot;</span>&gt;&lt;/property&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">         </span><br><span class="line">结果：</span><br><span class="line">第一步执行无参数构造方法创建bean实例</span><br><span class="line">第二步执行set方法设置属性值</span><br><span class="line">第三步执行初始化方法</span><br><span class="line">第四步：获取创建的bean实例对象</span><br><span class="line">com.lxg.spring5.bean.Orders@<span class="number">5386659f</span></span><br><span class="line">第五步执行销毁方法</span><br><span class="line">         </span><br><span class="line"><span class="number">4</span>、bean的后置处理器，bean的生命周期有七步</span><br><span class="line">（<span class="number">1</span>）通过构造器创建bean实例(无参数构造)</span><br><span class="line">（<span class="number">2</span>）为bean的属性设置值和其他bean的引用（调用st方法）</span><br><span class="line">（<span class="number">3</span>）把bean实例传递bean后置处理器的方法postProcessBeforeInitialization(Object bean, String beanName)</span><br><span class="line">（<span class="number">4</span>）调用bean的初始化的方法（需要进行配置初始化的方法）</span><br><span class="line">（<span class="number">5</span>）把bean实例传递bean后置处理器的方法postProcessAfterInitialization(Object bean, String beanName) </span><br><span class="line">（<span class="number">6</span>）bean可以使用了（对象获取到了）</span><br><span class="line">（<span class="number">7</span>）当容器关闭时候，调用bean的销毁方法（需要进行配置销毁的方法）</span><br><span class="line"><span class="number">5</span>、演示添加后置处理器效果</span><br><span class="line">（<span class="number">1</span>）创建类，实现接口BeanPostProcessor，创建后置处理器</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBeanPost</span> <span class="keyword">implements</span> <span class="title class_">BeanPostProcessor</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">postProcessBeforeInitialization</span><span class="params">(Object bean, String beanName)</span> <span class="keyword">throws</span> BeansException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;在初始化之前执行的方法&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">postProcessAfterInitialization</span><span class="params">(Object bean, String beanName)</span> <span class="keyword">throws</span> BeansException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;在初始化之后执行的方法&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">配置文件</span><br><span class="line">    &lt;!--配置后置处理器--&gt;</span><br><span class="line">    &lt;bean id=<span class="string">&quot;myBeanPost&quot;</span> class=<span class="string">&quot;com.lxg.spring5.bean.MyBeanPost&quot;</span>&gt;&lt;/bean&gt;</span><br><span class="line">结果：</span><br><span class="line">第一步执行无参数构造方法创建bean实例 </span><br><span class="line">第二步执行set方法设置属性值</span><br><span class="line">在初始化之前执行的方法</span><br><span class="line">第三步执行初始化方法</span><br><span class="line">在初始化之后执行的方法</span><br><span class="line">第四步：获取创建的bean实例对象</span><br><span class="line">com.lxg.spring5.bean.Orders@48bb62</span><br><span class="line">第五步执行销毁方法</span><br></pre></td></tr></table></figure>
<h5 id="3-1-6-、IOC操作Bean管理（xml自动装配）"><a href="#3-1-6-、IOC操作Bean管理（xml自动装配）" class="headerlink" title="3.1.6 、IOC操作Bean管理（xml自动装配）"></a>3.1.6 、IOC操作Bean管理（xml自动装配）</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">1、什么是自动装配？</span><br><span class="line">（1）根据指定的装配规则（属性名称或者属性类型），Spring自动将匹配的属性值进行注入</span><br><span class="line">2、演示自动装配过程</span><br><span class="line"><span class="comment">&lt;!--实现自动装配</span></span><br><span class="line"><span class="comment">        bean标签属性autowire，配置自动装配</span></span><br><span class="line"><span class="comment">        autowire属性常用两个值:</span></span><br><span class="line"><span class="comment">        byName根据属性名称注入，注入值bean的id值和类属性名称一致</span></span><br><span class="line"><span class="comment">        byType根据属性类型注入，不能有多个同类型的bean</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">①根据属性名称注入</span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;emp&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lxg.spring5.autowire.Emp&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;property name=&quot;dept&quot; ref=&quot;dept&quot;&gt;&lt;/property&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dept&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lxg.spring5.autowire.Dept&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">②根据属性类型注入</span><br><span class="line"> <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;emp&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lxg.spring5.autowire.Emp&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byType&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;property name=&quot;dept&quot; ref=&quot;dept&quot;&gt;&lt;/property&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dept&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lxg.spring5.autowire.Dept&quot;</span>&gt;</span></span><br><span class="line">    &lt;bean<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h5 id="3-1-7、IOC操作Bean管理（外部属性文件）"><a href="#3-1-7、IOC操作Bean管理（外部属性文件）" class="headerlink" title="3.1.7、IOC操作Bean管理（外部属性文件）"></a>3.1.7、IOC操作Bean管理（外部属性文件）</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">1、直接配置数据库信息</span><br><span class="line">（1）配置德鲁伊连接池</span><br><span class="line"> <span class="comment">&lt;!--直接配置连接池--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/bjpowernode&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;623718&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">（2）引入德鲁伊连接池依赖jar包</span><br><span class="line">2、引入外部属性文件配置数据库连接池</span><br><span class="line">（1）创建外部属性文件，properties格式文件，写上数据库信息</span><br><span class="line">properties配置文件：</span><br><span class="line">    prop.driverClass=com.mysql.jdbc.Driver</span><br><span class="line">    prop.url=jdbc:mysql://localhost:3306/bjpowernode</span><br><span class="line">    prop.user=root</span><br><span class="line">    prop.password=623718</span><br><span class="line">（2）把外部properties属性文件引入Spring配置文件中</span><br><span class="line">引入context名称空间</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:util</span>=<span class="string">&quot;http://www.springframework.org/schema/util&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">                            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">                            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line">（3）在Spring配置文件中使用标签引入外部属性文件</span><br><span class="line">    <span class="comment">&lt;!--引入外部属性文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置连接池--&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;prop.driverClass&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;prop.url&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;prop.user&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;prop.password&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="三、IOC操作Bean管理（基于注解方式）"><a href="#三、IOC操作Bean管理（基于注解方式）" class="headerlink" title="三、IOC操作Bean管理（基于注解方式）"></a>三、IOC操作Bean管理（基于注解方式）</h2><h4 id="1、什么是注解？"><a href="#1、什么是注解？" class="headerlink" title="1、什么是注解？"></a>1、什么是注解？</h4><ol>
<li>注解是代码特殊标记，格式：@注解名称(属性名称=属性值，属性名称=属性值…)</li>
<li>使用注解，注解可以作用在类上面，方法上面，属性上面</li>
<li>使用注解的目的：简化xml配置</li>
</ol>
<h4 id="2、Spring针对Bean管理中创建对象提供的注解"><a href="#2、Spring针对Bean管理中创建对象提供的注解" class="headerlink" title="2、Spring针对Bean管理中创建对象提供的注解"></a>2、Spring针对Bean管理中创建对象提供的注解</h4><ol>
<li>@Component</li>
<li>@Service</li>
<li>@Controller</li>
<li>@Repository</li>
</ol>
<p><strong>注意：</strong>上面四个注解功能是一样的，都可以用来创建bean实例</p>
<h4 id="3、基于注解方式实现对象创建"><a href="#3、基于注解方式实现对象创建" class="headerlink" title="3、基于注解方式实现对象创建"></a>3、基于注解方式实现对象创建</h4><ol>
<li>引入依赖<br>spring-aop-5.3.20.jar</li>
<li>开启组件扫描</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--开启组件扫描</span></span><br><span class="line"><span class="comment">    1、如果扫描多个包，包之间使用逗号隔开</span></span><br><span class="line"><span class="comment">    2、也可以直接扫描上层目录包</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.lxg.spring5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ol>
<li><p>创建类，在类上面添加创建对象注解</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//在注解里面value属性值可以省略不写</span></span><br><span class="line"><span class="comment">//默认值是类名首字母小写</span></span><br><span class="line"><span class="comment">//UserService---userService</span></span><br><span class="line"><span class="meta">@Component(value=&quot;userService&quot;)</span><span class="comment">//&lt;bean id=&quot;userService&quot; class=&quot;&quot;....&quot;&quot;&gt;;</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addUser</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(&amp;quot;addUser...&amp;quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>测试</p>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testService</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;bean1.xml&quot;</span>);</span><br><span class="line">    <span class="type">UserService</span> <span class="variable">userService</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;userService&quot;</span>, UserService.class);</span><br><span class="line">    System.out.println(userService);</span><br><span class="line">    userService.addUser();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//com.lxg.spring5.service.UserService@48b67364</span></span><br><span class="line"><span class="comment">//addUser...</span></span><br></pre></td></tr></table></figure>
<h4 id="4、开启组件扫描细节配置"><a href="#4、开启组件扫描细节配置" class="headerlink" title="4、开启组件扫描细节配置"></a>4、开启组件扫描细节配置</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--示例1</span></span><br><span class="line"><span class="comment">    use-default-lazy-init=&quot;false&quot;表示现在不适用默认filter，使用自己配置filter</span></span><br><span class="line"><span class="comment">    context:include-filter=&quot;filter1&quot;表示使用filter1过滤器,可以设置扫描哪些内容</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.lxg.spring5&quot;</span> <span class="attr">use-default-filters</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:include-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span>           <span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Controller&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--示例2</span></span><br><span class="line"><span class="comment">    下面配置扫描包所有内容</span></span><br><span class="line"><span class="comment">    exclude-filter=&quot;filter1&quot;表示排除filter1过滤器,可以设置不扫描哪些内容</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.lxg.spring5&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:exclude-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Controller&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="5、基于注解方式实现属性注入"><a href="#5、基于注解方式实现属性注入" class="headerlink" title="5、基于注解方式实现属性注入"></a>5、基于注解方式实现属性注入</h4><ol>
<li><p>@AutoWired</p>
<ul>
<li>根据属性类型进行自动装配</li>
<li>第一步把service和dao对象创建，在service和dao类添加创建对象注解</li>
<li>第二步在service中注入dao对象，在service类中添加dao类型属性，在属性上面使用注解</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="comment">//定义dao类型属性</span></span><br><span class="line">    <span class="comment">//不需要添加set方法</span></span><br><span class="line">    <span class="comment">//添加注入属性注解</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addUser</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;addUser...&quot;</span>);</span><br><span class="line">        userDao.add();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>@Qualifier</p>
<ul>
<li>根据名称进行注入</li>
<li>这个注解的使用，需要和上面@Autowired一起使用</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义dao类型属性</span></span><br><span class="line"><span class="comment">//不需要添加set方法</span></span><br><span class="line"><span class="comment">//添加注入属性注解</span></span><br><span class="line"><span class="meta">@Autowired</span> <span class="comment">//根据类型进行注入</span></span><br><span class="line"><span class="meta">@Qualifier(value = &quot;userDaoImpl1&quot;)</span><span class="comment">//根据名称进行注入</span></span><br><span class="line"><span class="keyword">private</span> UserDao userDao;</span><br></pre></td></tr></table></figure>
</li>
<li><p>@Resource</p>
<ul>
<li>可以根据类型注入，也可以根据名称注入</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//@Resource//根据类型进行注入</span></span><br><span class="line"><span class="meta">@Resource(name = &quot;userDaoImpl1&quot;)</span><span class="comment">//根据名称进行注入</span></span><br></pre></td></tr></table></figure>
<ul>
<li>是 javax.annotation.Resource包下的依赖，不是Spring的，一般不建议使用。</li>
</ul>
</li>
<li><p>@value</p>
<ul>
<li>注入普通类型属性</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Value(value = &quot;lxg&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="6、完全注解开发"><a href="#6、完全注解开发" class="headerlink" title="6、完全注解开发"></a>6、完全注解开发</h4><ol>
<li>创建配置类，替代xml配置文件</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span> <span class="comment">//作为配置类，替代xml配置文件</span></span><br><span class="line"><span class="meta">@ComponentScan(basePackages = &quot;com.lxg.spring5&quot;)</span> <span class="comment">//扫描包，指定扫描的包</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>编写测试类</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testService2</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//加载配置类</span></span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>(SpringConfig.class);</span><br><span class="line">    <span class="type">UserService</span> <span class="variable">userService</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;userService&quot;</span>, UserService.class);</span><br><span class="line">    System.out.println(userService);</span><br><span class="line">    userService.addUser();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="四、AOP"><a href="#四、AOP" class="headerlink" title="四、AOP"></a>四、AOP</h2><h2 id="1、什么是AOP？"><a href="#1、什么是AOP？" class="headerlink" title="1、什么是AOP？"></a>1、什么是AOP？</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">1、面向切面编程（方面），利用AOP可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高查询的可重用性，同时提高了开发的效率。</span><br><span class="line">2、通俗描述：不通过修改源代码的方式，在主干功能中添加新功能。</span><br><span class="line">3、使用登录例子说明AOP</span><br></pre></td></tr></table></figure>
<p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220522225818914.png" alt="image-20220522225818914"></p>
<h2 id="2、AOP（底层原理）"><a href="#2、AOP（底层原理）" class="headerlink" title="2、AOP（底层原理）"></a>2、AOP（底层原理）</h2><h3 id="2-1、AOP底层使用动态代理"><a href="#2-1、AOP底层使用动态代理" class="headerlink" title="2.1、AOP底层使用动态代理"></a>2.1、AOP底层使用动态代理</h3><ol>
<li><p>有两种情况的动态代理</p>
<ul>
<li><p>第一种有接口情况，使用JDK动态代理</p>
<p>创建接口实现类代理对象，增强类的方法</p>
</li>
<li><p>第二种没有接口情况，使用CGLIB动态代理</p>
<p>创建子类的代理对象，增强类的方法</p>
</li>
</ul>
</li>
</ol>
<p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220522232216936.png" alt="image-20220522232216936"></p>
<p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220522232302468.png" alt="image-20220522232302468"></p>
<h3 id="2-2、AOP（JDK动态代理）"><a href="#2-2、AOP（JDK动态代理）" class="headerlink" title="2.2、AOP（JDK动态代理）"></a>2.2、AOP（JDK动态代理）</h3><ol>
<li>使用JDK动态代理，使用Proxy类里面的方法创建代理对象</li>
</ol>
<p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220523081301975.png" alt="image-20220523081301975"  /></p>
<p>1)调用newProxyInstance方法<img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220523081531637.png" alt="image-20220523081531637"></p>
<p>方法有三个参数：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">第一个参数，类加载器</span><br><span class="line">第二个参数，增强方法所在的类，这个类实现的接口，支持多个接口</span><br><span class="line">第三个参数，实现这个接口InvocationHandler，创建代理对象，写增强的部分。</span><br></pre></td></tr></table></figure>
<ol>
<li>JDK动态代理代码</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、创建接口，定义方法</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span>;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">update</span><span class="params">(String id)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">2</span>、创建接口实现类，实现方法</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;add方法执行了...&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> a+b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">update</span><span class="params">(String id)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;update方法执行了...&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">3</span>、使用Proxy类创建接口代理对象</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JDKProxy</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建接口实现类代理对象</span></span><br><span class="line">        Class[] interfaces = &#123;UserDao.class&#125;;</span><br><span class="line">        <span class="comment">/*Proxy.newProxyInstance(JDKProxy.class.getClassLoader(), interfaces, new InvocationHandler() &#123;</span></span><br><span class="line"><span class="comment">            @Override</span></span><br><span class="line"><span class="comment">            public Object invoke(Object proxy, Method method, Object[] args) throws Throwable &#123;</span></span><br><span class="line"><span class="comment">                return null;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;);*/</span></span><br><span class="line">        <span class="type">UserDaoImpl</span> <span class="variable">userDao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserDaoImpl</span>();</span><br><span class="line">        <span class="type">UserDao</span> <span class="variable">dao</span> <span class="operator">=</span>(UserDao) Proxy.newProxyInstance(JDKProxy.class.getClassLoader(), interfaces, <span class="keyword">new</span> <span class="title class_">UserDaoProxy</span>(userDao));</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> dao.add(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;result：&quot;</span>+result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建代理对象代码</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserDaoProxy</span> <span class="keyword">implements</span> <span class="title class_">InvocationHandler</span> &#123;</span><br><span class="line">    <span class="comment">//1、把创建的是谁的对象，把谁的对象传进来</span></span><br><span class="line">    <span class="comment">//有参构造传递</span></span><br><span class="line">    <span class="keyword">private</span> Object obj;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserDaoProxy</span><span class="params">(Object obj)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.obj = obj;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//增强的逻辑</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        <span class="comment">//方法之前</span></span><br><span class="line">        System.out.println(<span class="string">&quot;方法之前执行...&quot;</span>+method.getName()+<span class="string">&quot;:传递的参数...&quot;</span>+ Arrays.toString(args));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//被增强方法执行</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">res</span> <span class="operator">=</span> method.invoke(obj, args);</span><br><span class="line">        <span class="comment">//方法之后</span></span><br><span class="line">        System.out.println(<span class="string">&quot;方法之后执行...&quot;</span>+obj);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-3、AOP（术语）"><a href="#2-3、AOP（术语）" class="headerlink" title="2.3、AOP（术语）"></a>2.3、AOP（术语）</h3><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">1、连接点</span><br><span class="line">类里面哪些方法可以被增强，这些方法就称为连接点</span><br><span class="line">2、切入点</span><br><span class="line">实际被真正增强的方法，称为切入点</span><br><span class="line">3、通知（增强）</span><br><span class="line">（1）实际增强的逻辑部分称为通知（增强）</span><br><span class="line">（2）通知有多种类型</span><br><span class="line"><span class="comment">	*前置通知</span></span><br><span class="line"><span class="comment">	*后置通知</span></span><br><span class="line"><span class="comment">	*环绕通知</span></span><br><span class="line"><span class="comment">	*异常通知</span></span><br><span class="line"><span class="comment">	*最终通知</span></span><br><span class="line">4、切面</span><br><span class="line">是动作</span><br><span class="line">（1）把通知应用到切入点的过程</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221702374.png" alt="image-20220523091721660"></p>
<h3 id="2-4、AOP操作（准备）"><a href="#2-4、AOP操作（准备）" class="headerlink" title="2.4、AOP操作（准备）"></a>2.4、AOP操作（准备）</h3><figure class="highlight lasso"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Spring框架一般都是基于AspectJ实现AOP</span><br><span class="line">（<span class="number">1</span>）什么是AspectJ？</span><br><span class="line">	*AspectJ不是Spring组成部分，一般把AspectJ和Spring框架一起使用，进行AOP操作。</span><br><span class="line"><span class="number">2</span>、基于AspectJ实现AOP操作</span><br><span class="line">（<span class="number">1</span>）基于<span class="built_in">xml</span>文件方式实现</span><br><span class="line">（<span class="number">2</span>）基于注解方式实现（使用）</span><br><span class="line"><span class="number">3</span>、在项目工程里面引入AOP相关依赖</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221702375.png" alt="image-20220523092846909"></p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span>、切入点表达式</span><br><span class="line">（<span class="number">1</span>）切入点表达式的作用：知道对哪个类里面的哪个方法进行增强。</span><br><span class="line">（<span class="number">2</span>）语法结构：</span><br><span class="line"><span class="function"><span class="title">execution</span><span class="params">([权限修饰符][返回值类型][类的全路径][方法名]([参数列表])</span></span>)</span><br><span class="line">权限修饰符可以省略</span><br><span class="line">举例<span class="number">1</span>：对com<span class="selector-class">.lxg</span><span class="selector-class">.dao</span>.BookDao类里面的add进行增强</span><br><span class="line"><span class="function"><span class="title">execution</span><span class="params">(* com.lxg.BookDao.add(..)</span></span>)</span><br><span class="line">举例<span class="number">2</span>：对com<span class="selector-class">.lxg</span><span class="selector-class">.dao</span>.BookDao类里面的所有方法进行增强</span><br><span class="line"><span class="function"><span class="title">execution</span><span class="params">(* com.lxg.BookDao.*(..)</span></span>)</span><br><span class="line">举例<span class="number">3</span>：对com<span class="selector-class">.lxg</span>.dao包里面的所有类所有方法进行增强</span><br><span class="line"><span class="function"><span class="title">execution</span><span class="params">(* com.lxg.*.*(..)</span></span>)</span><br><span class="line">第一个*表示返回值可以是任意类型，第二个*表示任意类，第三个*表示任意方法，括号里的..表示参数任意。</span><br><span class="line"></span><br><span class="line">execution：用于匹配方法执行的连接点；</span><br><span class="line"><span class="function"><span class="title">execution</span><span class="params">(* com.test.method.des..*.*(..)</span></span>)</span><br><span class="line"><span class="number">1</span>, <span class="built_in">execution</span>()  表达式的主体</span><br><span class="line"><span class="number">2</span>, 第一个“*”符号    表示返回值的类型任意</span><br><span class="line"><span class="number">3</span>, com<span class="selector-class">.test</span><span class="selector-class">.method</span><span class="selector-class">.des</span>   AOP所切的服务的包名，即，需要进行横切的业务类</span><br><span class="line"><span class="number">4</span>, 包名后面的“..”表示当前包及子包</span><br><span class="line"><span class="number">5</span>, 第二个“*”    表示类名，*即所有类</span><br><span class="line"><span class="number">6</span>, .*(..)      表示任何方法名，括号表示参数，两个点表示任何参数类型</span><br></pre></td></tr></table></figure>
<h3 id="2-5、AOP操作（AspectJ注解）"><a href="#2-5、AOP操作（AspectJ注解）" class="headerlink" title="2.5、AOP操作（AspectJ注解）"></a>2.5、AOP操作（AspectJ注解）</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、创建类，在类里面定义方法</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;add...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">2</span>、创建增强类（编写增强逻辑）</span><br><span class="line">（<span class="number">1</span>）在增强类里面，创建方法，让不同方法代表不同通知类型</span><br><span class="line">    <span class="comment">//增强的类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserProxy</span> &#123;</span><br><span class="line">    <span class="comment">//前置通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;before...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">3、进行通知的配置</span><br><span class="line">（1）在spring配置文件中，开启注解扫描</span><br><span class="line">引入aop名称</span><br><span class="line">    <span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">                            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">                            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--开启注解扫描--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.lxg.spring5.aopanno&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line">（2）使用注解创建User和UserProxy对象</span><br><span class="line">（3）在增强类上面添加注解@Aspect</span><br><span class="line"></span><br><span class="line">（4）在spring配置文件中开启生成代理对象</span><br><span class="line"><span class="comment">&lt;!--开启Aspect生成代理对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:aspectj-autoproxy</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span>、配置不同类型的通知</span><br><span class="line">（<span class="number">1</span>）在增强类的里面，在作为通知方法上面添加通知类型注解，使用切入点表达式配置。</span><br><span class="line"><span class="comment">//增强的类</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserProxy</span> &#123;</span><br><span class="line">    <span class="comment">//前置通知</span></span><br><span class="line">    <span class="comment">//@Before注解表示该方法是一个前置通知</span></span><br><span class="line">    <span class="meta">@Before(&quot;execution(* com.lxg.spring5.aopanno.User.add(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;before...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//后置通知</span></span><br><span class="line">    <span class="comment">//最终通知</span></span><br><span class="line">    <span class="comment">//@After注解表示该方法是一个后置通知</span></span><br><span class="line">    <span class="meta">@After(&quot;execution(* com.lxg.spring5.aopanno.User.add(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">after</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;after...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回通知</span></span><br><span class="line">    <span class="comment">//@AfterReturning注解表示该方法是一个返回通知</span></span><br><span class="line">    <span class="meta">@AfterReturning(&quot;execution(* com.lxg.spring5.aopanno.User.add(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterReturning</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;afterReturning...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//异常通知</span></span><br><span class="line">    <span class="comment">//@AfterThrowing注解表示该方法是一个异常通知</span></span><br><span class="line">    <span class="meta">@AfterThrowing(&quot;execution(* com.lxg.spring5.aopanno.User.add(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterThrowing</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;afterThrowing...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//环绕通知</span></span><br><span class="line">    <span class="comment">//@Around注解表示该方法是一个环绕通知</span></span><br><span class="line">    <span class="meta">@Around(&quot;execution(* com.lxg.spring5.aopanno.User.add(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">around</span><span class="params">(ProceedingJoinPoint pjp)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;环绕之前...&quot;</span>);</span><br><span class="line">        <span class="comment">//被增强的方法执行</span></span><br><span class="line">        pjp.proceed();</span><br><span class="line">        System.out.println(<span class="string">&quot;环绕之后...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">5</span>、相同的切入点抽取</span><br><span class="line"><span class="comment">//相同切入点抽取</span></span><br><span class="line"><span class="comment">//定义切入点，通知增强目标类的哪些方法</span></span><br><span class="line"><span class="meta">@Pointcut(&quot;execution(*com.lxg.spring5.aopanno.User.add(..))&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pointDemo</span><span class="params">()</span>&#123;&#125;</span><br><span class="line"><span class="number">6</span>、有多个增强类对同一个方法进行增强，设置增强类优先级</span><br><span class="line">（<span class="number">1</span>）在增强类上面添加注解<span class="meta">@Order(数字类型值)</span>，值越小，优先级越高</span><br><span class="line"><span class="number">7</span>、完全使用注解开发</span><br><span class="line">（<span class="number">1</span>）创建配置类，不需要xml配置文件</span><br><span class="line"><span class="meta">@Configuration</span><span class="comment">//声明为配置类</span></span><br><span class="line"><span class="meta">@ComponentScan(&quot;com.lxg.spring5.aopanno&quot;)</span><span class="comment">//扫描注解</span></span><br><span class="line"><span class="meta">@EnableAspectJAutoProxy(proxyTargetClass = true)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConfigAop</span> &#123;</span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">@EnableAspectJAutoProxy</span>注解等同于在xml中配置aspectj-autoproxy，表示开启spring对注解AOP的支持，proxyTargClass=<span class="literal">true</span>表示强制使用cglib代理方式。</span><br></pre></td></tr></table></figure>
<h3 id="2-6、AOP操作（Aspect配置文件）"><a href="#2-6、AOP操作（Aspect配置文件）" class="headerlink" title="2.6、AOP操作（Aspect配置文件）"></a>2.6、AOP操作（Aspect配置文件）</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">1、创建两个类，增强类和被增强类，创建方法</span><br><span class="line">2、在Spring配置文件中创建两个类对象</span><br><span class="line"><span class="comment">&lt;!--创建对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;book&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lxg.spring5.aopxml.Book&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;bookProxy&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lxg.spring5.aopxml.BookProxy&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">3、在Spring配置文件中配置切入点</span><br><span class="line"><span class="comment">&lt;!--配置aop增强--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置切入点--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;p&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.lxg.spring5.aopxml.Book.buy(..))&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置切面--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">&quot;bookProxy&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--增强作用在具体的方法上--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--把before方法配置到切入点p上--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">&quot;before&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;p&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="五、jdbcTemplate（概念和准备）"><a href="#五、jdbcTemplate（概念和准备）" class="headerlink" title="五、jdbcTemplate（概念和准备）"></a>五、jdbcTemplate（概念和准备）</h2><h2 id="1、什么是JdbcTemplate"><a href="#1、什么是JdbcTemplate" class="headerlink" title="1、什么是JdbcTemplate"></a>1、什么是JdbcTemplate</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">1、Spring框架对JDBC进行封装，使用JdbcTemplate方便实现对数据库的操作</span><br></pre></td></tr></table></figure>
<h2 id="2、准备工作"><a href="#2、准备工作" class="headerlink" title="2、准备工作"></a>2、准备工作</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">1、引入相关依赖</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221702376.png" alt="image-20220523114457976"></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">2、在spring配置文件中配置数据库连接池</span><br><span class="line"><span class="comment">&lt;!-- 数据库连接池 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">destroy-method</span>=<span class="string">&quot;close&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://192.168.31.1:3306/bjpowernode&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;623718&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">3、配置JdbcTemplate对象，注入DataSource</span><br><span class="line"> <span class="comment">&lt;!--创建JdbcTemplate对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;jdbcTemplate&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.core.JdbcTemplate&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span>、创建service类，创建dao类，在dao注入jdbcTemplate对象</span><br><span class="line">配置文件：</span><br><span class="line">&lt;!--开始组件扫描--&gt;</span><br><span class="line">    &lt;context:component-scan base-<span class="keyword">package</span>=<span class="string">&quot;com.lxg.spring5&quot;</span>&gt;&lt;/context:component-scan&gt;</span><br><span class="line">    </span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line">    <span class="comment">//注入dao</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BookDao bookDao;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">BookDao</span> &#123;</span><br><span class="line">    <span class="comment">//注入JdbcTemplate</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="3、jdbcTemplate-操作数据库（添加）"><a href="#3、jdbcTemplate-操作数据库（添加）" class="headerlink" title="3、jdbcTemplate 操作数据库（添加）"></a>3、jdbcTemplate 操作数据库（添加）</h2><h3 id="3-1、对应数据库创建出实体类"><a href="#3-1、对应数据库创建出实体类" class="headerlink" title="3.1、对应数据库创建出实体类"></a>3.1、对应数据库创建出实体类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String useId;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="keyword">private</span> String ustatus;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUseId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> useId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUseId</span><span class="params">(String useId)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.useId = useId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUserName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserName</span><span class="params">(String userName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userName = userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUstatus</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ustatus;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUstatus</span><span class="params">(String ustatus)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.ustatus = ustatus;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-2、编写service和dao"><a href="#3-2、编写service和dao" class="headerlink" title="3.2、编写service和dao"></a>3.2、编写service和dao</h3><p>1、在dao进行数据库添加操作</p>
<p>2、调用JdbcTemplate对象里面的update方法实现添加操作</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221702377.png" alt="image-20220523144352838"></p>
<ul>
<li>有两个参数</li>
<li>第一个参数：sql语句</li>
<li>第二个参数：可变参数，设置sql语句值</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">BookDao</span> &#123;</span><br><span class="line">    <span class="comment">//注入JdbcTemplate</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(Book book)</span> &#123;</span><br><span class="line">        <span class="comment">//1、创建sql语句</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into t_book values(?,?,?)&quot;</span>;</span><br><span class="line">        <span class="comment">//2、调用方法实现</span></span><br><span class="line">        Object[] args = &#123;book.getBookId(), book.getBookName(),book.getBookAuthor()&#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">update</span> <span class="operator">=</span> jdbcTemplate.update(sql, args);</span><br><span class="line">        System.out.println(<span class="string">&quot;添加了&quot;</span>+update+<span class="string">&quot;条数据&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>3、测试类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testJdbcTemplate</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;bean1.xml&quot;</span>);</span><br><span class="line">    <span class="type">BookService</span> <span class="variable">bookService</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;bookService&quot;</span>, BookService.class);</span><br><span class="line">    <span class="type">Book</span> <span class="variable">book</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Book</span>();</span><br><span class="line">    book.setBookId(<span class="string">&quot;6&quot;</span>);</span><br><span class="line">    book.setBookName(<span class="string">&quot;Spring5&quot;</span>);</span><br><span class="line">    book.setBookAuthor(<span class="string">&quot;lxg&quot;</span>);</span><br><span class="line">    bookService.addBook(book);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221702378.png" alt="image-20220523145827583"></p>
<h2 id="4、jdbcTemplate操作数据库（修改和删除）"><a href="#4、jdbcTemplate操作数据库（修改和删除）" class="headerlink" title="4、jdbcTemplate操作数据库（修改和删除）"></a>4、jdbcTemplate操作数据库（修改和删除）</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">bookupdate</span><span class="params">(Book book)</span> &#123;</span><br><span class="line">    String sql= <span class="string">&quot;update t_book set bookName=?,bookAuthor=? where bookId=?&quot;</span>;</span><br><span class="line">    Object[] args = &#123;book.getBookName(),book.getBookAuthor(),book.getBookId()&#125;;</span><br><span class="line">    <span class="type">int</span> <span class="variable">update</span> <span class="operator">=</span> jdbcTemplate.update(sql, args);</span><br><span class="line">    System.out.println(<span class="string">&quot;更新了&quot;</span>+update+<span class="string">&quot;条数据&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">bookdelete</span><span class="params">(String id)</span> &#123;</span><br><span class="line">    String sql= <span class="string">&quot;delete from t_book where bookId=?&quot;</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">update</span> <span class="operator">=</span> jdbcTemplate.update(sql, id);</span><br><span class="line">    System.out.println(<span class="string">&quot;删除了&quot;</span>+update+<span class="string">&quot;条数据&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>测试：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">  <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testJdbcTemplate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;bean1.xml&quot;</span>);</span><br><span class="line">        <span class="type">BookService</span> <span class="variable">bookService</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;bookService&quot;</span>, BookService.class);</span><br><span class="line">        <span class="comment">//添加</span></span><br><span class="line"><span class="comment">//        Book book = new Book();</span></span><br><span class="line"><span class="comment">//        book.setBookId(&quot;6&quot;);</span></span><br><span class="line"><span class="comment">//        book.setBookName(&quot;Spring5&quot;);</span></span><br><span class="line"><span class="comment">//        book.setBookAuthor(&quot;lxg&quot;);</span></span><br><span class="line"><span class="comment">//        bookService.addBook(book);</span></span><br><span class="line">        <span class="comment">//修改</span></span><br><span class="line"><span class="comment">//        Book book1 = new Book();</span></span><br><span class="line"><span class="comment">//        book1.setBookId(&quot;5&quot;);</span></span><br><span class="line"><span class="comment">//        book1.setBookName(&quot;web&quot;);</span></span><br><span class="line"><span class="comment">//        book1.setBookAuthor(&quot;lxg&quot;);</span></span><br><span class="line"><span class="comment">//        bookService.updateBook(book1);</span></span><br><span class="line">        <span class="comment">//删除</span></span><br><span class="line">       bookService.deleteBook(<span class="string">&quot;5&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h2 id="5、jdbcTemplate操作数据库（查询）"><a href="#5、jdbcTemplate操作数据库（查询）" class="headerlink" title="5、jdbcTemplate操作数据库（查询）"></a>5、jdbcTemplate操作数据库（查询）</h2><h3 id="5-1、查询返回某个值"><a href="#5-1、查询返回某个值" class="headerlink" title="5.1、查询返回某个值"></a>5.1、查询返回某个值</h3><p>1、查询表里面有多少条记录，返回是某个值</p>
<p>2、使用JdbcTemplate实现查询返回某个值</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221702379.png" alt="image-20220523151501597"></p>
<ul>
<li>两个参数</li>
<li>第一个参数，sql语句</li>
<li>第二个参数，返回类型Class</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//查询表记录数</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">findCount</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select count(*) from t_book&quot;</span>;</span><br><span class="line">    Integer count= jdbcTemplate.queryForObject(sql, Integer.class);</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>3、测试</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//查询表中记录数</span></span><br><span class="line"><span class="type">int</span> count= bookService.getCount();</span><br><span class="line">System.out.println(count);</span><br></pre></td></tr></table></figure>
<h3 id="5-2、查询返回对象"><a href="#5-2、查询返回对象" class="headerlink" title="5.2、查询返回对象"></a>5.2、查询返回对象</h3><p>1、场景：查询图书详情</p>
<p>2、JdbcTemplate实现查询返回对象</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221702380.png" alt="image-20220523182713260"></p>
<ul>
<li>有三个参数</li>
<li>第一个参数，sql语句</li>
<li>第二个参数：RowMapper，是接口，针对返回不同类型数据，使用这个接口里面的实现类完成数据封装</li>
<li>第三个参数：sql语句值</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//查询返回对象</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Book <span class="title function_">findBook</span><span class="params">(String id)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from t_book where bookId=?&quot;</span>;</span><br><span class="line">    <span class="type">Book</span> <span class="variable">book</span> <span class="operator">=</span> jdbcTemplate.queryForObject(sql,<span class="keyword">new</span> <span class="title class_">BeanPropertyRowMapper</span>&lt;Book&gt;(Book.class),id);</span><br><span class="line">    <span class="keyword">return</span> book;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="5-3、查询返回集合"><a href="#5-3、查询返回集合" class="headerlink" title="5.3、查询返回集合"></a>5.3、查询返回集合</h3><p>1、场景：查询图书列表分页…</p>
<p>2、调用jdbcTemplate方法实现查询返回集合</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221702381.png" alt="image-20220523185417412"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;Book&gt; <span class="title function_">findBooks</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from t_book&quot;</span>;</span><br><span class="line">    List&lt;Book&gt; list = jdbcTemplate.query(sql,<span class="keyword">new</span> <span class="title class_">BeanPropertyRowMapper</span>&lt;Book&gt;(Book.class));</span><br><span class="line">    <span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="6、jdbcTemplate操作数据库（批量操作）"><a href="#6、jdbcTemplate操作数据库（批量操作）" class="headerlink" title="6、jdbcTemplate操作数据库（批量操作）"></a>6、jdbcTemplate操作数据库（批量操作）</h2><p>1、批量操作：操作表里面多条记录</p>
<h3 id="6-1、实现批量添加操作"><a href="#6-1、实现批量添加操作" class="headerlink" title="6.1、实现批量添加操作"></a>6.1、实现批量添加操作</h3><p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221702382.png" alt="image-20220523190028816"></p>
<ul>
<li>有两个参数</li>
<li>第一个参数：sql语句</li>
<li>第二个参数：List集合，添加多条记录数据</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//批量添加</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addBatch</span><span class="params">(List&lt;Object[]&gt; batchArgs)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into t_book values(?,?,?)&quot;</span>;</span><br><span class="line">    <span class="type">int</span>[] ints =  jdbcTemplate.batchUpdate(sql,batchArgs);</span><br><span class="line">    System.out.println(<span class="string">&quot;添加了&quot;</span>+ints.length+<span class="string">&quot;条数据&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//批量添加</span></span><br><span class="line">List&lt;Object[]&gt; batchArgs = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">Object[] args1 = &#123;<span class="string">&quot;7&quot;</span>,<span class="string">&quot;Spring5&quot;</span>,<span class="string">&quot;lxg&quot;</span>&#125;;</span><br><span class="line">Object[] args2 = &#123;<span class="string">&quot;8&quot;</span>,<span class="string">&quot;Spring5&quot;</span>,<span class="string">&quot;lxg&quot;</span>&#125;;</span><br><span class="line">Object[] args3 = &#123;<span class="string">&quot;9&quot;</span>,<span class="string">&quot;Spring5&quot;</span>,<span class="string">&quot;lxg&quot;</span>&#125;;</span><br><span class="line">batchArgs.add(args1);</span><br><span class="line">batchArgs.add(args2);</span><br><span class="line">batchArgs.add(args3);</span><br><span class="line">bookService.addBooks(batchArgs);</span><br></pre></td></tr></table></figure>
<h3 id="6-2、实现批量修改操作"><a href="#6-2、实现批量修改操作" class="headerlink" title="6.2、实现批量修改操作"></a>6.2、实现批量修改操作</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//批量更新</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateBatch</span><span class="params">(List&lt;Object[]&gt; batchArgs)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update t_book set bookName=?,bookAuthor=? where bookId=?&quot;</span>;</span><br><span class="line">    <span class="type">int</span>[] ints =  jdbcTemplate.batchUpdate(sql,batchArgs);</span><br><span class="line">    System.out.println(<span class="string">&quot;更新了&quot;</span>+ints.length+<span class="string">&quot;条数据&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//批量更新</span></span><br><span class="line">List&lt;Object[]&gt; batchArgs1= <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">Object[] args1 = &#123;<span class="string">&quot;java&quot;</span>,<span class="string">&quot;lxg&quot;</span>,<span class="string">&quot;7&quot;</span>&#125;;</span><br><span class="line">Object[] args2 = &#123;<span class="string">&quot;java&quot;</span>,<span class="string">&quot;lxg&quot;</span>,<span class="string">&quot;8&quot;</span>&#125;;</span><br><span class="line">Object[] args3 = &#123;<span class="string">&quot;java&quot;</span>,<span class="string">&quot;lxg&quot;</span>,<span class="string">&quot;9&quot;</span>&#125;;</span><br><span class="line">batchArgs1.add(args1);</span><br><span class="line">batchArgs1.add(args2);</span><br><span class="line">batchArgs1.add(args3);</span><br><span class="line">bookService.updateBooks(batchArgs1);</span><br></pre></td></tr></table></figure>
<h3 id="6-3、实现批量删除操作"><a href="#6-3、实现批量删除操作" class="headerlink" title="6.3、实现批量删除操作"></a>6.3、实现批量删除操作</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//批量删除</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteBatch</span><span class="params">(List&lt;Object[]&gt; batchArgs)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;delete from t_book where bookId=?&quot;</span>;</span><br><span class="line">    <span class="type">int</span>[] ints =  jdbcTemplate.batchUpdate(sql,batchArgs);</span><br><span class="line">    System.out.println(<span class="string">&quot;删除了&quot;</span>+ints.length+<span class="string">&quot;条数据&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//批量删除</span></span><br><span class="line">List&lt;Object[]&gt; ids = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">Object[] id1 = &#123;<span class="string">&quot;7&quot;</span>&#125;;</span><br><span class="line">Object[] id2 = &#123;<span class="string">&quot;8&quot;</span>&#125;;</span><br><span class="line">Object[] id3 = &#123;<span class="string">&quot;9&quot;</span>&#125;;</span><br><span class="line">ids.add(id1);</span><br><span class="line">ids.add(id2);</span><br><span class="line">ids.add(id3);</span><br><span class="line">bookService.deleteBooks(ids);</span><br></pre></td></tr></table></figure>
<h2 id="六、Spring5框架的新功能"><a href="#六、Spring5框架的新功能" class="headerlink" title="六、Spring5框架的新功能"></a>六、Spring5框架的新功能</h2><p>1、整个Spring框架的代码基于Java8，运行时兼容jdk9，许多不建议的类和方法在代码库中删除。</p>
<p>2、Spring5.0框架自带了通用的日志封装</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Spring5已经移除了log4jConfigListener，官方建议使用Log4j2</span><br><span class="line"><span class="number">2</span>、Spring框架中整合Log4j2</span><br><span class="line"><span class="comment">*第一步：引入jar包</span></span><br><span class="line"><span class="comment">*第二步：创建log4j2配置文件</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>3、Spring框架核心容器支持@Nullable注解</p>
<figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、<span class="meta">@Nullable</span>注解可以使用在方法上面，属性上面，参数上面，表示方法可以方法返回值可以为空，属性值可以为空，参数值可以为空。</span><br></pre></td></tr></table></figure>
<p>4、Spring5核心容器支持函数式风格</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//函数式风格创建对象，交给Spring管理</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAccount4</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//创建GenericApplicationContext对象</span></span><br><span class="line">    <span class="type">GenericApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">GenericApplicationContext</span>();</span><br><span class="line">    <span class="comment">//调用context的方法对象注册</span></span><br><span class="line">    context.refresh();<span class="comment">//把内容清空进行注册</span></span><br><span class="line">    context.registerBean(<span class="string">&quot;user1&quot;</span>,User.class, () -&gt; <span class="keyword">new</span> <span class="title class_">User</span>());</span><br><span class="line">    <span class="comment">//获取在Spring注册的对象</span></span><br><span class="line">    <span class="comment">//User user =(User)context.getBean(&quot;com.lxg.spring5.test.User&quot;);</span></span><br><span class="line">    <span class="type">User</span> <span class="variable">user1</span> <span class="operator">=</span> (User)context.getBean(<span class="string">&quot;user1&quot;</span>);</span><br><span class="line">    <span class="comment">//System.out.println(user);</span></span><br><span class="line">    System.out.println(user1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>5、Spring5支持整合JUnit5</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">1、整合Junit4</span><br><span class="line"><span class="comment">*第一步：引入Spring相关针对的依赖</span></span><br><span class="line">spring-<span class="keyword">test</span>依赖</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221702383.png" alt="image-20220524094427067"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringJUnit4ClassRunner.class)</span><span class="comment">//单元测试框架</span></span><br><span class="line"><span class="meta">@ContextConfiguration(&quot;classpath:bean1.xml&quot;)</span><span class="comment">//加载配置文件</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JTest4</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span>&#123;</span><br><span class="line">        userService.transfer();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span>、Spri<span class="symbol">ng5</span>整合Ju<span class="symbol">nit5</span></span><br><span class="line">*第一步：引入JU<span class="symbol">nit5</span>jar包</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221702384.png" alt="image-20220524094826049"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ExtendWith(SpringExtension.class)</span></span><br><span class="line"><span class="meta">@ContextConfiguration(&quot;classpath:bean1.xml&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JTest5</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        userService.transfer();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用复合注解替代上面两个注解</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringJUnitConfig(locations = &quot;classpath:bean1.xml&quot;)</span></span><br></pre></td></tr></table></figure>
<p>6、WebFulx介绍</p>
<p>7、响应式编程</p>
<p>8、WebFlux执行流程和核心API</p>
<p>9、SpringWebFlux（基于注解编程模型）</p>
<p>10、SpringWebFlux（基于函数式编程模型）</p>
<h2 id="七、事务"><a href="#七、事务" class="headerlink" title="七、事务"></a>七、事务</h2><h2 id="1、事物概念"><a href="#1、事物概念" class="headerlink" title="1、事物概念"></a>1、事物概念</h2><h3 id="1-1、什么是事务？"><a href="#1-1、什么是事务？" class="headerlink" title="1.1、什么是事务？"></a>1.1、什么是事务？</h3><figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、事务是数据库操作最基本的单元，逻辑上一组操作，要么都成功，如果有一个失败所有操作就都失败。</span><br><span class="line"><span class="number">2</span>、典型场景：银行转账</span><br><span class="line"><span class="comment">*lucy转账100元要给mary</span></span><br><span class="line"><span class="comment">*lucy少100元，mary多100元</span></span><br></pre></td></tr></table></figure>
<h3 id="1-2、事物的四个特性（ACID）"><a href="#1-2、事物的四个特性（ACID）" class="headerlink" title="1.2、事物的四个特性（ACID）"></a>1.2、事物的四个特性（ACID）</h3><ol>
<li>原子性：不可分割</li>
<li>一致性：操作前后总量不变，守恒</li>
<li>隔离性：多事务之间互不干扰</li>
<li>持久性：表中数据发生变化是永久的</li>
</ol>
<h2 id="2、事务操作（搭建事务操作环境）"><a href="#2、事务操作（搭建事务操作环境）" class="headerlink" title="2、事务操作（搭建事务操作环境）"></a>2、事务操作（搭建事务操作环境）</h2><p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221702385.png" alt="image-20220523201516430"></p>
<p>1、创建数据库表，添加记录</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221702386.png" alt="image-20220523202047458"></p>
<p>2、创建service，搭建dao，完成对象创建和注入关系</p>
<p>（1）service注入dao，在dao注入JdbcTemplate，在JdbcTemplate注入DataSource</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="comment">//注入dao</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>3、在dao创建两个方法：多钱和少钱，在service创建转账的方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//多钱</span></span><br><span class="line"><span class="comment">//lucy转账100给marry</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addMoney</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update t_account set money = money + ? where username = ?&quot;</span>;</span><br><span class="line">    jdbcTemplate.update(sql, <span class="string">&quot;marry&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//少钱</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">reduceMoney</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update t_account set money = money -? where username = ?&quot;</span>;</span><br><span class="line">    jdbcTemplate.update(sql, <span class="string">&quot;lucy&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="comment">//注入dao</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line">    <span class="comment">//转账</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transfer</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//转出</span></span><br><span class="line">       userDao.reduceMoney();</span><br><span class="line">        <span class="comment">//转入</span></span><br><span class="line">        userDao.addMoney();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>4、上面代码正常执行没有问题，但是如果在执行过程中有异常就会有问题</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//转账</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transfer</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//转出</span></span><br><span class="line">   userDao.reduceMoney();</span><br><span class="line">   <span class="comment">//模拟异常</span></span><br><span class="line">   <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>/<span class="number">0</span>;</span><br><span class="line">    <span class="comment">//转入</span></span><br><span class="line">    userDao.addMoney();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>lucy少了钱但是marry钱没增加</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、怎么解决这个问题？</span><br><span class="line"><span class="comment">*使用事务进行解决</span></span><br><span class="line"><span class="number">2</span>、事务操作过程</span><br><span class="line"><span class="number">1</span>、开启事务</span><br><span class="line"><span class="number">2</span>、执行业务操作</span><br><span class="line"><span class="number">3</span>、没有异常，提交事务</span><br><span class="line"><span class="number">4</span>、出现异常，回滚事务</span><br></pre></td></tr></table></figure>
<h2 id="3、事务操作（Spring事务管理介绍）"><a href="#3、事务操作（Spring事务管理介绍）" class="headerlink" title="3、事务操作（Spring事务管理介绍）"></a>3、事务操作（Spring事务管理介绍）</h2><p>1、事务添加到JavaEE三层结构里面Service层（业务逻辑层）</p>
<p>2、在Spring进行事务管理操作</p>
<ul>
<li>有两种方式：编程式事务管理和声明式事务管理（常用）</li>
</ul>
<p>3、声明式事务管理</p>
<ul>
<li>基于注解方式（多用）</li>
<li>基于xml配置文件方式</li>
</ul>
<p>4、在Spring进行声明式事务管理，底层使用AOP</p>
<p>5、Spring事务管理的API</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">1、提供一个接口，代表事务管理器，这个接口针对不同的框架提供不同的实现类</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221702387.png" alt="image-20220523212606806"></p>
<h3 id="3-1、事务操作（注解声明式事务管理）"><a href="#3-1、事务操作（注解声明式事务管理）" class="headerlink" title="3.1、事务操作（注解声明式事务管理）"></a>3.1、事务操作（注解声明式事务管理）</h3><p>1、在Spring配置文件中配置事务管理器</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--创建事务管理器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--注入数据源--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>2、在Spring配置文件中开启事务注解</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">1、在spring配置文件中引入名称空间tx</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">                            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">                            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">                            http://www.springframework.org/schema/tx http://www.springframework.org/schem/tx/spring-tx.xsd&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">2、开启事务注解</span><br><span class="line"><span class="comment">&lt;!--开启事务注解--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">tx:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span>、在service类上面（获取service类里面方法上面）添加事务注解</span><br><span class="line"><span class="meta">@Transactional</span>，这个注解可以添加在类上面，也可以添加到方法上面</span><br><span class="line">如果把这个注解添加到类上面，这个类中的所有方法都添加事务</span><br><span class="line">如果把这个注解添加到方法上面，为这个方法添加事务</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="3-2、事务操作（声明式事务管理参数配置）"><a href="#3-2、事务操作（声明式事务管理参数配置）" class="headerlink" title="3.2、事务操作（声明式事务管理参数配置）"></a>3.2、事务操作（声明式事务管理参数配置）</h3><p>1、在service类上面添加注解@Transactional，在这个注解里面可以配置事务相关参数</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221702388.png" alt="image-20220523214943353"></p>
<p>2、proagation：事务传播行为</p>
<p>（1）多事务方法之间进行调用，这个过程中事务是如何管理的。</p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221702389.png" alt="image-20220523215526890"></p>
<p>掌握前两种即可</p>
<p>3、ioslation：事务隔离级别</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">1、事务里有个特性为隔离性，多事务操作之间不会产生影响，不考虑隔离线产生很多问题</span><br><span class="line">2、有三个读的问题：脏读、不可重复读、虚（幻）读</span><br><span class="line">3、脏读：一个未提交的事务读取到另一个未提交事务的数据</span><br><span class="line">4、不可重复读：一个未提交事务读取到另一个已提交的事务的数据</span><br><span class="line">5、一个未提交事务读取到另一个提交事务添加的数据</span><br><span class="line">6、解决：通过设置隔离级别，解决读的问题</span><br><span class="line">默认可重复读</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221702390.png" alt="image-20220523225307432"></p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221702391.png" alt="image-20220523225959377"></p>
<p><img src="https://gitee.com/lin-xugeng/image/raw/master/img/202210221702392.png" alt="image-20220523231036633"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Transactional(propagation = Propagation.REQUIRED,isolation = Isolation.REPEATABLE_READ)</span></span><br></pre></td></tr></table></figure>
<p>4、timeout：超时时间</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">1</span>、事务需要在一定的事间内进行提交，如果不提交进行回滚</span><br><span class="line"><span class="attribute">2</span>、默认值是-<span class="number">1</span>，不回滚，设置时间以秒单位进行计算</span><br></pre></td></tr></table></figure>
<p>5、reafOnly：是否只读</p>
<figure class="highlight nsis"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、读：查询操作，写：添加修改删除操作</span><br><span class="line"><span class="number">2</span>、<span class="params">readOnly</span>默认值<span class="literal">false</span>，表示可以查询，也可以增删改</span><br><span class="line"><span class="number">3</span>、设置为<span class="literal">true</span>，则只能查询</span><br></pre></td></tr></table></figure>
<p>6、rollbackFor：回滚</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">1、设置出现哪些异常进行事务回滚</span><br></pre></td></tr></table></figure>
<p>7、noRollbackFor：不回滚</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">设置出现哪些异常不进行事务回滚</span><br></pre></td></tr></table></figure>
<h3 id="3-3、事务操作（XML声明式事务管理）"><a href="#3-3、事务操作（XML声明式事务管理）" class="headerlink" title="3.3、事务操作（XML声明式事务管理）"></a>3.3、事务操作（XML声明式事务管理）</h3><p>1、在Spring配置文件中进行配置</p>
<ul>
<li>第一步配置事务管理器</li>
<li>第二步配置通知</li>
<li>第三步配置切入点和切面</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置通知--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">&quot;txAdvice&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置事务参数--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;tansfer&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;tx:method name=&quot;account*&quot;/&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置切入点和切面--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置切入点--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;txPointcut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.lxg.spring5.service.UserService.*(..))&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:pointcut</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置切面--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;txPointcut&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:advisor</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="3-4、事务操作（完全注解声明式事务管理）"><a href="#3-4、事务操作（完全注解声明式事务管理）" class="headerlink" title="3.4、事务操作（完全注解声明式事务管理）"></a>3.4、事务操作（完全注解声明式事务管理）</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span><span class="comment">//配置类</span></span><br><span class="line"><span class="meta">@ComponentScan(basePackages = &quot;com.lxg&quot;)</span><span class="comment">//组件扫描</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span><span class="comment">//开启事务管理</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TxConfig</span> &#123;</span><br><span class="line">    <span class="comment">//创建数据库连接池</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> DruidDataSource <span class="title function_">getDuridDataSource</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">DruidDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DruidDataSource</span>();</span><br><span class="line">        dataSource.setDriverClassName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        dataSource.setUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/bjpowernode&quot;</span>);</span><br><span class="line">        dataSource.setUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dataSource.setPassword(<span class="string">&quot;623718&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//创建jdbcTemplate对象</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> JdbcTemplate <span class="title function_">getJdbcTemplate</span><span class="params">(DataSource dataSource)</span>&#123;</span><br><span class="line">        <span class="comment">//到IOC容器中根据类型找到dataSource对象</span></span><br><span class="line">        <span class="type">JdbcTemplate</span> <span class="variable">jdbcTemplate</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JdbcTemplate</span>();</span><br><span class="line">        <span class="comment">//注入dataSource</span></span><br><span class="line">        jdbcTemplate.setDataSource(dataSource);</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//创建事务管理器</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> DataSourceTransactionManager <span class="title function_">getDataSourceTransactionManager</span><span class="params">(DataSource dataSource)</span>&#123;</span><br><span class="line">        <span class="type">DataSourceTransactionManager</span> <span class="variable">dataSourceTransactionManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataSourceTransactionManager</span>();</span><br><span class="line">        dataSourceTransactionManager.setDataSource(dataSource);</span><br><span class="line">        <span class="keyword">return</span> dataSourceTransactionManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Spring全家桶</category>
      </categories>
  </entry>
  <entry>
    <title>书城项目</title>
    <url>/posts/85e8.html</url>
    <content><![CDATA[<p><meta name="referrer" content="no-referrer" /></p>
<h1 id="书城项目"><a href="#书城项目" class="headerlink" title="书城项目"></a>书城项目</h1><h2 id="第一阶段：表单验证"><a href="#第一阶段：表单验证" class="headerlink" title="第一阶段：表单验证"></a>第一阶段：表单验证</h2><p>验证用户名：必须由字母，数字下划线组成，并且长度在5-12位</p>
<p>验证密码：必须由字母，数字下划线组成，并且长度为5-12位</p>
<p>验证确认密码：和密码相同</p>
<p>邮箱验证：xxxxx@xxx.com</p>
<p>验证码：现在只需要验证用户已输入，因为还没将到服务器，验证码生成。</p>
<p>1、新建一个模块</p>
<p>2、把书城的静态资源拷贝到模块工程下</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//页面加载完成之后</span></span></span><br><span class="line"><span class="language-javascript">   $(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//给注册绑定单击事件</span></span></span><br><span class="line"><span class="language-javascript">      $(<span class="string">&quot;#sub_btn&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">         <span class="comment">// 验证用户名：必须由字母，数字下划线组成，并且长度在5-12位</span></span></span><br><span class="line"><span class="language-javascript">         <span class="comment">//1、获取用户输入框里的内容</span></span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">var</span> usernameText = $(<span class="string">&quot;#username&quot;</span>).<span class="title function_">val</span>();</span></span><br><span class="line"><span class="language-javascript">         <span class="comment">//2、创建正则表达式对象</span></span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">var</span> usernamePatt =<span class="regexp">/^\w&#123;5,12&#125;$/</span>;</span></span><br><span class="line"><span class="language-javascript">         <span class="comment">//3、使用test方法验证</span></span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">if</span> (!usernamePatt.<span class="title function_">test</span>(usernameText)) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//4、提示用户结果</span></span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;span.errorMsg&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;用户名不合法！&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">         &#125;</span></span><br><span class="line"><span class="language-javascript">         <span class="comment">// 验证密码：必须由字母，数字下划线组成，并且长度为5-12位</span></span></span><br><span class="line"><span class="language-javascript">         <span class="comment">//1、获取密码输入框里的内容</span></span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">var</span> passwordText = $(<span class="string">&quot;#password&quot;</span>).<span class="title function_">val</span>();</span></span><br><span class="line"><span class="language-javascript">         <span class="comment">//2、创建正则表达式对象</span></span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">var</span> passwordPatt = <span class="regexp">/^\w&#123;5,12&#125;$/</span>;</span></span><br><span class="line"><span class="language-javascript">         <span class="comment">//3、使用test方法验证</span></span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">if</span> (!passwordPatt.<span class="title function_">test</span>(passwordText)) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//4、提示用户结果</span></span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;span.errorMsg&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;密码不合法！&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">         &#125;</span></span><br><span class="line"><span class="language-javascript">         <span class="comment">// 验证确认密码：和密码相同</span></span></span><br><span class="line"><span class="language-javascript">         <span class="comment">//1、获取确认密码的内容</span></span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">var</span> repwdText = $(<span class="string">&quot;#repwd&quot;</span>).<span class="title function_">val</span>();</span></span><br><span class="line"><span class="language-javascript">         <span class="comment">//2、和密码比较</span></span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">if</span>(repwdText!=passwordText)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//3、提示用户</span></span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;span.errorMsg&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;确认密码和密码不一致！&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">         &#125;</span></span><br><span class="line"><span class="language-javascript">         <span class="comment">// 邮箱验证：xxxxx@xxx.com</span></span></span><br><span class="line"><span class="language-javascript">         <span class="comment">//1、获取邮箱里的内容</span></span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">var</span> emailText = $(<span class="string">&quot;#email&quot;</span>).<span class="title function_">val</span>();</span></span><br><span class="line"><span class="language-javascript">         <span class="comment">//2、创建正则表达式对象</span></span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">var</span> emailPatt = <span class="regexp">/^[a-z\d]+(\.[a-z\d]+)*@([\da-z](-[\da-z])?)+(\.&#123;1,2&#125;[a-z]+)+$/</span>;</span></span><br><span class="line"><span class="language-javascript">         <span class="comment">//3、使用test方法验证</span></span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">if</span>(!emailPatt.<span class="title function_">test</span>(emailText))&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//4、提示用户</span></span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;span.errorMsg&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;邮箱格式不正确！&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">         &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">         <span class="comment">// 验证码：现在只需要验证用户已输入，因为还没将到服务器，验证码生成。</span></span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">var</span> codeText = $(<span class="string">&quot;#code&quot;</span>).<span class="title function_">val</span>();</span></span><br><span class="line"><span class="language-javascript">         <span class="comment">//去掉验证码前后空格</span></span></span><br><span class="line"><span class="language-javascript">         codeText = $.<span class="title function_">trim</span>(codeText);</span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">if</span>(codeText==<span class="literal">null</span> ||codeText==<span class="string">&quot;&quot;</span> )&#123;</span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;span.errorMsg&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;验证码不能为空！&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">         &#125;</span></span><br><span class="line"><span class="language-javascript">         $(<span class="string">&quot;span.errorMsg&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">   &#125;);</span></span><br></pre></td></tr></table></figure>
<h2 id="第二阶段：用户注册和登录"><a href="#第二阶段：用户注册和登录" class="headerlink" title="第二阶段：用户注册和登录"></a>第二阶段：用户注册和登录</h2><h3 id="1、JavaEE项目的三层架构"><a href="#1、JavaEE项目的三层架构" class="headerlink" title="1、JavaEE项目的三层架构"></a>1、JavaEE项目的三层架构</h3><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846947.png" alt="image-20220529164445452"></p>
<p>分层的目的是为了解耦，解耦就是为了降低代码的耦合度，方便项目后期的维护和升级。</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">web层	com<span class="selector-class">.lxg</span>.web/servlet/controller</span><br><span class="line">service层	com<span class="selector-class">.lxg</span><span class="selector-class">.service</span>	Service接口包</span><br><span class="line">			com<span class="selector-class">.lxg</span><span class="selector-class">.service</span><span class="selector-class">.impl</span> Service接口实现类</span><br><span class="line">dao持久层	com<span class="selector-class">.lxg</span><span class="selector-class">.dao</span>	Dao接口包</span><br><span class="line">		  com<span class="selector-class">.lxg</span><span class="selector-class">.dao</span><span class="selector-class">.impl</span> Dao接口实现类</span><br><span class="line">实体bean对象	com<span class="selector-class">.lxg</span>.pojo/entity/domain/bean	JavaBean类</span><br><span class="line">测试包	com<span class="selector-class">.lxg</span>.test/junit</span><br><span class="line">工具类	com<span class="selector-class">.lxg</span><span class="selector-class">.utils</span>	</span><br></pre></td></tr></table></figure>
<h3 id="2、编码环节"><a href="#2、编码环节" class="headerlink" title="2、编码环节"></a>2、编码环节</h3><h4 id="1、先创建书城需要的数据库和表"><a href="#1、先创建书城需要的数据库和表" class="headerlink" title="1、先创建书城需要的数据库和表"></a>1、先创建书城需要的数据库和表</h4><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846948.png" alt="image-20220529170018530"></p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> <span class="keyword">if</span> <span class="keyword">EXISTS</span> book;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> book;</span><br><span class="line"></span><br><span class="line">use book;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> table t_user(</span><br><span class="line">		<span class="symbol">`id`</span> int <span class="keyword">PRIMARY</span> <span class="keyword">key</span>  auto_increment,</span><br><span class="line">		<span class="symbol">`username`</span> varchar(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">unique</span>,</span><br><span class="line">    <span class="symbol">`password`</span> VARCHAR(<span class="number">32</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">    <span class="symbol">`email`</span> varchar(<span class="number">200</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t_user(<span class="symbol">`username`</span>,<span class="symbol">`password`</span>,<span class="symbol">`email`</span>) <span class="keyword">VALUES</span> (<span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;admin@qq.com&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> t_user;</span><br></pre></td></tr></table></figure>
<h4 id="2、编写数据库表对应的JavaBean对象"><a href="#2、编写数据库表对应的JavaBean对象" class="headerlink" title="2、编写数据库表对应的JavaBean对象"></a>2、编写数据库表对应的JavaBean对象</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lxg.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getEmail</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEmail</span><span class="params">(String email)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, username=&#x27;&quot;</span> + username + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, password=&#x27;&quot;</span> + password + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, email=&#x27;&quot;</span> + email + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(Integer id, String username, String password, String email)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">        <span class="built_in">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="3、编写工具类JdbcUtils"><a href="#3、编写工具类JdbcUtils" class="headerlink" title="3、编写工具类JdbcUtils"></a>3、编写工具类JdbcUtils</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lxg.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSource;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSourceFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JdbcUtils</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> DruidDataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">            <span class="comment">//读取jdbc.properties属性配置文件</span></span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> JdbcUtils.class.getClassLoader().getResourceAsStream(<span class="string">&quot;jdbc.properties&quot;</span>);</span><br><span class="line">            <span class="comment">//从流中读取数据</span></span><br><span class="line">            properties.load(inputStream);</span><br><span class="line">            <span class="comment">//创建数据库连接池</span></span><br><span class="line">            dataSource = (DruidDataSource) DruidDataSourceFactory.createDataSource(properties);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取数据库连接池中的连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 如果返回null说明获取连接失败，反之成功</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title function_">getConnection</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span><span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            conn = dataSource.getConnection();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> conn;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关闭连接，返回数据库连接池</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> conn</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">close</span><span class="params">(Connection conn)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(conn!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                conn.close();</span><br><span class="line">            &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>测试</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testJdbcUtils</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> JdbcUtils.getConnection();</span><br><span class="line">        System.out.println(connection);</span><br><span class="line">        JdbcUtils.close(connection);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="4、编写BaseDao"><a href="#4、编写BaseDao" class="headerlink" title="4、编写BaseDao"></a>4、编写BaseDao</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lxg.dao;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.lxg.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.QueryRunner;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.handlers.BeanHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.handlers.BeanListHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.handlers.ScalarHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">BaseDao</span> &#123;</span><br><span class="line">    <span class="comment">//使用DBUtils操作数据库</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">QueryRunner</span> <span class="variable">queryRunner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">QueryRunner</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * update()方法用来执行：Insert\update\Delete语句</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>如果返回-1，说明执行失败，其他表示影响的行数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">update</span><span class="params">(String sql,Object...args)</span>&#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> JdbcUtils.getConnection();</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">       <span class="keyword">return</span> queryRunner.update(connection,sql,args);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.close(connection);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询返回一个javaBean的sql语句</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type 返回的对象类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql 执行的sql语句</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args sql对应的参数值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;  返回的类型的泛型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span>&lt;T&gt; T <span class="title function_">queryForOne</span><span class="params">(Class&lt;T&gt; type,String sql,Object...args)</span>&#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> JdbcUtils.getConnection();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> queryRunner.query(connection,sql,<span class="keyword">new</span> <span class="title class_">BeanHandler</span>&lt;T&gt;(type),args);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.close(connection);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询返回多个javaBean的sql语句</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type 返回的对象类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql 执行的sql语句</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args sql对应的参数值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;  返回的类型的泛型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; List&lt;T&gt; <span class="title function_">queryForList</span><span class="params">(Class&lt;T&gt; type,String sql,Object...args)</span>&#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> JdbcUtils.getConnection();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> queryRunner.query(connection,sql,<span class="keyword">new</span> <span class="title class_">BeanListHandler</span>&lt;T&gt;(type),args);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.close(connection);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行返回一行一列的sql语句</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql 执行的sql语句</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args sql对应的参数值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">queryForSingleValue</span><span class="params">(String sql,Object...args)</span>&#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> JdbcUtils.getConnection();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            queryRunner.query(connection,sql,<span class="keyword">new</span> <span class="title class_">ScalarHandler</span>(),args);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.close(connection);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="5、编写UserDao和测试"><a href="#5、编写UserDao和测试" class="headerlink" title="5、编写UserDao和测试"></a>5、编写UserDao和测试</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lxg.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.lxg.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.lxg.dao.impl.UserDaoImpl;</span><br><span class="line"><span class="keyword">import</span> com.lxg.domain.User;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoTest</span> &#123;</span><br><span class="line">    <span class="type">UserDao</span> <span class="variable">userDao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserDaoImpl</span>();</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">queryUserByUsername</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(userDao.queryUserByUsername(<span class="string">&quot;admin&quot;</span>)==<span class="literal">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;用户名可用&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;用户名已存在&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">queryUserByUsernameAndPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(userDao.queryUserByUsernameAndPassword(<span class="string">&quot;admin&quot;</span>,<span class="string">&quot;123456&quot;</span>)==<span class="literal">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;用户名或密码错误&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveUser</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(userDao.saveUser(<span class="keyword">new</span> <span class="title class_">User</span>(<span class="literal">null</span>,<span class="string">&quot;lxg&quot;</span>,<span class="string">&quot;123456&quot;</span>,<span class="string">&quot;xiaolin@qq.com&quot;</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="6、编写UserService和测试"><a href="#6、编写UserService和测试" class="headerlink" title="6、编写UserService和测试"></a>6、编写UserService和测试</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lxg.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.lxg.domain.User;</span><br><span class="line"><span class="keyword">import</span> com.lxg.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.lxg.service.impl.UserServiceImpl;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceTest</span> &#123;</span><br><span class="line">    <span class="type">UserService</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">registUser</span><span class="params">()</span> &#123;</span><br><span class="line">        userService.registUser(<span class="keyword">new</span> <span class="title class_">User</span>(<span class="literal">null</span>,<span class="string">&quot;zs&quot;</span>,<span class="string">&quot;123456&quot;</span>,<span class="string">&quot;zs@qq.com&quot;</span>));</span><br><span class="line">        userService.registUser(<span class="keyword">new</span> <span class="title class_">User</span>(<span class="literal">null</span>,<span class="string">&quot;ls&quot;</span>,<span class="string">&quot;123456&quot;</span>,<span class="string">&quot;ls@qq.com&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">login</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(userService.login(<span class="keyword">new</span> <span class="title class_">User</span>(<span class="literal">null</span>,<span class="string">&quot;zs&quot;</span>,<span class="string">&quot;123456&quot;</span>,<span class="literal">null</span>)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">existsUsername</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(userService.existsUsername(<span class="string">&quot;zs&quot;</span>))&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;用户名已存在&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;用户名可用&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="7、编写web层"><a href="#7、编写web层" class="headerlink" title="7、编写web层"></a>7、编写web层</h4><p>1、用户注册</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">需求如下：</span><br><span class="line">1、访问注册页面</span><br><span class="line">2、填写注册信息，提交给服务器</span><br><span class="line">3、服务器应该保存用户</span><br><span class="line">4、当用户已经存在——提示用户注册失败，用户名已存在</span><br><span class="line">5、当用户不存在——注册成功</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lxg.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.lxg.domain.User;</span><br><span class="line"><span class="keyword">import</span> com.lxg.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.lxg.service.impl.UserServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RegistServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">UserService</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//1、获取请求的参数</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">email</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;email&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">code</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;code&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2、检查验证码是否正确===写死，要求验证码为：abcde</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;abcde&quot;</span>.equalsIgnoreCase(code)) &#123;</span><br><span class="line">            <span class="comment">//正确</span></span><br><span class="line">            <span class="comment">//3、检查用户名是否可用</span></span><br><span class="line">            <span class="keyword">if</span>(userService.existsUsername(username))&#123;</span><br><span class="line">                <span class="comment">//用户名已存在,不可用</span></span><br><span class="line">                System.out.println(<span class="string">&quot;用户名[&quot;</span>+username+<span class="string">&quot;]已存在!&quot;</span>);</span><br><span class="line">                req.getRequestDispatcher(<span class="string">&quot;/pages/user/regist.html&quot;</span>).forward(req,resp);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//用户名可用</span></span><br><span class="line">                <span class="comment">//调用service保存到数据库</span></span><br><span class="line">                userService.registUser(<span class="keyword">new</span> <span class="title class_">User</span>(<span class="literal">null</span>,username,password,email));</span><br><span class="line">                <span class="comment">//跳转到注册成功页面</span></span><br><span class="line">                req.getRequestDispatcher(<span class="string">&quot;/pages/user/regist_success.html&quot;</span>).forward(req,resp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;验证码[&quot;</span>+code+<span class="string">&quot;]错误&quot;</span>);</span><br><span class="line">            <span class="comment">//跳回注册页面</span></span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/pages/user/regist.html&quot;</span>).forward(req,resp);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846949.png" alt="image-20220530131656504"></p>
<p>2、用户登录</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">需求如下：</span><br><span class="line">1、访问登录页面</span><br><span class="line">2、填写用户名和密码后提交</span><br><span class="line">3、服务器判断用户是否存在</span><br><span class="line">4、如果登录失败——返回用户名或密码的错误信息</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lxg.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.lxg.domain.User;</span><br><span class="line"><span class="keyword">import</span> com.lxg.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.lxg.service.impl.UserServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="type">UserService</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//1、获取请求参数</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        <span class="comment">//2、调用userService.login完成业务逻辑</span></span><br><span class="line">        User loginUser= userService.login(<span class="keyword">new</span> <span class="title class_">User</span>(<span class="literal">null</span>,username, password,<span class="literal">null</span>));</span><br><span class="line">        <span class="comment">//如果等于null，说明登录失败</span></span><br><span class="line">        <span class="keyword">if</span>(loginUser==<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="comment">//3、跳转到登录页面</span></span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/pages/user/login.html&quot;</span>).forward(req,resp);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//4、登录成功,跳转到登录成功页面</span></span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/pages/user/login_success.html&quot;</span>).forward(req,resp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846950.png" alt="image-20220530151801912"></p>
<p>3、IDEA中的Debug调试的使用</p>
<figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Debug</span>调试代码，首先需要两个元素：断点+<span class="keyword">Debug</span>启动服务器</span><br><span class="line"><span class="number">1</span>、断点：只需要在代码需要停的行的左边上单击，就可以添加和取消</span><br><span class="line"><span class="number">2</span>、<span class="keyword">Debug</span>服务器启动Tomcat运行代码：点击调试按钮</span><br></pre></td></tr></table></figure>
<p>测试工具栏：</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846951.png" alt="image-20220530150050479"></p>
<p>变量窗口，它可以查看当前方法范围内所有有效变量</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846953.png" alt="image-20220530150253835"></p>
<p>方法调用窗口</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">1、方法调用栈可以查看当前线程有哪些方法调用信息</span><br><span class="line">2、下面一行的方法调用上面一行的方法</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846954.png" alt="image-20220530151128323"></p>
<p>其他常用调试相关按钮：</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846955.png" alt="image-20220530151052023"></p>
<h2 id="第三阶段：优化"><a href="#第三阶段：优化" class="headerlink" title="第三阶段：优化"></a>第三阶段：优化</h2><h3 id="a-页面jsp动态化"><a href="#a-页面jsp动态化" class="headerlink" title="a:页面jsp动态化"></a>a:页面jsp动态化</h3><ol>
<li>在html页面顶行添加page指令</li>
<li>修改文件后缀名为：.jsp</li>
</ol>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846956.png" alt="image-20220727095851177"></p>
<p>   3.使用idea搜索替换.html为.jsp</p>
<p>​    CTRL+SHIF+R：或者CTRL+R</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846957.png" alt="image-20220727102237773"></p>
<h3 id="b-抽取页面相同的内容"><a href="#b-抽取页面相同的内容" class="headerlink" title="b:抽取页面相同的内容"></a>b:抽取页面相同的内容</h3><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846958.png" alt="image-20220727113253546"></p>
<h3 id="c：登录，注册错误提示以及表单回显"><a href="#c：登录，注册错误提示以及表单回显" class="headerlink" title="c：登录，注册错误提示以及表单回显"></a>c：登录，注册错误提示以及表单回显</h3><p>在Servlet后端代码中将用户信息保存进域对象，</p>
<p>在jsp前端页面代码中使用EL表达式获取信息并显示</p>
<h3 id="d-BaseServlet的抽取"><a href="#d-BaseServlet的抽取" class="headerlink" title="d:BaseServlet的抽取"></a>d:BaseServlet的抽取</h3><p>在实际的项目开发中，一个模块，一般只使用一个Servlet程序。</p>
<p>LoginServlet和RegistServle优化为UserServlet：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main.java.com.lxg.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> main.java.com.lxg.domain.User;</span><br><span class="line"><span class="keyword">import</span> main.java.com.lxg.service.UserService;</span><br><span class="line"><span class="keyword">import</span> main.java.com.lxg.service.impl.UserServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">UserService</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 处理登录功能</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> req</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resp</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ServletException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">login</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//System.out.println(&quot;处理登录的需求&quot;);</span></span><br><span class="line">        <span class="comment">//  1、获取请求的参数</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        <span class="comment">// 调用 userService.login()登录处理业务</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">loginUser</span> <span class="operator">=</span> userService.login(<span class="keyword">new</span> <span class="title class_">User</span>(<span class="literal">null</span>, username, password, <span class="literal">null</span>));</span><br><span class="line">        <span class="comment">// 如果等于null,说明登录 失败!</span></span><br><span class="line">        <span class="keyword">if</span> (loginUser == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 把错误信息，和回显的表单项信息，保存到Request域中</span></span><br><span class="line">            req.setAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;用户或密码错误！&quot;</span>);</span><br><span class="line">            req.setAttribute(<span class="string">&quot;username&quot;</span>, username);</span><br><span class="line">            <span class="comment">//   跳回登录页面</span></span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/pages/user/login.jsp&quot;</span>).forward(req, resp);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 登录 成功</span></span><br><span class="line">            <span class="comment">//跳到成功页面login_success.html</span></span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/pages/user/login_success.jsp&quot;</span>).forward(req, resp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 处理注册功能</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> req</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resp</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ServletException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">regist</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//  1、获取请求的参数</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">email</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;email&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">code</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;code&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2、检查 验证码是否正确  === 写死,要求验证码为:abcde</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;abcde&quot;</span>.equalsIgnoreCase(code)) &#123;</span><br><span class="line">            <span class="comment">//3、检查 用户名是否可用</span></span><br><span class="line">            <span class="keyword">if</span> (userService.existsUsername(username)) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;用户名[&quot;</span> + username + <span class="string">&quot;]已存在!&quot;</span>);</span><br><span class="line">                <span class="comment">// 把回显信息，保存到Request域中</span></span><br><span class="line">                req.setAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;用户名已存在！！&quot;</span>);</span><br><span class="line">                req.setAttribute(<span class="string">&quot;username&quot;</span>, username);</span><br><span class="line">                req.setAttribute(<span class="string">&quot;email&quot;</span>, email);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//跳回注册页面</span></span><br><span class="line">                req.getRequestDispatcher(<span class="string">&quot;/pages/user/regist.jsp&quot;</span>).forward(req, resp);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//可用</span></span><br><span class="line">                <span class="comment">//调用Sservice保存到数据库</span></span><br><span class="line">                userService.registUser(<span class="keyword">new</span> <span class="title class_">User</span>(<span class="literal">null</span>, username, password, email));</span><br><span class="line">                <span class="comment">//跳到注册成功页面 regist_success.jsp</span></span><br><span class="line">                req.getRequestDispatcher(<span class="string">&quot;/pages/user/regist_success.jsp&quot;</span>).forward(req, resp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 把回显信息，保存到Request域中</span></span><br><span class="line">            req.setAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;验证码错误！！&quot;</span>);</span><br><span class="line">            req.setAttribute(<span class="string">&quot;username&quot;</span>, username);</span><br><span class="line">            req.setAttribute(<span class="string">&quot;email&quot;</span>, email);</span><br><span class="line">            System.out.println(<span class="string">&quot;验证码[&quot;</span> + code + <span class="string">&quot;]错误&quot;</span>);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/pages/user/regist.jsp&quot;</span>).forward(req, resp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;action&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;login&quot;</span>.equals(action)) &#123;</span><br><span class="line">            login(req, resp);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;regist&quot;</span>.equals(action)) &#123;</span><br><span class="line">            regist(req, resp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>doPost还可以继续优化为：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;action&quot;</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//通过action业务鉴别字符串，获取对应的业务，方法反射对象</span></span><br><span class="line">    <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> <span class="built_in">this</span>.getClass().getDeclaredMethod(action,HttpServletRequest.class,HttpServletResponse.class);</span><br><span class="line">    <span class="comment">//System.out.println(method);</span></span><br><span class="line">    <span class="comment">//调用目标业务方法</span></span><br><span class="line">    method.invoke(<span class="built_in">this</span>,req,resp);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如若系统又有其他模块，这个代码可以抽取出来变成BaseServlet</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846959.png" alt="image-20220727151734603"></p>
<h3 id="e-数据的封装和抽取BeanUtils的使用"><a href="#e-数据的封装和抽取BeanUtils的使用" class="headerlink" title="e:数据的封装和抽取BeanUtils的使用"></a>e:数据的封装和抽取BeanUtils的使用</h3><ol>
<li><p>BeanUtils工具类，它可以一次性的把请求的参数注入到javaBean中。</p>
</li>
<li><p>BeanUtils不是jdk的类，是第三方的工具类，所以需要导包</p>
<ul>
<li><p>导入需要的jar包：</p>
<p>commons-beanutils-1.8.0.jar<br>commons-logging-1.1.1.jar</p>
</li>
<li><p>使用BeanUti类方法实现注入</p>
</li>
</ul>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main.java.com.lxg.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.BeanUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebUtils</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 把Map中的值注入到对应的JavaBean属性中。</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt;  T <span class="title function_">copyParamToBean</span><span class="params">(Map value, T bean)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;注入之前：&quot;</span>+bean);</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 把所有请求的参数全都注入到user对象中</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            BeanUtils.populate(bean,value);</span><br><span class="line">            System.out.println(<span class="string">&quot;注入之后：&quot;</span>+bean);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//给参数注入值</span></span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> WebUtils.copyParamToBean(req.getParameterMap(),<span class="keyword">new</span> <span class="title class_">User</span>());</span><br></pre></td></tr></table></figure>
<p>CTRL+ALT+T快捷键:</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846960.png" alt="image-20220727153330167"></p>
<h2 id="第四阶段：使用EL表达式修改表单回显（上面已修改）"><a href="#第四阶段：使用EL表达式修改表单回显（上面已修改）" class="headerlink" title="第四阶段：使用EL表达式修改表单回显（上面已修改）"></a>第四阶段：使用EL表达式修改表单回显（上面已修改）</h2><h2 id="第五阶段：图书模块"><a href="#第五阶段：图书模块" class="headerlink" title="第五阶段：图书模块"></a>第五阶段：图书模块</h2><h3 id="1、MVC概念"><a href="#1、MVC概念" class="headerlink" title="1、MVC概念"></a>1、MVC概念</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MVC全称：Model模型、<span class="keyword">View</span>视图、Controller控制器</span><br><span class="line"></span><br><span class="line">MVC最早出现在JavaEE三层的web层，它可以有效的指导web层的代码如何有效分离，单独工作</span><br><span class="line"></span><br><span class="line"><span class="keyword">View</span>视图：只负责数据和界面的显示，不接受任何域显示数据无关的代码，便于程序员和美工的分工合作<span class="comment">---jsp/Html</span></span><br><span class="line"></span><br><span class="line">Controller控制器：只负责接收请求，调用业务层的代码请求，然后派发页面，是一个“调度者”的角色<span class="comment">--Servlet。转到某个页面，或者是重定向到某个页面。</span></span><br><span class="line"></span><br><span class="line">Model模型：将与业务逻辑相关的数据封装成为具体的JavaBean类，其中不掺杂任何与数据处理相关的代码<span class="comment">--JavaBean、domain、entity。</span></span><br><span class="line"></span><br><span class="line">MVC是一种思想</span><br><span class="line">MVC的理念是将软件代码拆分成为组件，单独开发，组合使用（目的还是为了解耦合）。</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846961.png" alt="image-20220727162733181"></p>
<p>MVC的作用还是为了降低耦合，让代码合理分层，方便后期升级和维护。</p>
<h3 id="2、图书模块"><a href="#2、图书模块" class="headerlink" title="2、图书模块"></a>2、图书模块</h3><h4 id="2-1、编写图书模块的数据库表"><a href="#2-1、编写图书模块的数据库表" class="headerlink" title="2.1、编写图书模块的数据库表"></a>2.1、编写图书模块的数据库表</h4><h4 id="2-2、编写图书模块的JavaBean"><a href="#2-2、编写图书模块的JavaBean" class="headerlink" title="2.2、编写图书模块的JavaBean"></a>2.2、编写图书模块的JavaBean</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main.java.com.lxg.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Book</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal price;</span><br><span class="line">    <span class="keyword">private</span> Integer sales;</span><br><span class="line">    <span class="keyword">private</span> Integer stock;</span><br><span class="line">    <span class="keyword">private</span> String imgPath=<span class="string">&quot;static/img/default.jpg&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Book</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Book&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, author=&#x27;&quot;</span> + author + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, price=&quot;</span> + price +</span><br><span class="line">                <span class="string">&quot;, sales=&quot;</span> + sales +</span><br><span class="line">                <span class="string">&quot;, stock=&quot;</span> + stock +</span><br><span class="line">                <span class="string">&quot;, imgPath=&#x27;&quot;</span> + imgPath + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAuthor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> author;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAuthor</span><span class="params">(String author)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.author = author;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BigDecimal <span class="title function_">getPrice</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPrice</span><span class="params">(BigDecimal price)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.price = price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getSales</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sales;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSales</span><span class="params">(Integer sales)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sales = sales;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getStock</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> stock;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStock</span><span class="params">(Integer stock)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.stock = stock;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getImgPath</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> imgPath;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setImgPath</span><span class="params">(String imgPath)</span> &#123;</span><br><span class="line">        <span class="comment">//要求给定的图书封面图书路径不能为空</span></span><br><span class="line">        <span class="keyword">if</span> (imgPath!=<span class="literal">null</span> &amp;&amp; !<span class="string">&quot;&quot;</span>.equals(imgPath))&#123;</span><br><span class="line">            <span class="built_in">this</span>.imgPath = imgPath;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Book</span><span class="params">(Integer id, String name, String author, BigDecimal price, Integer sales, Integer stock, String imgPath)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.author = author;</span><br><span class="line">        <span class="built_in">this</span>.price = price;</span><br><span class="line">        <span class="built_in">this</span>.sales = sales;</span><br><span class="line">        <span class="built_in">this</span>.stock = stock;</span><br><span class="line">        <span class="comment">//要求给定的图书封面图书路径不能为空</span></span><br><span class="line">        <span class="keyword">if</span> (imgPath!=<span class="literal">null</span> &amp;&amp; !<span class="string">&quot;&quot;</span>.equals(imgPath))&#123;</span><br><span class="line">            <span class="built_in">this</span>.imgPath = imgPath;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="2-3、编写图书模块的Dao和测试Dao"><a href="#2-3、编写图书模块的Dao和测试Dao" class="headerlink" title="2.3、编写图书模块的Dao和测试Dao"></a>2.3、编写图书模块的Dao和测试Dao</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main.java.com.lxg.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> main.java.com.lxg.domain.Book;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BookDao</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">addBook</span><span class="params">(Book book)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">deleteBookById</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updateBook</span><span class="params">(Book book)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Book <span class="title function_">queryBookById</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Book&gt; <span class="title function_">queryBooks</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main.java.com.lxg.dao.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> main.java.com.lxg.dao.BookDao;</span><br><span class="line"><span class="keyword">import</span> main.java.com.lxg.domain.Book;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookDaoImpl</span> <span class="keyword">extends</span> <span class="title class_">BaseDao</span> <span class="keyword">implements</span> <span class="title class_">BookDao</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">addBook</span><span class="params">(Book book)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into t_book(`name`,`author`,`price`,`sales`,`stock`,`img_path`) \n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;values(?,?,?,?,?,?)&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> update(sql,book.getName(),book.getAuthor(),book.getPrice(),book.getSales(),book.getStock(),book.getImgPath());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">deleteBookById</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;delete from t_book where id=?&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> update(sql,id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updateBook</span><span class="params">(Book book)</span> &#123;</span><br><span class="line">        String sql=<span class="string">&quot;update t_book set `name`=?,`author`=?,`price`=?,`sales`=?,`stock`=?,`img_path`=? where id=?&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> update(sql,book.getName(),book.getAuthor(),book.getPrice(),book.getSales(),book.getStock(),book.getImgPath(),book.getId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Book <span class="title function_">queryBookById</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select `id` , `name` , `author` , `price` , `sales` , `stock` , `img_path` imPath from t_book where id=? &quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> queryForOne(Book.class,sql,id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Book&gt; <span class="title function_">queryBooks</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select `id` , `name` , `author` , `price` , `sales` , `stock` , `img_path` from t_book&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> queryForList(Book.class,sql);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>生成测试快捷键：CTRL+SHIFT+T</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846962.png" alt="image-20220727211721560"></p>
<h4 id="2-4、编写图书模块的Service和测试Service"><a href="#2-4、编写图书模块的Service和测试Service" class="headerlink" title="2.4、编写图书模块的Service和测试Service"></a>2.4、编写图书模块的Service和测试Service</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main.java.com.lxg.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> main.java.com.lxg.domain.Book;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addBook</span><span class="params">(Book book)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteBookById</span><span class="params">(Integer id)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateBook</span><span class="params">(Book book)</span>;</span><br><span class="line">    <span class="keyword">public</span> Book <span class="title function_">findBookById</span><span class="params">(Integer id)</span>;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Book&gt; <span class="title function_">findAllBooks</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main.java.com.lxg.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> main.java.com.lxg.dao.BookDao;</span><br><span class="line"><span class="keyword">import</span> main.java.com.lxg.dao.impl.BookDaoImpl;</span><br><span class="line"><span class="keyword">import</span> main.java.com.lxg.domain.Book;</span><br><span class="line"><span class="keyword">import</span> main.java.com.lxg.service.BookService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">BookDao</span> <span class="variable">bookDao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BookDaoImpl</span>();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addBook</span><span class="params">(Book book)</span> &#123;</span><br><span class="line">        bookDao.addBook(book);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteBookById</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        bookDao.deleteBookById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateBook</span><span class="params">(Book book)</span> &#123;</span><br><span class="line">        bookDao.updateBook(book);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Book <span class="title function_">findBookById</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bookDao.queryBookById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Book&gt; <span class="title function_">findAllBooks</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bookDao.queryBooks();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="2-5、编写图书模块的Web层，和页面联调测试"><a href="#2-5、编写图书模块的Web层，和页面联调测试" class="headerlink" title="2.5、编写图书模块的Web层，和页面联调测试"></a>2.5、编写图书模块的Web层，和页面联调测试</h4><p>BookServlet：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main.java.com.lxg.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> main.java.com.lxg.domain.Book;</span><br><span class="line"><span class="keyword">import</span> main.java.com.lxg.service.BookService;</span><br><span class="line"><span class="keyword">import</span> main.java.com.lxg.service.impl.BookServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookServlet</span> <span class="keyword">extends</span> <span class="title class_">BaseServlet</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">BookService</span> <span class="variable">bookService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BookServiceImpl</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">list</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//1、通过BookService查询全部图书</span></span><br><span class="line">        List&lt;Book&gt; books = bookService.findAllBooks();</span><br><span class="line">        <span class="comment">//2、把全部图书信息保存到Req域中</span></span><br><span class="line">        req.setAttribute(<span class="string">&quot;books&quot;</span>,books);</span><br><span class="line">        <span class="comment">//3、请求转发到pages/manager/book_manager.jsp页面</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">&quot;/pages/manager/book_manager.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>需要给BaseServlet加上doGet方法才可处理get请求</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">    doPost(req,resp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846963.png" alt=""></p>
<p>实现展示所有图书功能：</p>
<p>使用jstl标签遍历获取数据显示在前端页面：</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;c:forEach items=<span class="string">&quot;$&#123;requestScope.books&#125;&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;book&quot;</span>&gt;</span><br><span class="line">   &lt;tr&gt;</span><br><span class="line">      &lt;td&gt;$&#123;book.name&#125;&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;$&#123;book.price&#125;&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;$&#123;book.author&#125;&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;$&#123;book.sales&#125;&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;$&#123;book.stock&#125;&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;&lt;a href=<span class="string">&quot;book_edit.jsp&quot;</span>&gt;修改&lt;/a&gt;&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;&lt;a href=<span class="string">&quot;#&quot;</span>&gt;删除&lt;/a&gt;&lt;/td&gt;</span><br><span class="line">   &lt;/tr&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure>
<p>前后台的介绍：</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846964.png" alt="image-20220728005100936"></p>
<p>实现添加图书功能：</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846965.png" alt="image-20220728010044419"></p>
<p>请求转发定位到工程目录</p>
<p>请求重定向定位到端口号</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">    <span class="comment">//1、获取请求的参数==封装成为Book对象</span></span><br><span class="line">    <span class="type">Book</span> <span class="variable">book</span> <span class="operator">=</span> WebUtils.copyParamToBean(req.getParameterMap(),<span class="keyword">new</span> <span class="title class_">Book</span>());</span><br><span class="line">    <span class="comment">//2、调用BookService.addBook()保存图书</span></span><br><span class="line">    bookService.addBook(book);</span><br><span class="line">    <span class="comment">//3、跳到图书列表页面</span></span><br><span class="line">    <span class="comment">//req.getRequestDispatcher(&quot;/manager/bookServlet?action=list&quot;).forward(req,resp);</span></span><br><span class="line">    resp.sendRedirect(req.getContextPath()+<span class="string">&quot;/manager/bookServlet?action=list&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>实现图书删除功能：</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846966.png" alt="image-20220728085541748"></p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">   $(function ()&#123;</span><br><span class="line">      <span class="comment">//给删除的a标签绑定单击事件</span></span><br><span class="line">      $(<span class="string">&quot;a.deleteClass&quot;</span>).click(function () &#123;</span><br><span class="line">         <span class="comment">//在事件的function函数中，有一个this对象，这个this对象，是当前正在响应事件的dom对象</span></span><br><span class="line"></span><br><span class="line">         <span class="comment">/**</span></span><br><span class="line"><span class="comment">          * confirm是确认提示框函数</span></span><br><span class="line"><span class="comment">          * 参数是它提示的内容</span></span><br><span class="line"><span class="comment">          * 它有两个按钮，一个确定，一个是取消</span></span><br><span class="line"><span class="comment">          * 返回true表示点击了确定，返回false表示点击了取消</span></span><br><span class="line"><span class="comment">          */</span></span><br><span class="line">         <span class="keyword">return</span> confirm(<span class="string">&quot;你确定要删除【&quot;</span>+$(<span class="built_in">this</span>).parent().parent().find(<span class="string">&quot;td:first&quot;</span>).text()+<span class="string">&quot;】?&quot;</span>);</span><br><span class="line">      &#125;)</span><br><span class="line">   &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">    <span class="comment">//1、获取请求的参数id，图书编号</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> WebUtils.parseInt(req.getParameter(<span class="string">&quot;id&quot;</span>),<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2、调用BookService.deleteBookById(id);</span></span><br><span class="line">    bookService.deleteBookById(id);</span><br><span class="line">    <span class="comment">//3、重定向会图书列表管理页面</span></span><br><span class="line">    resp.sendRedirect(req.getContextPath()+<span class="string">&quot;/manager/bookServlet?action=list&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;td&gt;&lt;a class=<span class="string">&quot;deleteClass&quot;</span> href=<span class="string">&quot;manager/bookServlet?action=delete&amp;id=$&#123;book.id&#125;&quot;</span>&gt;删除&lt;/a&gt;&lt;/td&gt;</span><br></pre></td></tr></table></figure>
<p>实现图书修改功能：</p>
<p>获取前端页面数据：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">getBook</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">    <span class="comment">//1、获取请求的参数，图书编号</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> WebUtils.parseInt(req.getParameter(<span class="string">&quot;id&quot;</span>),<span class="number">0</span>);</span><br><span class="line">    <span class="comment">//2、调用bookService.queryBookById查询图书</span></span><br><span class="line">    <span class="type">Book</span> <span class="variable">book</span> <span class="operator">=</span> bookService.findBookById(id);</span><br><span class="line">    <span class="comment">//3、保存图书信息到request域中</span></span><br><span class="line">    req.setAttribute(<span class="string">&quot;book&quot;</span>,book);</span><br><span class="line">    <span class="comment">//4、请求转发到，pages/maanger/book_edit.jsp页面</span></span><br><span class="line">    req.getRequestDispatcher(<span class="string">&quot;/pages/manager/book_edit.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>回显数据：</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;tr&gt;</span><br><span class="line">   &lt;td&gt;&lt;input name=<span class="string">&quot;name&quot;</span> type=<span class="string">&quot;text&quot;</span> value=<span class="string">&quot;$&#123;book.name&#125;&quot;</span>/&gt;&lt;/td&gt;</span><br><span class="line">   &lt;td&gt;&lt;input name=<span class="string">&quot;price&quot;</span> type=<span class="string">&quot;text&quot;</span> value=<span class="string">&quot;$&#123;book.price&#125;&quot;</span>/&gt;&lt;/td&gt;</span><br><span class="line">   &lt;td&gt;&lt;input name=<span class="string">&quot;author&quot;</span> type=<span class="string">&quot;text&quot;</span> value=<span class="string">&quot;$&#123;book.author&#125;&quot;</span>/&gt;&lt;/td&gt;</span><br><span class="line">   &lt;td&gt;&lt;input name=<span class="string">&quot;sales&quot;</span> type=<span class="string">&quot;text&quot;</span> value=<span class="string">&quot;$&#123;book.sales&#125;&quot;</span>/&gt;&lt;/td&gt;</span><br><span class="line">   &lt;td&gt;&lt;input name=<span class="string">&quot;stock&quot;</span> type=<span class="string">&quot;text&quot;</span> value=<span class="string">&quot;$&#123;book.stock&#125;&quot;</span>/&gt;&lt;/td&gt;</span><br><span class="line">   &lt;td&gt;&lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>/&gt;&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure>
<p>保存修改：</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846967.png" alt="image-20220728093806524"></p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--&lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;action&quot;</span> value=<span class="string">&quot;$&#123;param.method&#125;&quot;</span>&gt;--%&gt;</span><br><span class="line">&lt;%--&lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;action&quot;</span> value=<span class="string">&quot;$&#123;empty param.id ? &quot;</span>add<span class="string">&quot; : &quot;</span>update<span class="string">&quot;&#125;&quot;</span>&gt;--%&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;action&quot;</span> value=<span class="string">&quot;$&#123;empty requestScope.book ? &quot;</span>add<span class="string">&quot; : &quot;</span>update<span class="string">&quot;&#125;&quot;</span>&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--&lt;td&gt;&lt;a href=<span class="string">&quot;pages/manager/book_edit.jsp?method=add&quot;</span>&gt;添加图书&lt;/a&gt;&lt;/td&gt;--%&gt;</span><br><span class="line">&lt;td&gt;&lt;a href=<span class="string">&quot;pages/manager/book_edit.jsp&quot;</span>&gt;添加图书&lt;/a&gt;&lt;/td&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--&lt;td&gt;&lt;a href=<span class="string">&quot;manager/bookServlet?action=getBook&amp;id=$&#123;book.id&#125;&amp;method=update&quot;</span>&gt;修改&lt;/a&gt;&lt;/td&gt;--%&gt;</span><br><span class="line">&lt;td&gt;&lt;a href=<span class="string">&quot;manager/bookServlet?action=getBook&amp;id=$&#123;book.id&#125;&quot;</span>&gt;修改&lt;/a&gt;&lt;/td</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">    <span class="comment">//1、获取请求的参数==封装成Book对象</span></span><br><span class="line">    <span class="type">Book</span> <span class="variable">book</span> <span class="operator">=</span> WebUtils.copyParamToBean(req.getParameterMap(),<span class="keyword">new</span> <span class="title class_">Book</span>());</span><br><span class="line">    <span class="comment">//2、调用BookService.updateBook(book);修改图书</span></span><br><span class="line">    bookService.updateBook(book);</span><br><span class="line">    <span class="comment">//3、重定向会图书列表管理页面</span></span><br><span class="line">    resp.sendRedirect(req.getContextPath()+<span class="string">&quot;/manager/bookServlet?action=list&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3、图书分页"><a href="#3、图书分页" class="headerlink" title="3、图书分页"></a>3、图书分页</h3><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846968.png" alt="image-20220728101245611"></p>
<ol>
<li><p>分页功能分析</p>
</li>
<li><p>分页模型Page对象的创建</p>
</li>
<li><p>分页初步实现</p>
</li>
<li><p>首页，上一页，末页的实现</p>
</li>
<li><p>跳转到指定页码的功能</p>
</li>
<li><p>数据边界有效的检验</p>
</li>
<li><p>分页条页码的显示（显示5个连续的页码，而且当前页码在中间，除了当前页码之外，每个页码都可以点击跳转到相应的指定页面</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846969.png" alt="image-20220728151311069"></p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846970.png" alt="image-20220728151639039"></p>
</li>
<li><p>修改分页对原来添加修改删除功能的影响</p>
</li>
</ol>
<h3 id="4、前台分页"><a href="#4、前台分页" class="headerlink" title="4、前台分页"></a>4、前台分页</h3><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;书城首页&lt;/title&gt;</span><br><span class="line">    &lt;%--静态包含base标签，css样式，jQuery文件--%&gt;</span><br><span class="line">    &lt;%@ include file=<span class="string">&quot;/pages/common/head.jsp&quot;</span>%&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=<span class="string">&quot;header&quot;</span>&gt;</span><br><span class="line">    &lt;img class=<span class="string">&quot;logo_img&quot;</span> alt=<span class="string">&quot;&quot;</span> src=<span class="string">&quot;static/img/logo.gif&quot;</span> &gt;</span><br><span class="line">    &lt;span class=<span class="string">&quot;wel_word&quot;</span>&gt;网上书城&lt;/span&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;a href=<span class="string">&quot;pages/user/login.jsp&quot;</span>&gt;登录&lt;/a&gt; |</span><br><span class="line">        &lt;a href=<span class="string">&quot;pages/user/regist.jsp&quot;</span>&gt;注册&lt;/a&gt; &amp;nbsp;&amp;nbsp;</span><br><span class="line">        &lt;a href=<span class="string">&quot;pages/cart/cart.jsp&quot;</span>&gt;购物车&lt;/a&gt;</span><br><span class="line">        &lt;a href=<span class="string">&quot;pages/manager/manager.jsp&quot;</span>&gt;后台管理&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div id=<span class="string">&quot;main&quot;</span>&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;book&quot;</span>&gt;</span><br><span class="line">        &lt;div class=<span class="string">&quot;book_cond&quot;</span>&gt;</span><br><span class="line">            &lt;form action=<span class="string">&quot;&quot;</span> method=<span class="string">&quot;get&quot;</span>&gt;</span><br><span class="line">                价格：&lt;input id=<span class="string">&quot;min&quot;</span> type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;min&quot;</span> value=<span class="string">&quot;&quot;</span>&gt; 元 -</span><br><span class="line">                &lt;input id=<span class="string">&quot;max&quot;</span> type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;max&quot;</span> value=<span class="string">&quot;&quot;</span>&gt; 元</span><br><span class="line">                &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;查询&quot;</span> /&gt;</span><br><span class="line">            &lt;/form&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div style=<span class="string">&quot;text-align: center&quot;</span>&gt;</span><br><span class="line">            &lt;span&gt;您的购物车中有<span class="number">3</span>件商品&lt;/span&gt;</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                您刚刚将&lt;span style=<span class="string">&quot;color: red&quot;</span>&gt;时间简史&lt;/span&gt;加入到了购物车中</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;c:forEach items=<span class="string">&quot;$&#123;requestScope.page.items&#125;&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;book&quot;</span> &gt;</span><br><span class="line">            &lt;div class=<span class="string">&quot;b_list&quot;</span>&gt;</span><br><span class="line">                &lt;div class=<span class="string">&quot;img_div&quot;</span>&gt;</span><br><span class="line">                    &lt;img class=<span class="string">&quot;book_img&quot;</span> alt=<span class="string">&quot;&quot;</span> src=<span class="string">&quot;$&#123;book.imgPath&#125;&quot;</span> /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=<span class="string">&quot;book_info&quot;</span>&gt;</span><br><span class="line">                    &lt;div class=<span class="string">&quot;book_name&quot;</span>&gt;</span><br><span class="line">                        &lt;span class=<span class="string">&quot;sp1&quot;</span>&gt;书名:&lt;/span&gt;</span><br><span class="line">                        &lt;span class=<span class="string">&quot;sp2&quot;</span>&gt;$&#123;book.name&#125;&lt;/span&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=<span class="string">&quot;book_author&quot;</span>&gt;</span><br><span class="line">                        &lt;span class=<span class="string">&quot;sp1&quot;</span>&gt;作者:&lt;/span&gt;</span><br><span class="line">                        &lt;span class=<span class="string">&quot;sp2&quot;</span>&gt;$&#123;book.author&#125;&lt;/span&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=<span class="string">&quot;book_price&quot;</span>&gt;</span><br><span class="line">                        &lt;span class=<span class="string">&quot;sp1&quot;</span>&gt;价格:&lt;/span&gt;</span><br><span class="line">                        &lt;span class=<span class="string">&quot;sp2&quot;</span>&gt;￥$&#123;book.price&#125;&lt;/span&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=<span class="string">&quot;book_sales&quot;</span>&gt;</span><br><span class="line">                        &lt;span class=<span class="string">&quot;sp1&quot;</span>&gt;销量:&lt;/span&gt;</span><br><span class="line">                        &lt;span class=<span class="string">&quot;sp2&quot;</span>&gt;$&#123;book.sales&#125;&lt;/span&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=<span class="string">&quot;book_amount&quot;</span>&gt;</span><br><span class="line">                        &lt;span class=<span class="string">&quot;sp1&quot;</span>&gt;库存:&lt;/span&gt;</span><br><span class="line">                        &lt;span class=<span class="string">&quot;sp2&quot;</span>&gt;$&#123;book.stock&#125;&lt;/span&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=<span class="string">&quot;book_add&quot;</span>&gt;</span><br><span class="line">                        &lt;button&gt;加入购物车&lt;/button&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/c:forEach&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div id=<span class="string">&quot;page_nav&quot;</span>&gt;</span><br><span class="line">        &lt;%--大于首页才显示--%&gt;</span><br><span class="line">        &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;requestScope.page.pageNo&gt;1&#125;&quot;</span>&gt;</span><br><span class="line">            &lt;a href=<span class="string">&quot;client/bookServlet?action=page&amp;pageNo=1&quot;</span>&gt;首页&lt;/a&gt;</span><br><span class="line">            &lt;a href=<span class="string">&quot;client/bookServlet?action=page&amp;pageNo=$&#123;requestScope.page.pageNo-1&#125;&quot;</span>&gt;上一页&lt;/a&gt;</span><br><span class="line">        &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;%--页码输出的开始--%&gt;</span><br><span class="line"></span><br><span class="line">        &lt;c:choose&gt;</span><br><span class="line">            &lt;%--<span class="number">1</span>、总页码小于等于五，页码范围<span class="number">1</span>-总页码--%&gt;</span><br><span class="line">            &lt;c:when test=<span class="string">&quot;$&#123;requestScope.page.pageTotal&lt;=5&#125;&quot;</span>&gt;</span><br><span class="line">                &lt;c:set <span class="keyword">var</span>=<span class="string">&quot;begin&quot;</span> value=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line">                &lt;c:set <span class="keyword">var</span>=<span class="string">&quot;end&quot;</span> value=<span class="string">&quot;$&#123;requestScope.page.pageTotal&#125;&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">            &lt;/c:when&gt;</span><br><span class="line">            &lt;%--<span class="number">2</span>、总页码大于五--%&gt;</span><br><span class="line">            &lt;c:when test=<span class="string">&quot;$&#123;requestScope.page.pageTotal&gt;5&#125;&quot;</span>&gt;</span><br><span class="line">                &lt;c:choose&gt;</span><br><span class="line">                    &lt;%--<span class="number">2.1</span>当前页码为前面三个，<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>的情况-，页码范围为<span class="number">1</span>到<span class="number">5</span>--%&gt;</span><br><span class="line">                    &lt;c:when test=<span class="string">&quot;$&#123;requestScope.page.pageNo &lt;=3&#125;&quot;</span>&gt;</span><br><span class="line">                        &lt;c:set <span class="keyword">var</span>=<span class="string">&quot;begin&quot;</span> value=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line">                        &lt;c:set <span class="keyword">var</span>=<span class="string">&quot;end&quot;</span> value=<span class="string">&quot;5&quot;</span>/&gt;</span><br><span class="line">                    &lt;/c:when&gt;</span><br><span class="line">                    &lt;%--<span class="number">2.2</span>当前页码为最后三个，页码范围为总页码减<span class="number">4</span>到总页码--%&gt;</span><br><span class="line">                    &lt;c:when test=<span class="string">&quot;$&#123;requestScope.page.pageNo&gt;requestScope.page.pageTotal-3&#125;&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;c:set <span class="keyword">var</span>=<span class="string">&quot;begin&quot;</span> value=<span class="string">&quot;$&#123;requestScope.page.pageTotal-4&#125;&quot;</span>/&gt;</span><br><span class="line">                        &lt;c:set <span class="keyword">var</span>=<span class="string">&quot;end&quot;</span> value=<span class="string">&quot;$&#123;requestScope.page.pageTotal&#125;&quot;</span>/&gt;</span><br><span class="line">                    &lt;/c:when&gt;</span><br><span class="line">                    &lt;%--<span class="number">2.3</span>:剩下的页码--%&gt;</span><br><span class="line">                    &lt;c:otherwise&gt;</span><br><span class="line">                        &lt;c:set <span class="keyword">var</span>=<span class="string">&quot;begin&quot;</span> value=<span class="string">&quot;$&#123;requestScope.page.pageNo-2&#125;&quot;</span>/&gt;</span><br><span class="line">                        &lt;c:set <span class="keyword">var</span>=<span class="string">&quot;end&quot;</span> value=<span class="string">&quot;$&#123;requestScope.page.pageNo+2&#125;&quot;</span>/&gt;</span><br><span class="line">                    &lt;/c:otherwise&gt;</span><br><span class="line">                &lt;/c:choose&gt;</span><br><span class="line">            &lt;/c:when&gt;</span><br><span class="line">        &lt;/c:choose&gt;</span><br><span class="line"></span><br><span class="line">        &lt;c:forEach begin=<span class="string">&quot;$&#123;begin&#125;&quot;</span> end=<span class="string">&quot;$&#123;end&#125;&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;i&quot;</span>&gt;</span><br><span class="line">            &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;i==requestScope.page.pageNo&#125;&quot;</span>&gt;</span><br><span class="line">                【$&#123;i&#125;】</span><br><span class="line">            &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">            &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;i!=requestScope.page.pageNo&#125;&quot;</span>&gt;</span><br><span class="line">                &lt;a href=<span class="string">&quot;client/bookServlet?action=page&amp;pageNo=$&#123;i&#125;&quot;</span>&gt;$&#123;i&#125;&lt;/a&gt;</span><br><span class="line">            &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">        &lt;/c:forEach&gt;</span><br><span class="line"></span><br><span class="line">        &lt;%--页码输出的结束--%&gt;</span><br><span class="line">        &lt;%--如果已经是最后一页，则不显示下一页和末页--%&gt;</span><br><span class="line">        &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;requestScope.page.pageNo &lt; requestScope.page.pageTotal&#125;&quot;</span>&gt;</span><br><span class="line">            &lt;a href=<span class="string">&quot;client/bookServlet?action=page&amp;pageNo=$&#123;requestScope.page.pageNo+1&#125;&quot;</span>&gt;下一页&lt;/a&gt;</span><br><span class="line">            &lt;a href=<span class="string">&quot;client/bookServlet?action=page&amp;pageNo=$&#123;requestScope.page.pageTotal&#125;&quot;</span>&gt;末页&lt;/a&gt;</span><br><span class="line">        &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">        共$&#123;requestScope.page.pageTotal&#125;页，$&#123;requestScope.page.pageTotalCount&#125;条记录</span><br><span class="line">        到第&lt;input value=<span class="string">&quot;$&#123;param.pageNo&#125;&quot;</span> name=<span class="string">&quot;pn&quot;</span> id=<span class="string">&quot;pn_input&quot;</span>/&gt;页</span><br><span class="line">        &lt;input id=<span class="string">&quot;searchPageBtn&quot;</span> type=<span class="string">&quot;button&quot;</span> value=<span class="string">&quot;确定&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">            $(function ()&#123;</span><br><span class="line">                <span class="comment">//跳到指定的页码</span></span><br><span class="line">                $(<span class="string">&quot;#searchPageBtn&quot;</span>).click(function ()&#123;</span><br><span class="line"></span><br><span class="line">                    <span class="type">var</span> <span class="variable">pageNo</span> <span class="operator">=</span> $(<span class="string">&quot;#pn_input&quot;</span>).val();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                    <span class="comment">//js语言提供了一个location地址栏对象</span></span><br><span class="line">                    <span class="comment">//它有一个属性叫href，它可以获取浏览器地址栏中的地址</span></span><br><span class="line">                    location.href=<span class="string">&quot;$&#123;pageScope.basePath&#125;client/bookServlet?action=page&amp;pageNo=&quot;</span>+pageNo;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        &lt;/script&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;%--静态包含页脚内容--%&gt;</span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;/pages/common/footer.jsp&quot;</span>%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>根据价格区间查询数据并分页：</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846971.png" alt="image-20220729004000962"></p>
<h2 id="第六阶段：登录登出"><a href="#第六阶段：登录登出" class="headerlink" title="第六阶段：登录登出"></a>第六阶段：登录登出</h2><h3 id="1、登录"><a href="#1、登录" class="headerlink" title="1、登录"></a>1、登录</h3><h4 id="a、显示用户名"><a href="#a、显示用户名" class="headerlink" title="a、显示用户名"></a>a、显示用户名</h4><h3 id="2、登出"><a href="#2、登出" class="headerlink" title="2、登出"></a>2、登出</h3><h4 id="a、注销用户"><a href="#a、注销用户" class="headerlink" title="a、注销用户"></a>a、注销用户</h4><p>1、销毁session中用户登录的信息（或者销毁session）</p>
<p>2、重定向到首页或者登录界面</p>
<h3 id="3、表单重复提交"><a href="#3、表单重复提交" class="headerlink" title="3、表单重复提交"></a>3、表单重复提交</h3><p>有三种常见情况：</p>
<figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、提交完表单，服务器使用请求转发来进行页面跳转，这个时候用户按下<span class="built_in">F5</span>功能键，就会发起最后一次的请求，造成表单重复提交问题。</span><br><span class="line">解决方法是使用重定向来进行页面跳转</span><br><span class="line"><span class="number">2</span>、用户正常提交服务器，但是由于网络延迟等原因，迟迟未收到服务器的响应，这个时候，用户以为提交失败，就会着急，然后多点了几次提交操作，也会造成表单重复提交</span><br><span class="line"><span class="number">3</span>、用户正常提交服务器，服务器也没有延迟，但是提交完成之后，用户回退浏览器，重新提交，也会造成表单重复提交</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">后两种因没有可直接解决的方法，后引入验证码，使用验证码防止用户恶意提交</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="a、验证码"><a href="#a、验证码" class="headerlink" title="a、验证码"></a>a、验证码</h4><p>验证码解决表单重复提交的底层原理</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846972.png" alt="image-20220729143942364"></p>
<h4 id="b、谷歌kaptcha图片验证码的使用"><a href="#b、谷歌kaptcha图片验证码的使用" class="headerlink" title="b、谷歌kaptcha图片验证码的使用"></a>b、谷歌kaptcha图片验证码的使用</h4><p>使用步骤如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">1、导入谷歌验证码的jar包（kaptcha-2.3.2.jar）</span><br><span class="line">2、在web.xml中去配置用于生成验证码的Servlet程序</span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>KaptchaServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.google.code.kaptcha.servlet.KaptchaServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>KaptchaServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/kaptcha.jpg<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">3、在表单中使用img标签去显示验证码图片并使用它</span><br><span class="line">验证码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 50px; &quot;</span> <span class="attr">name</span>=<span class="string">&quot;code&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://localhost:8080/bookTest/kaptcha.jpg&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:110px;height: 20px; &quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">4、在服务器获取谷歌生成的验证码，和客户端发送过来的验证码比较使用</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846973.png" alt="image-20220729155029866"></p>
<h3 id="4、购物车模块"><a href="#4、购物车模块" class="headerlink" title="4、购物车模块"></a>4、购物车模块</h3><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846975.png" alt="image-20220729163403162"></p>
<p>1、编写购物车模型</p>
<p>2、加入购物车功能的实现</p>
<p>3、购物车的展示</p>
<p>4、删除购物车商品项的功能</p>
<p>5、清空购物车</p>
<p>6、修改商品数量</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846976.png" alt="image-20220730093854413"></p>
<p>7、加入购物车提醒功能</p>
<h3 id="5、订单模块"><a href="#5、订单模块" class="headerlink" title="5、订单模块"></a>5、订单模块</h3><p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846977.png" alt="image-20220730105054765"></p>
<p>1、创建数据库表</p>
<p>2、编写对应实体类</p>
<p>3、编写dao和测试dao</p>
<p>4、编写service和测试service</p>
<p>5、配置web.xml</p>
<p>6、编写OrderServlet</p>
<p>7、修改页面</p>
<h2 id="第七阶段：权限检查"><a href="#第七阶段：权限检查" class="headerlink" title="第七阶段：权限检查"></a>第七阶段：权限检查</h2><p>1、使用过滤器拦截</p>
<p>2、ThreadLocal的使用</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">它可以解决多线程的数据安全问题</span><br><span class="line">ThreadLocal它可以给当前线程关联一个数据（可以是普通变量，可以是对象，也可以是数据，集合）</span><br><span class="line">特点：</span><br><span class="line"><span class="number">1</span>、ThreadLocal可以为当前线程关联一个数据（它可以是像<span class="built_in">Map</span>一样存储数据，key为当前线程）</span><br><span class="line"><span class="number">2</span>、每一个ThreadLocal对象，只能为当前线程关联一个数据，如果要为当前线程关联多个数据，就需要使用多个ThreadLocal对象实例</span><br><span class="line"><span class="number">3</span>、每个ThreadLocal对象实例定义的时候一般都是<span class="keyword">static</span>类型</span><br><span class="line"><span class="number">4</span>、ThreadLocal中保存数据，在线程销毁后，会由JVM虚拟自动释放</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846978.png" alt="image-20220730232955020"></p>
<p>3、使用Filter和ThreadLocal组合管理事务</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846979.png" alt="image-20220730235730414"></p>
<p>1、使用ThreadLocal确保所有操作对象都使用同一个连接对象</p>
<p>2、使用Filter统一给所有Service方法都加上try—catch，来实现事物的管理</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846980.png" alt="image-20220731002743596"></p>
<p>3、将所有异常都统一交给Tomcat，让Tomcat展示友好的错误信息页面</p>
<figure class="highlight lasso"><table><tr><td class="code"><pre><span class="line">在web.<span class="built_in">xml</span>配置错误页面跳转</span><br></pre></td></tr></table></figure>
<h2 id="第八阶段：AJAx"><a href="#第八阶段：AJAx" class="headerlink" title="第八阶段：AJAx"></a>第八阶段：AJAx</h2><p>1、使用Ajax验证用户名是否可用</p>
<p><img src="https://gitee.com/lin-xugeng/md-img/raw/master/img/202209141846981.png" alt="image-20220731010421892"></p>
<p>2、使用ajax修改加入购物车功能</p>
<h2 id="第九阶段："><a href="#第九阶段：" class="headerlink" title="第九阶段："></a>第九阶段：</h2><p>1、库存问题</p>
<p>2、其他模块</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> msg = $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;orderMsg&#x27;</span>);</span><br><span class="line"><span class="title function_">alert</span>(msg);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
  </entry>
</search>
